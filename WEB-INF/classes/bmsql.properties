################################################################################################################

sql.findByUsernameOrEmail=select loginid id, loginname, firstname, middlename, lastname, email1, password, membercatid, disabled, counter, coalesce (sc.descr, 'None')	sscatid from fo_member_m m left join fo_ss_login_m ss on ss.fo2login = m.loginid join fo_ss_category_m sc on sc.sscatid = ss.sscatid where loginname	= ? and locked = ? and (disabled is null or disabled = ?) and active = ? and m.status = ?
sql.findById=SELECT loginid id, loginname, firstname, middlename, lastname, email1, password FROM fo_member_m m LEFT JOIN fo_ss_login_m ss ON ss.fo2login = m.loginid JOIN fo_ss_category_m sc ON sc.sscatid = ss.sscatid WHERE     loginid = ? AND LOCKED = ? AND (disabled IS NULL OR disabled = ?) AND active = ? AND m.status = ?
sql.findBySSOId=select ss.fo2login, loginid id, loginname, firstname, middlename, lastname, email1,	password from fo_ss_login_m ss , fo_member_m m where ssologin = ? and m.loginid = ss.fo2login and m.LOCKED = ? and (m.disabled is null or m.disabled = ?) and m.active = ? and m.status = ?
sql.getUserNamePassword =SELECT	loginname,password,m.loginid FROM  fo_member_m m ,fo_ss_login_m s WHERE      s.ssologin = ? AND      m.loginid = s.fo2login


#sql.getJSONLeftPanelLinks = SELECT a.levelid levelid, b.linkid linkid, a.descr descr, a.parentid parentid, a.SOURCE SOURCE, b.l_operval operval, a.sortorder sortorder, b.status, a.image, a.imagetype, a.width, a.height, a.TYPE, current_date FROM (WITH RECURSIVE t AS (SELECT 1 as LEVEL, linkid, descr, parentid, SOURCE, operval, sortorder,status, image, imagetype, width, height, TYPE FROM fo_wf_links_m WHERE parentid = '0000' UNION ALL SELECT LEVEL+1 as level,t_2.linkid, t_2.descr, t_2.parentid, t_2.SOURCE, t_2.operval, t_2.sortorder,t_2.status, t_2.image, t_2.imagetype, t_2.width, t_2.height, t_2.TYPE FROM fo_wf_links_m AS t_2, t WHERE t.linkid = t_2.parentid ) SELECT LEVEL levelid,linkid, descr, parentid, SOURCE, operval, sortorder, status, image, imagetype, width, height, TYPE FROM t)a, (SELECT ud.linkid, ud.status, MAX (ud.operval) l_operval FROM fo_wf_userlinkgroup_d ud, fo_wf_userlinkgroup_m um WHERE um.loginid = ud.loginid AND um.linkgroupid = ud.linkgroupid AND um.loginid = ? AND um.PRMARY = 'Y' GROUP BY ud.linkid, ud.status) b WHERE a.linkid = b.linkid AND a.status = 'Y' AND b.status = 'Y' AND levelid = ?::INT
sql.getJSONLeftPanelLinks = select a.levelid levelid, b.linkid linkid, a.descr descr, a.parentid parentid, a.SOURCE source, b.l_operval operval, a.sortorder sortorder, b.status,    a.image, a.imagetype, a.width, a.height, a.TYPE, current_date from (with recursive t as ( select ARRAY[sortorder,linkid::numeric] AS hierarchy, 1 as    level, linkid, descr, parentid, source, operval, sortorder, status, image, imagetype, width, height, type from fo_wf_links_m where parentid = '0000'    union all select t.hierarchy||t_2.sortorder::numeric||t_2.linkid::numeric, level + 1 as level, t_2.linkid, t_2.descr, t_2.parentid, t_2.SOURCE,    t_2.operval, t_2.sortorder, t_2.status, t_2.image, t_2.imagetype, t_2.width, t_2.height, t_2.TYPE from fo_wf_links_m as t_2, t where t.linkid =    t_2.parentid ) select level levelid, linkid, descr, parentid, source, operval, sortorder, status, image, imagetype, width, height, type from t where    type <> 'T'   ORDER  BY  hierarchy)a, ( select ud.linkid, ud.status, max (ud.operval) l_operval from fo_wf_userlinkgroup_d ud, fo_wf_userlinkgroup_m um    where um.loginid = ud.loginid and um.linkgroupid = ud.linkgroupid and um.loginid = ? and um.PRMARY = 'Y' group by ud.linkid, ud.status) b where a.linkid    = b.linkid and a.status = 'Y' and b.status = 'Y'

sql.getHQClientFirms = with recursive t as ( select 1 as level, companyid, cparentid, companycatid , status, parentid, gfcid, companyname from fo_company_m cm where companyid = ? union all select level + 1 as level, t_2.companyid, t_2.cparentid, t_2.companycatid , t_2.status, t_2.parentid, t_2.gfcid, t_2.companyname from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select level, companyid, gfcid, companyname from t where (parentid in ( select companyid from fo_company_m where companycatid = ?) or parentid = '0000' ) and status = ? and companycatid = ? order by level
sql.getSelectedCompanyDetails = SELECT companyid, companyname, shortname, companycatid, parentid, taxid, companytypeid, companyrating, routingnumber, gfcid, amcname, tzcode, dateformat, starttradingtime, endtradingtime, dbdateformat, bolocation, abanbr, tzdefault, agrmtimpl, createddate, createdby, modifieddate, modifiedby, cparentid, status, legalentity, ctsacctnbr, custodynbr, isglobal, swcode, swmsgmode, backoffcode, jobtime, companynbr, currency, language, nameusage, regionid, corptypeid, userentity, dealercode, acctstructypeid,mcprocessid,  deskemail, nature FROM fo_company_m WHERE companyid=? AND status in (?,?)
sql.getClientTradeDeskId = WITH RECURSIVE t AS (SELECT companyid,parentid,companycatid FROM fo_company_m cm WHERE companyid = ? UNION ALL SELECT t_2.companyid,t_2.parentid, t_2.companycatid FROM fo_company_m AS t_2, t WHERE t.parentid = t_2.companyid ) SELECT companyid FROM t WHERE companycatid = ?
sql.getJavaTimeZone = SELECT javatzcode FROM fo_timezone_m WHERE tzcode = ?
sql.getMemberInfoSql = SELECT c.dbdateformat format, c.dateformat dformat FROM fo_company_m c, fo_member_m m WHERE UPPER(m.loginname) = UPPER(?) AND m.companyid=c.companyid
sql.getMemberInfo = SELECT m.companyid, m.roletypeid, m.membercatid, u.description, c.companycatid, m.loginid, r.roledesc, m.passwordexpdate, firstname, middlename, lastname, m.language, locale, m.linkgroupid, to_char(m.lastlogintime,'dd/mm/yyyy hh24:mi:ss') logintime,(SELECT javatzcode FROM fo_timezone_m tm WHERE tm.tzcode = c.tzcode and tm.status = 'Y' )tzcode FROM fo_member_m m, fo_company_m c, fo_usercategory_m u, fo_roletypes_m r WHERE m.companyid=c.companyid AND r.roletypeid=m.roletypeid AND m.loginname= ? AND m.membercatid=u.membercatid
sql.getStyleForLogins = SELECT a.refcode, a.sscatid, a.showheader, a.showfooter, a.showlogout, b.ssologin FROM fo_ss_category_m a, fo_ss_login_m b WHERE a.sscatid = b.sscatid AND b.fo2login = ? AND b.status = ? AND a.status = ?
sql.getLinkId = SELECT linkid FROM fo_wf_links_m WHERE image = ? AND status = 'Y'
sql.getOperval = SELECT operval FROM fo_wf_userlinkgroup_d WHERE linkid = ? AND loginid = ? AND linkgroupid = ( SELECT a.linkgroupid FROM fo_wf_userlinkgroup_m a, fo_wf_linkgroup_m b WHERE a.loginid = ? AND a.linkgroupid = b.linkgroupid AND b.companyid = ? AND a.status = 'Y' ) AND status = ?
sql.setUserAuditTrack = INSERT INTO fo_auditLog_d (loginid, accesstime,image, screenname,processid,action,status ) VALUES (?,?::timestamp,?,?,?,?,?)
sql.isLastRecordLogout=select image from fo_auditLog_d where loginid=? order by accesstime desc,image asc
sql.setMCBuildProcessData=insert into fo_mc_buildprocess_m(processid,itemid,linkid,companyid,parentcompanyid,loginid,prodid,parentprodid,groupid,status,"type","action",description,legalentityid,acctnbr,exempt,filters,oldvalues,newvalues,originalvalues,createdby,createddate)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_json(?::json),to_json(?::json),to_json(?::json),to_json(?::json),?,?)
sql.getIntDivPayoutAccount	= 	SELECT	toacctnbr FROM	fo_acct_association_m WHERE	groupid = ? AND	fromacctnbr = ? AND	fromaccttype = ? AND	toaccttype = ? AND intposttypeid= ?
sql.getHQClientFirms=WITH RECURSIVE t AS (SELECT 1 as level,companyid,cparentid,companycatid ,status,parentid,gfcid,companyname FROM fo_company_m cm WHERE companyid = ? UNION ALL SELECT level+1 as level, t_2.companyid, t_2.cparentid, t_2.companycatid ,t_2.status,t_2.parentid,t_2.gfcid,t_2.companyname FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.cparentid ) SELECT LEVEL,companyid,gfcid,companyname FROM t where (parentid IN (SELECT companyid FROM fo_company_m WHERE companycatid = ?) OR parentid = '0000' ) AND status= ? AND companycatid= ? order by level

sql.getAcctBal = SELECT a.endbal, a.beginbal, a.netbal, a.endshares, a.beginshares, a.netshares, a.mtd, a.mtda, a.ismonthend, a.endint, a.beginint, a.netint, a.createddate createddate, a.wrate, a.beginrevenue, a.netrevenue, a.endrevenue, b.acctnatureflag ,a.AVAILABLEBAL, a.AVAILABLESHARES FROM   fo_acct_dailybal_m a, fo_accountmaster_m b WHERE  a.escrowacctnbr = b.acctnbr and a.groupid        = ? AND    a.acctnbr        = ? AND    a.transtype = ? AND    a.accttypeid     = ? AND    a.escrowacctnbr  = ? AND    b.acctnbr 	= ?
sql.getProductTradeDeskId = SELECT DISTINCT    a.companyid FROM   fo_company_m a, fo_group_m b WHERE  b.companyid = a.companyid AND    b.prodid= case when ? = ? then b.prodid else ? end AND a.companycatid = ?
sql.getProductParametersone = SELECT	p.groupid, transtype ,      mintradesize,    maxtradesize,    amtdecimals,     ccyroundtype, ratedecimals,    stlmodel,	  stlmethod,	  sddabal,	  sddabalb,	  sddabalt,	  escrow,       seacct,       seacctb,      seacctt,      begintime,       endtime,         cutofftime,      ticketgenid,     respondtime,     settlementdate,  rateconv,        tradeprocessing, rollovercutoff,  stpmaxamt,      dealingcutoff, todayscutoff,    rrcheck,         ticketformat,    settlementloc,   spotvalue,       minmaturity,     maxmaturity,     basecurrency,    settlementcurrency, daybasis,        spotimplemented, interpolation,   cfaforreject,    cfaforaccept,    baserate,        sptrade,         prodtype,        mkttype,         rolloverimplemented,    unitid,          tradeticket, timeout,	 isratesensitive, breditable,	 breapproval, holdfvdd,	 releasetime, taxon,		 mncr,		 mxcr,		 tpcr,		 tpzm,		 intposttypeid, ipreleasetype, matrelease,	 maturitystatus, ipreleasetime, trdsettlereleasetime, internalendtime, internaltodayscutoff, internalrollovercutoff, internalbegintime, producttype, parentprodid, autoupdte,	 autorollover, pledged	,	 pldgspmargin, taximplemented, autorollreltime, todactive,	 tomactive,	 spotactive,	 recap,		  csai,		  alrdmdda,	  rollovertype,	 ackprocess,	        ackprdays,	        uart,	   	 uarb,	   	 uarc,	   	 ndaf,	   	 ccot,	   	 atnt,	   	 genacctype,	    prdprsr,	    chmmfacbal,	    TO_CHAR(modifieddate,  'MON DD, YYYY HH24:MI:SS')   AS modifieddate, ecbt,	   	 iart,	   	 astl,	   	 fatca,	   	 setspecday,	    trdsetday,	    earlyterm,	    allowextclttrd, isnegflag,	 nratex,		 mtdpayout,	 backup,	   	 nonbreakage,    smmfnrtc	    FROM	fo_productparameter_m  p,  fo_group_m g     WHERE	p.groupid = g.groupid   AND	g.status = 'Y'   AND	p.groupid = ? AND	transtype = ? ORDER BY groupid,    transtype
sql.getEndSpecialCutOffTime = SELECT endtime FROM   fo_pr_cutofftimes_m WHERE  groupid = ? AND	transtype = ? AND	status = 'Y' AND	cutoffdate = ?
sql.getFundGroupDeskParams = SELECT todayscutoff, internaltodayscutoff, m.cutofftime FROM fo_productparameter_m p RIGHT OUTER JOIN fo_group_m g ON (g.groupid =  p.groupid) , fo_mmf_fund_m m WHERE m.fundnbr = g.prodid AND g.prodid = ? AND todayscutoff IS NOT NULL AND m.cutofftime IS NOT NULL AND  internaltodayscutoff IS NOT NULL
sql.getDeskWeekEnds = SELECT    dayid, groupid FROM    fo_pr_holiday_m WHERE  groupid = ?
sql.getHolidaysForGroupId = SELECT  TO_CHAR(hdate,c.dbdateformat) holiday, a.groupid, c.dbdateformat FROM    fo_holiday_m b, fo_group_m a, fo_company_m c WHERE   a.groupid =    b.groupid AND     a.companyid = c.companyid AND      b.hdate>= FN_GET_GROUP_TZTIME(a.groupid)- ?::INTERVAL AND        a.status = 'Y' AND	    c.status = 'Y' AND        a.groupid = ? ORDER BY hdate
sql.getTotalRedeem = SELECT sum(case when mmftrmode = 'A' then dollaramount else shares* (case when ack1time is null then fn.nav else t.nav end) end ) dollaramt FROM fo_trading_t t, fo_mmf_fund_m fn, FO_PRODTRANS_M pt where t.prodid = fn.fundnbr and pt.PRODID = t.PARENTPRODID and pt.TRANSTYPEID = t.TRANSTYPE and fn.status = 'Y' AND transtype IN (?,?) AND escrowacctnbr = ? AND tradestatus in ( 'A' ,'K') and ack5time IS NULL
sql.isItTradingMMFAccount = SELECT	at.status, at.acctmode FROM	fo_acct_tracksettlemethod_m at,	 	(SELECT	acctnbr, max(timestamp)   tstamp FROM	fo_acct_tracksettlemethod_m	  WHERE 	acctnbr = ?  GROUP BY acctnbr ) am WHERE	 at.acctnbr = ?	  AND	 at.acctnbr = am.acctnbr  AND	 at.timestamp = am.tstamp
sql.getSettleAccountDetails = SELECT     acctnbr, a.companyid, refacctnbr, acctname, a.accttypeid, a.parentid, a.status, remarks, a.createddate, a.createdby, a.modifieddate mdate,    a.modifiedby, ssiid, settleid, location, bankid, bankname, bankcode, location, institution, a.legalentity, b.companyname, a.paymode,    a.ddaparent, a.customerid ,sortcode FROM    fo_company_m b,   fo_settlementaccounts_m a WHERE      acctnbr= ? AND        a.companyid=b.companyid
sql.getGroupDetails = SELECT prodid,currencycode, companyid  FROM   fo_group_m WHERE  groupid  = ?   AND    status   = ?
sql.getGlobalParameters = SELECT paramname, paramvalue FROM   fo_global_parameters_m WHERE  status = 'Y'
sql.getUserRoleByCompany = SELECT    loginid , mcroleid FROM    fo_mc_memberrole_m WHERE    loginid =? AND    companyid = ? AND    status = 'Y'
sql.getTradingDeskForClient = WITH  RECURSIVE t  AS  (SELECT companyid,parentid,companycatid FROM fo_company_m cm  WHERE companyid = ?  UNION ALL  SELECT t_2.companyid,t_2.parentid, t_2.companycatid FROM fo_company_m AS t_2, t WHERE t.parentid = t_2.companyid  ) SELECT companyid   FROM t WHERE companycatid = ?
sql.getDeskProductParameter = select p.groupid,p.transtype,	ratedecimals,	amtdecimals,	ccyroundtype from fo_productparameter_m p,fo_group_m g where p.groupid = g.groupid and g.status = 'Y' and g.companyid =? order by groupid,transtype
sql.getBusinessEntitiesByLoginId = with recursive t as (select companyid,gfcid,companyname ,parentid,companycatid,status from fo_company_m cm where companyid in (select companyid from fo_up_company_m where loginid = ? and status = 'Y' and companyid = companyid and companyid not in (select companyid from fo_company_m where companycatid = '100'))union all select t_2.companyid,t_2.gfcid,t_2.companyname,t_2.parentid,t_2.companycatid,t_2.status from fo_company_m as t_2,t where t.parentid = t_2.companyid) select distinct companyid,gfcid,companyname,parentid, upper(trim(companyname)) ucompanyname from t where companycatid = ? and status = 'Y' order by ucompanyname
sql.getClientFirmsByEntity = select a.companyid,a.gfcid,a.companyname,b.legalentity,a.parentid from fo_company_m a, fo_accountmaster_m b where a.companyid = b.companyid and (b.legalentity = ? or a.parentid = ? ) and companycatid = ? and a.status = 'Y' and b.status = 'Y' and accttypeid = 'I'  order by companyname
sql.getSalesPersons = SELECT DISTINCT salespersonid, firstname || ' ' || lastname salespersonname, branchid, phone1 spphone FROM    fo_spclient_d s,	fo_member_m m WHERE    s.prodid       =? AND    s.salespersonid= m.loginid AND    s.acctnbr     = ? AND    s.status      = ?
sql.isValidAccount = SELECT	at.status, at.acctmode FROM	fo_acct_tracksettlemethod_m at, ( SELECT    acctnbr, max(timestamp)   tstamp FROM fo_acct_tracksettlemethod_m WHERE     acctnbr = ? GROUP BY acctnbr ) am WHERE     at.acctnbr = ? AND     at.acctnbr = am.acctnbr AND	at.timestamp = am.tstamp

sql.getAccountBalance = SELECT endbal, beginbal, netbal, beginshares, endshares, netshares, groupid,acctnbr, transtype, mtd, mtda, ismonthend,endint,beginint,netint,createddate createddate,wrate, beginrevenue,   netrevenue,   endrevenue, availablebal, availableshares,nav ,navType FROM   fo_acct_dailybal_m   WHERE  deskid        = ?	  AND    prodid        = ?	  AND    escrowacctnbr  = ?
sql.getMMFParamDetails = SELECT	amtdecimals, period, monthend, dayfactor, dailyfactor, processing, nodays, fundinstructions, dailydivby, recapitalizeby, reckepid, recap, posted, posteddate  FROM    fo_mmf_parameter_m WHERE    fundnbr = ?
sql.getGroupId = SELECT groupId FROM   fo_group_m WHERE  companyid = ? AND    prodid = ? AND    currencycode = ? AND    status = ?
sql.getClientBranchProductGroupIds = select (SELECT  groupid FROM fo_group_m where companyid = ? AND prodid  = ? AND currencycode  = ?)clientpermssion,(SELECT  groupid FROM fo_group_m where companyid = ? AND prodid  = ? AND currencycode  = ?)clientparentproductpermssion,(SELECT  groupid FROM fo_group_m where companyid = ? AND prodid  = ? AND currencycode  = ?)clientbranchpermssion
sql.setRequiredMCMakerChecker = select count(*)cnt from fo_mc_tradeparameters_m   WHERE  companyid  = ?	and mcroleid = '20'	and currencycode = 'ALL'
sql.setRequiredMCMakerCheckerDelete = delete from fo_mc_tradeparameters_m  WHERE  companyid  = ?	and mcroleid = '20'
sql.setRequiredMCMakerCheckerInsert = INSERT INTO fo_mc_tradeparameters_m(companyid, currencycode, mcroleid,ordernbr,amount,createdby,createddate,nature) VALUES(?,?,?,?,?,?,?,? )
sql.setDraftStatus = UPDATE    fo_draft_d SET    status = ? WHERE    draftid = ?
sql.getTotalRedeemCount = SELECT count(*) cnt FROM   fo_trading_t WHERE  escrowacctnbr = ? AND	tradestatus = 'A' AND	endbal = 0 AND    transtype = ?
sql.getMCRole = SELECT	roletypeid, membercatid, companyid FROM	fo_member_m WHERE	loginid=?
sql.getMCRoleTypes = SELECT mcroleid , FN_GET_LANG(?,?,mcroleid) descr FROM   fo_mc_roles_m WHERE  status    ='Y' ORDER BY ordernbr
sql.getMemberInfoByCompanyId = SELECT loginid, loginname, firstname, lastname FROM   fo_member_m WHERE  companyid =? AND    status = ?
sql.getMemberDetails = select m.loginname, m.companyid, m.membercatid, m.firstname, m.lastname, m.middlename,	m.phone1, m.phone2, m.fax, m.pager, m.email1, m.email2, m.active, m.locked, m.counter, m.disabled, m.digitalloginid, m.passwordhint, m.passwordanswer, m.passwordexpdate, m.roletypeid, m.itc, m.password, m.style, m.locale, m.language, m.loginid, m.createddate, m.createdby, m.modifieddate, m.modifiedby, m.status , m.nature , m.linkgroupid, m.mcprocessid processid, c.parentid,c.companycatid from fo_member_m m, fo_company_m c where m.companyid = c.companyid and loginid = ? and m.status != 'R'

sql.checkCompUserProdCcyPerm = SELECT status FROM   fo_up_company_m WHERE  loginid = ? AND    companyid = ?
sql.checkCompUserProdCcyPermOne = SELECT status FROM   fo_group_m WHERE  companyid =? AND    prodid=? AND    currencycode=?
sql.checkCompUserProdCcyPermTwo = SELECT status FROM   fo_up_product_d WHERE  loginid=? AND    groupid=?
sql.checkCompUserProdCcyPermThree = SELECT groupid FROM   fo_group_m WHERE  companyid =? AND    prodid=? AND    status='Y'
sql.getParentIds = select companyid from ( WITH  RECURSIVE t  AS  (SELECT companyid,parentid FROM fo_company_m cm WHERE companyid = ?   UNION ALL SELECT t_2.companyid,t_2.parentid   FROM fo_company_m AS t_2, t  WHERE t.parentid = t_2.companyid  ) SELECT companyid   FROM t)a  UNION select companyid from (WITH  RECURSIVE t1  AS  (SELECT companyid,cparentid  FROM fo_company_m comp WHERE companyid = ?   UNION ALL   SELECT t_3.companyid,t_3.cparentid  FROM fo_company_m AS t_3, t1 WHERE t1.cparentid = t_3.companyid ) SELECT companyid   FROM t1 )b
sql.getGroupIds = SELECT  groupid FROM fo_group_m where companyid = ? AND prodid  =? AND currencycode  =?
sql.getBranchDeskCompanies = SELECT DISTINCT companyid, gfcid,companyname, UPPER (TRIM (companyname)) AS ucompanyname,   parentid  FROM fo_company_m cm   WHERE  status = 'Y'  AND companyid IN  ( SELECT cm.parentid   FROM fo_up_company_m up ,fo_company_m cm   WHERE loginid = ? AND up.status = 'Y'  and cm.COMPANYID = up.companyid  and cm.COMPANYCATID = ?      and cm.status = 'Y' )    ORDER BY ucompanyname
sql.getAssocFirms = SELECT a.companyid    companyid,  b.companyname  companyname,  b.parentid   parentid   FROM   fo_up_company_m a,  fo_company_m b  WHERE  a.companyid = b.companyid  AND    a.status = ? AND    a.loginid = ?
sql.getChildCompanies = WITH RECURSIVE t (companyid)  AS (SELECT  companyid  FROM fo_company_m  WHERE companyid = ?   UNION ALL SELECT   t_2.companyid   FROM fo_company_m AS t_2, t   WHERE t.companyid = t_2.cparentid)   SELECT   companyid   FROM t
sql.getProductDetails = SELECT     prodid,prodname,prodcode,   prodtype, parentid, status, refprodid, balinttype, prodtagging FROM fo_product_m WHERE      prodid=? AND        status='Y'
sql.getAssociatedCompProdCurrencies = SELECT     distinct  a.currencycode, a.currencyname,   a.currencysymbol FROM fo_currency_m  a, fo_group_m b WHERE a.currencycode = b.currencycode AND b.companyid =   ( case ? when ? then b.companyid else ? end ) AND b.prodId    =    ( case ? when ? then b.prodId else ? end )  AND b.status    = 'Y'  AND        a.status    = 'Y'
sql.getClientAccounts = SELECT	DISTINCT acctnbr FROM	fo_spclient_d    WHERE	clientcompanyid    = ?   AND	deskId = ? AND	prodid         = ?       AND	multitradeflag = ?      AND	status = ?
sql.getBarklaysActualDDAAccount = SELECT acctnbr FROM   fo_settlementaccounts_m WHERE  refacctnbr  = ?  AND    companyid   = ?  AND    accttypeid   = ?   AND    status  = ?
sql.setMCTrades = INSERT INTO fo_mc_trading_t (transid, mcroleid,	ordernbr, status,tradetype) VALUES  (  ?,?,?::numeric, ?,?  )
sql.setCostAndChargesOne = insert into fo_trade_costs_fees_m select ? transid,fundname,fundcode,units,amount,currency,scpercent,  scAmount,scOneOff,pcpercent,pcAmount,pcOneOff,tcOneOff,  growthRate,beforededuction,afterdeduction,cumulativecostofreturn, cumulativecostofreturnpercent,jsonobj from fo_trade_costs_fees_temp_m   where screenid = ?
sql.setCostAndChargesTwo = insert into fo_trade_costs_fees_d select ? transid,costtypeid,feetypeid,percent,val from fo_trade_costs_fees_temp_d  where screenid=?
sql.getFundDetails = SELECT  reffundnbr AS REFFUNDNBR, funddesc AS FUNDDESC, cutofftime AS CUTOFFTIME, portfolio AS PORTFOLIO, profitcenter AS PROFITCENTER, rating AS     RATING, noofshares AS NOOFSHARES, settlementdate AS JAVATIMEZONE, coalesce(nav,1) AS NAV, b1fees AS B1FEES, processingtype AS PROCESSINGTYPE, fundcode     AS FUNDCODE, currencycode AS CURRENCYCODE, cusip AS CUSIP, maxamt AS MAXIMUMAMOUNT, a.status AS STATUS, a.dmid AS DMID, b.desr AS DESCR, familyid AS     FAMLYID, navtype,internalcode ,sedol ,fractionalSharePolicy FROM fo_mmf_domicile_m b, fo_mmf_fund_m a WHERE fundnbr = ? AND a.dmid = b.dmid
sql.checkUserLevelAuditLog = select m.loginid, m.loginname from fo_auditLog_m m where m.loginid = ? and m.status = ?
sql.getReactDefaultSortedHeaders = SELECT objectname, displayname, sortorder, datatype, headerwidth, align, maxchars,  label, isfilter, isdisplay, ishyperlink, hinttxt  FROM   fo_pd_sp_category_d  WHERE  catid = ?   AND   isfixed = 'Y' and isdisplay in ('Y','E','N')  ORDER BY   sortorder
sql.getMCProcess = SELECT enabled FROM   fo_mc_process_d WHERE  companyid = ? AND    processid = ?
sql.setLoginTime = UPDATE fo_member_m	SET	lastlogintime = ? WHERE	loginid = ?
sql.getPendingTrdForClient = SELECT * FROM (SELECT a.*, ROW_NUMBER() OVER(ORDER BY transdate desc) rnum FROM ( SELECT DISTINCT b.transid,'todays' whereToGet, (select fundcode from fo_mmf_fund_m p where p.fundnbr = a.prodid) isin, coalesce ((select companyname from fo_company_m where companyid in (select providerid from fo_mmf_fund_m p where p.fundnbr = a.prodid) and companycatid='600'),'N/A') fundprovider, DATE_PART('day',a.transdate - a.settlementdate)::bigint datediff, companyname, b.ordernbr, ( case a.createdby when ? then 'disabled' else case b.mcroleid when c.mcroleid then 'enabled' else 'disabled' end end ) as mcaction , a.createdby, a.username, eccompanyid, ac.refacctnbr investmentaccount, ( case a.parentprodid when '1700' then a.refacctnbr when '2000' then a.refacctnbr end ) as refacctnbr , ( case a.transtype when '85' then -coalesce (dollaramount, 0) when '95' then -coalesce (dollaramount, 0) else coalesce (dollaramount, 0) end ) as dollaramount , shares , a.ppno, a.prodid, a.parentprodid, FN_GET_LANG(?,?,a.prodid)issuername, a.currencycode, version, fundacct, transdate, maturitydate, a.modifydate, a.pledgedate, a.approvedtime, a.settlementdate, a.transtype, a.iexc, a.unitid, interestamount, pandi, interestrate, webreference, duration , p.amtdecimals, p.ccyroundtype, p.ratedecimals, g.groupid, a.branchid, a.deskid, a.timezone, a.tenorcode,a.mmftrmode, a.navtype, a.amtpending, ( case b.transid when ( select prcd FROM fo_notification_d where prcd= b.transid and loginid = ? ) then 'R' else 'U' end ) as readflag , count(*) over() cnt FROM fo_trading_t a, fo_group_m g, fo_accountmaster_m ac, fo_productparameter_m p, fo_mc_trading_t b, (SELECT MIN(m.ordernbr) ordernbr, m.transid FROM fo_mc_trading_t m, fo_trading_t t WHERE m.transid = t.transid AND t.eccompanyid = ? AND m.status = ? GROUP BY m.transid ) t, fo_mc_memberrole_m c WHERE b.transid= a.transid AND a.eccompanyid=? AND ac.acctnbr = a.investmentaccount AND b.status=? AND b.transid = t.transid AND b.ordernbr = t.ordernbr AND a.eccompanyid = c.companyid AND c.loginid = ? AND g.companyid = a.deskid AND g.prodid = a.prodid AND g.currencycode = a.currencycode AND g.groupid = p.groupid and p.transtype= ( CASE a.transtype WHEN ? THEN ? WHEN ? THEN ? WHEN ? THEN ? ELSE a.transtype END ) ) as a ) as alias
sql.getCostandChargesMapDet = select fm.costtypeid, fm.feetypeid,  fm.costtypeid||fm.feetypeid id,  f.feename,  fm.costtypeid||fm.feetypeid||'DESCR' feedescr, COALESCE (nullif(fd.val,''),'0') val,fm.costtypeid,fm.feetypeid from fo_fee_type_m f, fo_cost_type_m c, fo_fee_cost_m fm  left outer join fo_costs_fees_d fd on  ( fd.costtypeid=fm.costtypeid and fd.feetypeid=fm.feetypeid and  fd.fundnbr=?) where F.feetypeid=fm.feetypeid and fm.status='Y'  and c.costtypeid=fm.costtypeid  order by fm.costtypeid,fm.sortorder,fm.feetypeid
sql.insertCostAndChargesValues = INSERT INTO fo_trade_costs_fees_temp_m( screenid, fundname, fundcode, units, amount, currency, scpercent, scAmount, scOneOff, pcpercent, pcAmount, pcOneOff, tcOneOff, growthRate, beforededuction, afterdeduction, cumulativecostofreturn, cumulativecostofreturnpercent, jsonobj )VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,to_json(?::json))
sql.insertCostAndChargesValuesSql = INSERT INTO fo_trade_costs_fees_temp_d  (screenid, costtypeid, feetypeid,percent, val) VALUES      (?, ?,?,?, ?)
sql.saveOrderEntryDraftUpdate = update  fo_draft_d   set draftname = ?, jsonobj = to_json(?::json) where  draftid = ?
sql.saveOrderEntryDraftInsert = INSERT INTO fo_draft_d (draftid, clientfirm, draftname, screenname, jsonobj, createdby, createddate, status) VALUES (?, ?, ?, ?, to_json(?::json), ?, ?,?)
sql.getMakerCheckers = SELECT	t.mcroleid, t.loginid, t.apprejtime, (m.firstname || ' ' || m.lastname) username FROM	fo_mc_trading_t t, fo_member_m m  WHERE    transid = ? AND t.loginid = m.loginid
sql.resetTradeStatus = UPDATE	fo_trading_t SET	tradestatus = ?, rejectreason = ? WHERE	transid = ? AND	version = ?
sql.updateTradeStatus = UPDATE	fo_trading_t SET	tradestatus = ? WHERE	transid = ?
sql.getTradeHistoryForClientForBranch = select tradetypedesc, companyname, webreference, isin, fundprovider, ISSUERNAME, PARENTPRODID, navtype, tradeType, transtype, shares, deskid, branchid, deskgroupid, DOLLARAMOUNT, CURRENCYCODE, mmftrmode, TRANSID, iapproval, TICKETSTATUS, tradestatus, transdate, SETTLEMENTDATE, ( select count(*) from fo_trade_costs_fees_m tf where tf.transid = v.transid) tradecostsfeesCnt , backOffDealNbr, PRODDESC , DATEDIFF, whattoget , cnt, rnum from ( select b.*, ( select target from fo_ml_item_d where itemid = '10000001' and locale = coalesce(trim('en_US'), 'en_US') and source = prodid ) issuername, date_part('day', transdate - settlementdate)::bigint datediff, count(*) over() as cnt, row_number () over ( order by tradeTime desc ) rnum from ( select phone1, ( select fundcode from fo_mmf_fund_m p where p.fundnbr = a.prodid) isin, coalesce (( select companyname from fo_company_m where companyid in ( select providerid from fo_mmf_fund_m p where p.fundnbr = a.prodid) and companycatid = '600'), 'N/A') fundprovider, a.*, case when tradetype in ('R', 'B', 'F', 'D', 'I') then case when membercatid = '4' then 'Regular - Self Service' else 'Regular - Desk' end else 'Sweep' end tradetypedesc, case when a.parentprodid = '1700' and a.tradetype != 'I' and (( select stlmodel from fo_productparameter_m p, fo_group_m g where p.groupid = g.groupid and g.companyid = a.deskid and g.prodid = a.prodid and g.currencycode = a.currencycode) not in ('1001', '1015', '1016', '1020')) then case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null and ack5time is not null then 'Confirmed' else case when a.transtype = '10' then case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end else case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null then 'Confirmed' else case when a.tradestatus = 'A' and ack1time is not null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack2time is null then 'WA' else case when a.tradestatus = 'A' and ack2time is not null then 'Confirmed' else a.tradestatus end end end end end ticketStatus, ( select groupId from fo_group_m where companyid = a.deskid and prodid = a.prodid and currencycode = a.currencycode and status = 'Y' ) deskgroupid from ( select dollaramount, interestrate, transdate, transDate tradeTime, settlementdate, maturitydate, tradestatus, transtype, eccompanyid, transid, prodid, paymentinstructions, acctnbr, currencycode, acctname, settlementacctnbr, parentprodid, interestamount, pandi, companyname, deskid, branchid, refacctnbr, username, prodtype, escrowacctnbr, webreference, ack1time, ack2time, shares, nav, navtype, iapproval, createdby, tradetype, ack5time , mmftrmode, proddesc , 'history' whattoget , case when ack1time is not null and ack2time is not null and ack5time is not null and tradestatus = 'A' then backoffdealnbr else '' end backoffdealnbr from fo_simult_t where ( transdate :: DATE between ?::DATE and ?::DATE) and eccompanyid in ( with recursive t as ( select companyid, cparentid, companycatid from fo_company_m cm where companyid = ? union all select t_2.companyid, t_2.cparentid, t_2.companycatid from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select companyid from t where companycatid = '500') and parentprodid = '1700' and tradestatus in ('A', 'C', 'P', 'D', 'R', 'M', 'E', 'O', 'W', 'F', 'K') and tradestatus = ( case when tradetype = 'B' then ( case when tradestatus = 'D' then tradestatus when tradestatus = 'A' then tradestatus when tradestatus = 'W' then tradestatus end ) else tradestatus end ) and tradetype = ( case 'ALL' when 'ALL' then tradetype else 'ALL' end ) union all select dollaramount, interestrate, transdate, transDate tradeTime, settlementdate, maturitydate, tradestatus, transtype, eccompanyid, transid, prodid, paymentinstructions, acctnbr, currencycode, acctname, settlementacctnbr, parentprodid, interestamount, pandi, companyname, deskid, branchid, refacctnbr, username, prodtype, escrowacctnbr, webreference, ack1time, ack2time, shares, nav, navtype, iapproval, createdby, tradetype, ack5time, mmftrmode, proddesc , 'todays' whattoget , case when ack1time is not null and ack2time is not null and ack5time is not null and tradestatus = 'A' then backoffdealnbr else '' end backoffdealnbr from fo_trading_t where ( transdate :: DATE between ?::DATE and ?::DATE) and eccompanyid in ( with recursive t as ( select companyid, cparentid, companycatid from fo_company_m cm where companyid = ? union all select t_2.companyid, t_2.cparentid, t_2.companycatid from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select companyid from t where companycatid = '500') and parentprodid = '1700' and tradestatus in ('A', 'C', 'P', 'D', 'R', 'M', 'E', 'O', 'W', 'F', 'K') and tradestatus = ( case when tradetype = 'B' then ( case when tradestatus = 'D' then tradestatus when tradestatus = 'A' then tradestatus when tradestatus = 'W' then tradestatus end ) else tradestatus end ) and tradetype = ( case 'ALL' when 'ALL' then tradetype else 'ALL' end ) ) a left outer join fo_member_m m on (m.loginid = a.createdby) where coalesce(m.membercatid, '0') in ('0', '2', '3', '4') ) b ) v order by transdate desc
sql.getTradeHistoryForClientForCompany = select tradetypedesc, companyname, webreference, isin, fundprovider, ISSUERNAME, PARENTPRODID, navtype, tradeType, transtype, shares, deskid, branchid, deskgroupid, DOLLARAMOUNT, CURRENCYCODE, mmftrmode, TRANSID, iapproval, TICKETSTATUS, tradestatus, transdate, SETTLEMENTDATE, ( select count(*) from fo_trade_costs_fees_m tf where tf.transid = v.transid) tradecostsfeesCnt , backOffDealNbr, PRODDESC , DATEDIFF, whattoget , cnt, rnum from ( select b.*, ( select target from fo_ml_item_d where itemid = '10000001' and locale = coalesce(trim('en_US'), 'en_US') and source = prodid ) issuername, date_part('day', transdate - settlementdate)::bigint datediff, count(*) over() as cnt, row_number () over ( order by tradeTime desc ) rnum from ( select phone1, ( select fundcode from fo_mmf_fund_m p where p.fundnbr = a.prodid) isin, coalesce (( select companyname from fo_company_m where companyid in ( select providerid from fo_mmf_fund_m p where p.fundnbr = a.prodid) and companycatid = '600'), 'N/A') fundprovider, a.*, case when tradetype in ('R', 'B', 'F', 'D', 'I') then case when membercatid = '4' then 'Regular - Self Service' else 'Regular - Desk' end else 'Sweep' end tradetypedesc, case when a.parentprodid = '1700' and a.tradetype != 'I' and (( select stlmodel from fo_productparameter_m p, fo_group_m g where p.groupid = g.groupid and g.companyid = a.deskid and g.prodid = a.prodid and g.currencycode = a.currencycode) not in ('1001', '1015', '1016', '1020')) then case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null and ack5time is not null then 'Confirmed' else case when a.transtype = '10' then case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end else case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null then 'Confirmed' else case when a.tradestatus = 'A' and ack1time is not null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack2time is null then 'WA' else case when a.tradestatus = 'A' and ack2time is not null then 'Confirmed' else a.tradestatus end end end end end ticketStatus, ( select groupId from fo_group_m where companyid = a.deskid and prodid = a.prodid and currencycode = a.currencycode and status = 'Y' ) deskgroupid from ( select dollaramount, interestrate, transdate, transDate tradeTime, settlementdate, maturitydate, tradestatus, transtype, eccompanyid, transid, prodid, paymentinstructions, acctnbr, currencycode, acctname, settlementacctnbr, parentprodid, interestamount, pandi, companyname, deskid, branchid, refacctnbr, username, prodtype, escrowacctnbr, webreference, ack1time, ack2time, shares, nav, navtype, iapproval, createdby, tradetype, ack5time , mmftrmode, proddesc , 'history' whattoget , case when ack1time is not null and ack2time is not null and ack5time is not null and tradestatus = 'A' then backoffdealnbr else '' end backoffdealnbr from fo_simult_t where ( transdate :: DATE between ?::DATE and ?::DATE) and eccompanyid in ( with recursive t as ( select companyid, cparentid, companycatid from fo_company_m cm where companyid in ( select companyid from fo_accountmaster_m where legalentity = ? and status = 'Y') union all select t_2.companyid, t_2.cparentid, t_2.companycatid from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select companyid from t where companycatid = '500') and parentprodid = '1700' and tradestatus in ('A', 'C', 'P', 'D', 'R', 'M', 'E', 'O', 'W', 'F', 'K') and tradestatus = ( case when tradetype = 'B' then ( case when tradestatus = 'D' then tradestatus when tradestatus = 'A' then tradestatus when tradestatus = 'W' then tradestatus end ) else tradestatus end ) and tradetype = ( case 'ALL' when 'ALL' then tradetype else 'ALL' end ) union all select dollaramount, interestrate, transdate, transDate tradeTime, settlementdate, maturitydate, tradestatus, transtype, eccompanyid, transid, prodid, paymentinstructions, acctnbr, currencycode, acctname, settlementacctnbr, parentprodid, interestamount, pandi, companyname, deskid, branchid, refacctnbr, username, prodtype, escrowacctnbr, webreference, ack1time, ack2time, shares, nav, navtype, iapproval, createdby, tradetype, ack5time, mmftrmode, proddesc , 'todays' whattoget , case when ack1time is not null and ack2time is not null and ack5time is not null and tradestatus = 'A' then backoffdealnbr else '' end backoffdealnbr from fo_trading_t where ( transdate :: DATE between ?::DATE and ?::DATE) and eccompanyid in ( with recursive t as ( select companyid, cparentid, companycatid from fo_company_m cm where companyid in ( select companyid from fo_accountmaster_m where legalentity = ? and status = 'Y') union all select t_2.companyid, t_2.cparentid, t_2.companycatid from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select companyid from t where companycatid = '500') and parentprodid = '1700' and tradestatus in ('A', 'C', 'P', 'D', 'R', 'M', 'E', 'O', 'W', 'F', 'K') and tradestatus = ( case when tradetype = 'B' then ( case when tradestatus = 'D' then tradestatus when tradestatus = 'A' then tradestatus when tradestatus = 'W' then tradestatus end ) else tradestatus end ) and tradetype = ( case 'ALL' when 'ALL' then tradetype else 'ALL' end ) ) a left outer join fo_member_m m on (m.loginid = a.createdby) where coalesce(m.membercatid, '0') in ('0', '2', '3', '4') ) b ) v order by transdate desc
sql.getTradeHistoryForClientForAll =select tradetypedesc, companyname, webreference, isin, fundprovider, ISSUERNAME, PARENTPRODID, navtype, tradeType, transtype, shares, deskid, branchid, deskgroupid, DOLLARAMOUNT, CURRENCYCODE, mmftrmode, TRANSID, iapproval, TICKETSTATUS, tradestatus, transdate, SETTLEMENTDATE, ( select count(*) from fo_trade_costs_fees_m tf where tf.transid = v.transid) tradecostsfeesCnt , backOffDealNbr, PRODDESC , DATEDIFF, whattoget , cnt, rnum from ( select b.*, ( select target from fo_ml_item_d where itemid = '10000001' and locale = coalesce(trim('en_US'), 'en_US') and source = prodid ) issuername, date_part('day', transdate - settlementdate)::bigint datediff, count(*) over() as cnt, row_number () over ( order by tradeTime desc ) rnum from ( select phone1, ( select fundcode from fo_mmf_fund_m p where p.fundnbr = a.prodid) isin, coalesce (( select companyname from fo_company_m where companyid in ( select providerid from fo_mmf_fund_m p where p.fundnbr = a.prodid) and companycatid = '600'), 'N/A') fundprovider, a.*, case when tradetype in ('R', 'B', 'F', 'D', 'I') then case when membercatid = '4' then 'Regular - Self Service' else 'Regular - Desk' end else 'Sweep' end tradetypedesc, case when a.parentprodid = '1700' and a.tradetype != 'I' and (( select stlmodel from fo_productparameter_m p, fo_group_m g where p.groupid = g.groupid and g.companyid = a.deskid and g.prodid = a.prodid and g.currencycode = a.currencycode) not in ('1001', '1015', '1016', '1020')) then case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null and ack5time is not null then 'Confirmed' else case when a.transtype = '10' then case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end else case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null then 'Confirmed' else case when a.tradestatus = 'A' and ack1time is not null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack2time is null then 'WA' else case when a.tradestatus = 'A' and ack2time is not null then 'Confirmed' else a.tradestatus end end end end end ticketStatus, ( select groupId from fo_group_m where companyid = a.deskid and prodid = a.prodid and currencycode = a.currencycode and status = 'Y' ) deskgroupid from ( select dollaramount, interestrate, transdate, transDate tradeTime, settlementdate, maturitydate, tradestatus, transtype, eccompanyid, transid, prodid, paymentinstructions, acctnbr, currencycode, acctname, settlementacctnbr, parentprodid, interestamount, pandi, companyname, deskid, branchid, refacctnbr, username, prodtype, escrowacctnbr, webreference, ack1time, ack2time, shares, nav, navtype, iapproval, createdby, tradetype, ack5time , mmftrmode, proddesc , 'history' whattoget , case when ack1time is not null and ack2time is not null and ack5time is not null and tradestatus = 'A' then backoffdealnbr else '' end backoffdealnbr from fo_simult_t where ( transdate :: date between ?::date and ?::date) and eccompanyid in ( with recursive t as ( select companyid, cparentid, companycatid from fo_company_m cm where companyid in ( select a.companyid from fo_company_m a, fo_accountmaster_m b where a.companyid = b.companyid and b.legalentity in ( select companyid from fo_up_company_m where loginId = ? and status = 'Y')) union all select t_2.companyid, t_2.cparentid, t_2.companycatid from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select companyid from t where companycatid = '500') and parentprodid = '1700' and tradestatus in ('A', 'C', 'P', 'D', 'R', 'M', 'E', 'O', 'W', 'F', 'K') and tradetype = ( case 'ALL' when 'ALL' then tradetype else 'ALL' end ) union all select dollaramount, interestrate, transdate, transDate tradeTime, settlementdate, maturitydate, tradestatus, transtype, eccompanyid, transid, prodid, paymentinstructions, acctnbr, currencycode, acctname, settlementacctnbr, parentprodid, interestamount, pandi, companyname, deskid, branchid, refacctnbr, username, prodtype, escrowacctnbr, webreference, ack1time, ack2time, shares, nav, navtype, iapproval, createdby, tradetype, ack5time, mmftrmode, proddesc , 'todays' whattoget , case when ack1time is not null and ack2time is not null and ack5time is not null and tradestatus = 'A' then backoffdealnbr else '' end backoffdealnbr from fo_trading_t where ( transdate :: date between ?::date and ?::date) and eccompanyid in ( with recursive t as ( select companyid, cparentid, companycatid from fo_company_m cm where companyid in ( select a.companyid from fo_company_m a, fo_accountmaster_m b where a.companyid = b.companyid and b.legalentity in ( select companyid from fo_up_company_m where loginId = ? and status = 'Y')) union all select t_2.companyid, t_2.cparentid, t_2.companycatid from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select companyid from t where companycatid = '500') and parentprodid = '1700' and tradestatus in ('A', 'C', 'P', 'D', 'R', 'M', 'E', 'O', 'W', 'F', 'K') and tradetype = ( case 'ALL' when 'ALL' then tradetype else 'ALL' end ) ) a left outer join fo_member_m m on (m.loginid = a.createdby) where coalesce(m.membercatid, '0') in ('0', '2', '3', '4') ) b ) v order by transdate desc
sql.getTradeSummaryTodaysForClient = select dollaramount, ( select refacctnbr from    fo_accountmaster_m p where p.acctnbr = investmentaccount) portfolioNo, date_part('day', transdate - settlementdate)::bigint datediff, ordertype,    limitprice, limitexpiry, transdate, transDate tradeTime, settlementdate, tradestatus, prodid, a.eccompanyid, case when a.parentprodid = '1700' and    a.tradetype != 'I' and (( select stlmodel from fo_productparameter_m p, fo_group_m g where p.groupid = g.groupid and g.companyid = a.deskid and g.prodid    = a.prodid and g.currencycode = a.currencycode) not in ('1001', '1015', '1016', '1020')) then case when a.tradestatus = 'A' and ack1time is not null and    ack2time is not null and ack5time is not null then 'Confirmed' else case when a.transtype = '10' then case when a.tradestatus = 'A' and ack1time is not    null and ack5time is null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and    ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else    a.tradestatus end end end else case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WN' else case when    a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is    null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end end else case when a.tradestatus = 'A' and ack1time is not    null and ack2time is not null then 'Confirmed' else case when a.tradestatus = 'A' and ack1time is not null then 'WC' else case when a.tradestatus = 'A'    and ack1time is null and ack2time is null then 'WA' else case when a.tradestatus = 'A' and ack2time is not null then 'Confirmed' else a.tradestatus end    end end end end ticketStatus, transtype, transid, ( select groupId from fo_group_m where companyid = a.deskId and prodid = a.prodid and currencycode =    a.currencycode and status = 'Y') groupId, currencycode, a.createdby, ( select membercatid from fo_member_m where loginid = a.createdby)userrole,    modifyby, ( select p.acctname from fo_accountmaster_m p where p.acctnbr = a.investmentaccount ) acctname, settlementacctnbr, matureacctnbr,    parentprodid, FN_GET_LANG('10000001', 'en_US', parentprodid)proddesc, timezone, companyname, bookedby, username, case when ack1time is not null and    ack2time is not null and ack5time is not null and tradestatus = 'A' then backoffdealnbr else '' end backoffdealnbr, FN_GET_LANG('10000001', 'en_US',    prodid)issuername, webreference, approvedby, tradetype, approvedtime, shares, navtype, mmftrmode, sharepending, amtpending, iapproval, iexc,coalesce(nullif(rejectreason,''),(select notes from fo_mc_trading_t mt where mt.transid = a.transid )) rejectreason,tradeReason, deskid, ( select    fundcode from fo_mmf_fund_m ff where fundnbr = prodid) fundcode,nominatedacctnbr , nominatedacctname , sortCode,nominatedbalance,nominatedcurrencycode from fo_trading_t a where a.transid = ?
sql.getTradeSummaryHistoryForClient = select distinct dollaramount, coalesce(mcp.portFolioNo,( select refacctnbr from fo_accountmaster_m p where p.acctnbr = investmentaccount)) as portfolioNo, date_part('day', transdate - settlementdate)::bigint datediff, ordertype, limitprice, limitexpiry, transdate, ack5time executionDate, transDate tradeTime, settlementdate, tradestatus, a.prodid, a.eccompanyid, ( select fractionalsharepolicy from fo_mmf_fund_m where fundnbr = a.prodid and status = 'Y') fractionalsharepolicy, case when a.parentprodid = '1700' and a.tradetype != 'I' and (( select stlmodel from fo_productparameter_m p, fo_group_m g where p.groupid = g.groupid and g.companyid = a.deskid and g.prodid = a.prodid and g.currencycode = a.currencycode) not in ('1001', '1015', '1016', '1020')) then case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null and ack5time is not null then 'Confirmed' else case when a.transtype = '10' then case when a.tradestatus = 'A' and tradetype = 'B' and ack1time is not null and ack5time is null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and tradetype <> 'B' and ack1time is not null and ack5time is null and ack2time is null then 'K' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and tradetype <> 'B' and ack1time is not null and ack5time is not null and ack2time is null then 'K' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null then 'Confirmed' else case when a.tradestatus = 'A' and tradetype = 'B' and ack1time is not null then 'WC' else case when a.tradestatus = 'A' and tradetype <> 'B' and ack1time is not null then 'K' else case when a.tradestatus = 'A' and ack1time is null and ack2time is null then 'WA' else case when a.tradestatus = 'A' and ack2time is not null then 'Confirmed' else a.tradestatus end end end end end end ticketStatus, transtype, transid, ( select groupId from fo_group_m where companyid = a.deskId and prodid = a.prodid and currencycode = a.currencycode and status = 'Y') groupId, currencycode, a.createdby, ( select membercatid from fo_member_m where loginid = a.createdby)userrole, modifyby, coalesce(mcp.portfolioName,( select acctname from fo_accountmaster_m p where p.acctnbr = investmentaccount)) as acctname, settlementacctnbr, matureacctnbr, a.parentprodid, FN_GET_LANG('10000001', 'en_US', a.parentprodid)proddesc, timezone, companyname, bookedby, username, case when ack1time is not null and ack2time is not null and ack5time is not null and tradestatus = 'A' then case when (loadstatus is null or loadstatus = 'P') and tradetype <> 'B' then '' else backoffdealnbr end else '' end backoffdealnbr, FN_GET_LANG('10000001', 'en_US', a.prodid)issuername, webreference, a.approvedby, tradetype, approvedtime, shares, nav, navtype, ( select nav from fo_trading_track tr where tr.transid = a.transid and tr.tracknumber = '1') indicativenav, ack1time, ack2time, ack5time, mmftrmode, sharepending, amtpending, iapproval, coalesce(nullif(rejectreason,''),(select notes from fo_mc_trading_t mt where mt.transid = a.transid )) rejectreason, tradeReason, deskid, iexc, ( select fundcode from fo_mmf_fund_m ff where fundnbr = a.prodid) fundcode,nominatedacctnbr , nominatedacctname , sortCode,nominatedbalance,nominatedcurrencycode from vw_tradehistory_t a left outer join ( select newvalues->>'webReference' as mcpwebReference, newvalues->>'portFoilioNo' as portfolioNo, newvalues->>'acctName' as portfolioName, linkid, status from fo_mc_buildprocess_m where linkid = 'TRADHTRY' and status = 'A') mcp on (mcpwebReference = a.webreference ) where a.transId = ?
 
sql.getAcctDailyBalancesForClient = select t.subprodname, t.funddesc, t.navtype, t.companyname, t.companyid, ( select groupId from fo_group_m where companyid = coalesce(t.deskid , tt.deskid) and prodid = t.prodid and currencycode = t.currencycode and status = 'Y') groupId,(select fractionalsharepolicy from fo_mmf_fund_m where fundnbr = t.prodid and status = 'Y') fractionalsharepolicy, t.currencycode, t.endshares, t.endbal, t.beginbal, t.beginshares, t.availablebal, t.beginbal_converted beginbalconverted, coalesce(t.deskid , tt.deskid) deskid, t.prodid, t.transtype, coalesce(t.escrowacctnbr , tt.escrowacctnbr) escrowacctnbr, coalesce(tt.dollaramount, 0) pendingamount , coalesce(tt.shares, 0) pendingshares, count (*) over () as cnt, row_number() over ( order by t.escrowacctnbr, t.createddate ) as rnum from ( select aa.subprodname, aa.funddesc, aa.navtype, aa.companyname, aa.companyid, aa.currencycode, coalesce(bb.endshares, 0) endshares, coalesce(bb.endbal, 0)endbal, coalesce(bb.beginbal, 0)beginbal, coalesce(bb.beginshares, 0)beginshares, coalesce(bb.availablebal, 0)availablebal, coalesce(bb.beginshares, 0)* bb.nav beginbal_converted , bb.deskid, aa.prodid, bb.transtype, bb.escrowacctnbr, bb.createddate, bb.nav from ( select g.prodid, g.currencycode, g.companyid, mmf.fundcode || ' - ' || fn_get_lang ('10000001', 'en_US', g.prodid ) subprodname, coalesce (mmf.navtype, 'C') navtype, cm.companyname, mmf.funddesc from fo_group_m g, fo_company_m cm, fo_mmf_fund_m mmf, ( select companyid, accttypeid, acctnbr from fo_accountmaster_m where status = 'Y' union select companyid, accttypeid, acct.acctnbr from fo_accountmaster_m acct, fo_Trading_t t where acct.acctnbr = t.escrowacctnbr and transtype = '95' and ack5time is null and tradestatus in ('A', 'K') ) am, fo_acct_association_m ac, fo_product_m p where g.companyid = ? and g.status = 'Y' and g.companyid = cm.companyid and cm.status = 'Y' and g.prodid = mmf.fundnbr and g.currencycode = mmf.currencycode and g.groupid = ac.groupid and cm.companyid = am.companyid and am.accttypeid = '207' and ac.fromaccttype = 'I' and ac.toaccttype = '207' and ac.toacctnbr = am.acctnbr and ac.status='Y' and p.prodid = mmf.fundnbr and exists ( select 1 from fo_company_m desk, fo_group_m dg, fo_productparameter_m pp where dg.status = 'Y' and dg.prodid = g.prodid and dg.currencycode = g.currencycode and desk.companyid = dg.companyid and desk.companyid = ? and pp.groupid = dg.groupid and pp.status = 'Y' and desk.status = 'Y') and p.status = 'Y' and mmf.status = 'Y' )aa left outer join ( select a.endbal, a.endshares, a.beginbal, a.beginshares, a.availablebal, a.ecompanyid, a.prodid, a.currencycode, a.deskid, a.transtype, a.escrowacctnbr, a.createddate, a.nav from fo_acct_dailybal_m a, ( select companyid, accttypeid, acctnbr from fo_accountmaster_m where status = 'Y' union select companyid, accttypeid, acct.acctnbr from fo_accountmaster_m acct, fo_Trading_t t where acct.acctnbr = t.escrowacctnbr and transtype = '95' and t.tradestatus in ('A', 'K') and ack5time is null ) ac where a.escrowacctnbr = ac.acctnbr and a.ecompanyid =? )bb on (aa.companyid = bb.ecompanyid and aa.prodid = bb.prodid and aa.currencycode = bb.currencycode) ) t left outer join ( select t.deskid, eccompanyid, t.prodid, t.currencycode, escrowacctnbr, sum(case when INVESTSIGN = 'N' then -1 * dollaramount else dollaramount end ) dollaramount , sum(case when INVESTSIGN = 'N' then -1 * shares else shares end ) shares from fo_trading_t t, fo_mmf_fund_m fn, FO_PRODTRANS_M pt where t.prodid = fn.fundnbr and pt.PRODID = t.PARENTPRODID and pt.TRANSTYPEID = t.TRANSTYPE and fn.status = 'Y' and tradestatus not in ('W', 'Z', 'D', 'R', 'F') and ack5time is null group by t.deskid, t.eccompanyid, t.prodid, t.currencycode, escrowacctnbr)tt on (t.companyid = tt.eccompanyid and t.prodid = tt.prodid and t.currencycode = tt.currencycode ) order by upper (trim (funddesc)) desc
## For restricting duplicate funds in fund balance position screen
sql.getAcctDailyBalancesForSales = select * from (select t.subprodname, t.funddesc, t.navtype, t.companyname, (select refacctnbr from fo_accountmaster_m fam where acctnbr = coalesce(t.acctnbr , tt.acctnbr) and status = 'Y' and accttypeid = 'I' )portfolioNumber, (select acctname from fo_accountmaster_m fam where acctnbr = coalesce(t.acctnbr , tt.acctnbr) and status = 'Y' and accttypeid = 'I' )portfolioName, t.companyid, ( select groupId from fo_group_m where companyid = coalesce(t.deskid , tt.deskid) and prodid = t.prodid and currencycode = t.currencycode and status = 'Y') groupId, ( select fractionalsharepolicy from fo_mmf_fund_m where fundnbr = t.prodid and status = 'Y') fractionalsharepolicy, t.currencycode, t.endshares, t.endbal, t.beginbal, t.beginshares, t.availablebal, t.beginbal_converted beginbalconverted, coalesce(t.deskid , tt.deskid) deskid, t.prodid, t.transtype, coalesce(t.escrowacctnbr , tt.escrowacctnbr) escrowacctnbr, coalesce(tt.dollaramount, 0) pendingamount , coalesce(tt.shares, 0) pendingshares, count (*) over () as cnt, row_number() over (order by t.escrowacctnbr,t.createddate ) as rnum from ( select aa.subprodname, aa.funddesc, aa.navtype, aa.companyname, aa.companyid, aa.currencycode, coalesce(bb.endshares, 0) endshares, coalesce(bb.endbal, 0)endbal, coalesce(bb.beginbal, 0)beginbal, coalesce(bb.beginshares, 0)beginshares, coalesce(bb.availablebal, 0)availablebal, coalesce(bb.beginshares, 0)* bb.nav beginbal_converted , bb.deskid, aa.prodid, bb.transtype, bb.escrowacctnbr, bb.acctnbr, bb.createddate, bb.nav from ( select distinct g.prodid, g.currencycode, g.companyid, mmf.fundcode || ' - ' || fn_get_lang ('10000001', 'en_US', g.prodid ) subprodname, coalesce (mmf.navtype, 'C') navtype, cm.companyname, mmf.funddesc from fo_group_m g, fo_company_m cm, fo_mmf_fund_m mmf, ( select companyid, accttypeid, acctnbr from fo_accountmaster_m where status = 'Y' union select companyid, accttypeid, acct.acctnbr from fo_accountmaster_m acct, fo_Trading_t t where acct.acctnbr = t.escrowacctnbr and transtype = '95' and ack5time is null and tradestatus in ('A', 'K') ) am, fo_acct_association_m ac, fo_product_m p where g.companyid = ? and g.status = 'Y' and g.companyid = cm.companyid and cm.status = 'Y' and g.prodid = mmf.fundnbr and g.currencycode = mmf.currencycode and g.groupid = ac.groupid and cm.companyid = am.companyid and am.accttypeid = '207' and ac.fromaccttype = 'I' and ac.toaccttype = '207' and ac.status in ('Y', 'D') and ac.toacctnbr = am.acctnbr and p.prodid = mmf.fundnbr and g.prodid in ( select igp.prodid from fo_up_product_d up, fo_group_m igp where up.groupid = igp.groupid and loginid = ? and up.status = 'Y' and igp.status = 'Y') and exists ( select 1 from fo_company_m desk, fo_group_m dg, fo_productparameter_m pp where dg.status = 'Y' and dg.prodid = g.prodid and dg.currencycode = g.currencycode and desk.companyid = dg.companyid and desk.companyid = ? and pp.groupid = dg.groupid and pp.status = 'Y' and desk.status = 'Y') and p.status = 'Y' and mmf.status = 'Y' )aa left outer join ( select a.endbal, a.endshares, a.beginbal, a.beginshares, a.availablebal, a.ecompanyid, a.prodid, a.currencycode, a.deskid, a.transtype, a.escrowacctnbr, a.createddate, a.nav, a.acctnbr from fo_acct_dailybal_m a, ( select companyid, accttypeid, acctnbr from fo_accountmaster_m where status = 'Y' union select companyid, accttypeid, acct.acctnbr from fo_accountmaster_m acct, fo_Trading_t t where acct.acctnbr = t.escrowacctnbr and transtype = '95' and t.tradestatus in ('A', 'K') and ack5time is null ) ac where a.escrowacctnbr = ac.acctnbr and a.ecompanyid = ? )bb on (aa.companyid = bb.ecompanyid and aa.prodid = bb.prodid and aa.currencycode = bb.currencycode) ) t left outer join ( select t.deskid, eccompanyid, t.prodid, t.currencycode, escrowacctnbr, t.acctnbr, sum(case when INVESTSIGN = 'N' then -1 * dollaramount else dollaramount end ) dollaramount , sum(case when INVESTSIGN = 'N' then -1 * shares else shares end ) shares from fo_trading_t t, fo_mmf_fund_m fn, FO_PRODTRANS_M pt where t.prodid = fn.fundnbr and pt.PRODID = t.PARENTPRODID and pt.TRANSTYPEID = t.TRANSTYPE and fn.status = 'Y' and tradestatus not in ('W', 'Z', 'D', 'R', 'F') and ack5time is null group by t.deskid, t.eccompanyid, t.prodid, t.currencycode, escrowacctnbr, t.acctnbr )tt on (t.companyid = tt.eccompanyid and t.prodid = tt.prodid and t.currencycode = tt.currencycode and t.escrowacctnbr = tt.escrowacctnbr) )q where portfolioNumber = ? order by upper (trim (funddesc)) desc
sql.getAcctDailyDetailBalancesForClient = select (select groupid from fo_group_m dg where dg.companyid=b.deskid and dg.prodid=b.prodid and dg.currencycode=b.currencycode and dg.status='Y') deskGroupId, (select fractionalsharepolicy from fo_mmf_fund_m where fundnbr = b.prodid and status = 'Y') fractionalsharepolicy,b.endbal, b.beginbal, b.amount, b.shares, b.createddate,b.timestamp, b.parentprodid, b.prodid, b.entrytypeid, b.sourceid, b.webreference webreference , b.deskid, b.groupid, b.acctnbr, b.transtype, b.origtrans origtrans, b.escrowacctnbr, b.currencycode, b.acctbalentryid, b.nav, b.navtype, b.beginshares, b.endshares,b.unitratio, c.companyname, count(*) over() as cnt, row_number() over( order by b.acctbalentryid desc, b.escrowacctnbr, b.caldayseqid ) rnum ,(select 'todays'::text AS whattoget from fo_trading_t where transid = b.sourceid) whattoget ,b.transdate from fo_acct_caldayentry_d b, fo_company_m c , ( select companyid, accttypeid, acctnbr from fo_accountmaster_m where status = 'Y' union select companyid, accttypeid, acct.acctnbr from fo_accountmaster_m acct, fo_Trading_t t where acct.acctnbr = t.escrowacctnbr and transtype = '95' and ack5time is null ) ac ,fo_member_m m, fo_group_m g where b.ecompanyid = case when ? = ? then b.ecompanyid else ? end and ac.acctnbr = b.escrowacctnbr and b.escrowacctnbr = ? and b.entrytypeid not in(?,?,?,?,?) and b.prodid = case when ? = ? then b.prodid else ? end and b.currencycode = case when ? = ? then b.currencycode else ? end and b.transtype = ? and b.ecompanyid = c.companyid and b.currencycode = g.currencycode and g.prodid = b.prodid and c.companyid = g.companyid and m.loginid = ? and c.status = 'Y' and m.status = 'Y' and g.status = 'Y' and b.createddate::date between ?::date and ?::date
sql.getAcctDailyDetailBalancesForSales = select ( select groupid from fo_group_m dg where dg.companyid = b.deskid and dg.prodid = b.prodid and dg.currencycode = b.currencycode and dg.status = 'Y') deskGroupId,(select fractionalsharepolicy from fo_mmf_fund_m where fundnbr = b.prodid and status = 'Y') fractionalsharepolicy, b.endbal, b.beginbal, b.amount, b.shares, b.createddate, b.timestamp, b.parentprodid, b.prodid, b.entrytypeid, b.sourceid, b.webreference webreference , b.deskid, b.groupid, b.acctnbr, b.transtype, b.origtrans origtrans, b.escrowacctnbr, b.currencycode, b.acctbalentryid, b.nav, b.navtype, b.beginshares, b.endshares,b.unitratio, c.companyname, count(*) over() as cnt, row_number() over( order by b.acctbalentryid desc, b.escrowacctnbr, b.caldayseqid ) rnum , ( select 'todays'::text as whattoget from fo_trading_t where transid = b.sourceid) whattoget , b.transdate, b.CORPORATEACTIONS from fo_acct_caldayentry_d b, fo_company_m c , ( select companyid, accttypeid, acctnbr from fo_accountmaster_m where status = 'Y' union select companyid, accttypeid, acct.acctnbr from fo_accountmaster_m acct, fo_Trading_t t where acct.acctnbr = t.escrowacctnbr and transtype = '95' and ack5time is null ) ac where b.ecompanyid = case when ? = ? then b.ecompanyid else ? end and ac.acctnbr = b.escrowacctnbr and b.escrowacctnbr = ? and b.entrytypeid not in(?, ?, ?, ?, ?) and b.prodid = case when ? = ? then b.prodid else ? end and b.currencycode = case when ? = ? then b.currencycode else ? end and b.transtype = ? and b.ecompanyid = c.companyid and exists ( select 1 from fo_group_m g, fo_up_product_D d where g.groupid = d.groupid and g.status = 'Y' and d.status = 'Y' and b.currencycode = g.currencycode and b.branchid = g.companyid and b.prodid = g.prodid ) and b.createddate::date between ?::date and ?::date
sql.getAcctDailyPendingDetailsBalances = select transdate, settlementdate, ( case when INVESTSIGN = 'N' then -1 * dollaramount else dollaramount end ) dollaramount , (case when INVESTSIGN = 'N' then -1 * shares else shares end ) shares , case when tradestatus = 'A' and ack5time is not null then 'Confirm' when tradestatus = 'A' and ack5time is null then 'Waiting For Ack' else 'Waiting for Approve' end, case when transtype = '10' then 'Purchase' when transtype = '95' then 'Close Holding' else 'Redeem' end tradetype, beginbal, beginshares, endbal, endshares, nav, navtype , a.prodid, a.deskid, a.transid, a.webreference, 'todays' whattoget, case when a.parentprodid = '1700' and a.tradetype != 'I' and (( select stlmodel from fo_productparameter_m p, fo_group_m g where p.groupid = g.groupid and g.companyid = a.deskid and g.prodid = a.prodid and g.currencycode = a.currencycode) not in ('1001', '1015', '1016', '1020')) then case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null and ack5time is not null then 'Confirmed' else case when a.transtype = '10' then case when a.tradestatus = 'A' and tradetype = 'B' and ack1time is not null and ack5time is null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and tradetype <> 'B' and ack1time is not null and ack5time is null and ack2time is null then 'K' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and tradetype <> 'B' and ack1time is not null and ack5time is not null and ack2time is null then 'K' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null then 'Confirmed' else case when a.tradestatus = 'A' and tradetype = 'B' and ack1time is not null then 'WC' else case when a.tradestatus = 'A' and tradetype <> 'B' and ack1time is not null then 'K' else case when a.tradestatus = 'A' and ack1time is null and ack2time is null then 'WA' else case when a.tradestatus = 'A' and ack2time is not null then 'Confirmed' else a.tradestatus end end end end end end tradestatus, dollaramount pending_amount, shares pending_shares, ( select groupId from fo_group_m where companyid = a.deskId and prodid = a.prodid and currencycode = a.currencycode and status = 'Y') groupId , ( select fractionalsharepolicy from fo_mmf_fund_m where fundnbr = a.prodid and status = 'Y') fractionalsharepolicy from fo_trading_t a , FO_PRODTRANS_M pt where a.prodid = case when ? = ? then a.prodid else ? end and eccompanyid = case when ? = ? then a.eccompanyid else ? end and tradestatus not in ('Z', 'R', 'D', 'W', 'P', 'F') and ack5time is null and pt.PRODID = a.PARENTPRODID and pt.TRANSTYPEID = a.TRANSTYPE and a.transdate::date between ?::date and ?::date order by transdate desc


sql.getSelectedDeskBranches=select companyid, companyname from ( with recursive t (companyid, companyname, status, parentid, companycatid, cparentid ) as ( select companyid, companyname , status, parentid, companycatid, cparentid from fo_company_m where 
sql.getSelectedDeskBranchesTwo=union all select t_2.companyid, t_2.companyname , t_2.status, t_2.parentid, t_2.companycatid, t_2.cparentid from fo_company_m as t_2, t where t.companyid = t_2.parentid) select companyid, companyname, upper(trim(companyname)) as ucompanyname, companycatid, status, cparentid   from t ) var_ex where status = ? and companycatid =? and cparentid != '0000' order by var_ex.companyname
sql.getTrdParentTrueCompanies=WITH RECURSIVE t AS ( SELECT companyid, parentid, companyname ,gfcid,companycatid,status FROM fo_company_m cm WHERE companyid IN ( SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.parentid, t_2.companyname , t_2.gfcid,t_2.companycatid,t_2.status FROM fo_company_m AS t_2, t WHERE t.parentid = t_2.companyid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t where companycatid = ? AND status = ? ORDER BY companyname
sql.getTrdParentFalseUserCompanies=SELECT DISTINCT companyid, gfcid, companyname,UPPER(TRIM(companyname) ) as ucompanyname , parentid FROM fo_company_m cm WHERE companycatid = ? and userentity = CASE WHEN ? = ? THEN 'Y' ELSE 'N' END AND status = ? AND companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid) ORDER BY ucompanyname
sql.getTrdParentFalseCompanies=SELECT DISTINCT companyid, gfcid, companyname,UPPER(TRIM(companyname) ) as ucompanyname , parentid FROM fo_company_m cm WHERE companycatid = ? AND status = ? AND companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid) ORDER BY ucompanyname
sql.getAllCatCompanies=WITH RECURSIVE t AS(SELECT companyid,gfcid, companyname , parentid,companycatid,status FROM fo_company_m cm WHERE companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname , t_2.parentid,t_2.companycatid,t_2.status FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t where companycatid = case when ? = ? then companycatid else ? end AND companycatid in (?,?) AND status = ? ORDER BY ucompanyname
sql.getParentLegalTrueCompanies=WITH RECURSIVE t AS (SELECT companyid,gfcid, companyname , parentid,companycatid,status FROM fo_company_m cm where companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status FROM fo_company_m AS t_2, t WHERE t.parentid = t_2.companyid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname)) ucompanyname FROM t where companycatid = ? AND legalEntity=? AND status=? ORDER BY ucompanyname
sql.getParentTrueCompanies=WITH RECURSIVE t AS (SELECT companyid,gfcid, companyname , parentid,companycatid,status FROM fo_company_m cm where companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status FROM fo_company_m AS t_2, t WHERE t.parentid = t_2.companyid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname)) ucompanyname FROM t where companycatid = ? AND status=? ORDER BY ucompanyname
sql.getParentFalseLegalUserCompanies=WITH RECURSIVE t AS(SELECT companyid,gfcid, companyname , parentid,companycatid,status,legalentity,userentity FROM fo_company_m cm WHERE companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status,t_2.legalentity,t_2.userentity FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t where companycatid = ? AND t.legalentity = case when ? = ? then 'Y' else 'N' end AND t.userentity = case when ? = ? then 'Y' else 'N' end AND status = ? ORDER BY ucompanyname
sql.getParentFalseLegalCompanies=WITH RECURSIVE t AS(SELECT companyid,gfcid, companyname , parentid,companycatid,status,legalentity,userentity FROM fo_company_m cm WHERE companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status,t_2.legalentity,t_2.userentity FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t where companycatid = ? AND t.legalentity = case when ? = ? then 'Y' else 'N' end AND status = ? ORDER BY ucompanyname
sql.getParentFalseUserCompanies=WITH RECURSIVE t AS(SELECT companyid,gfcid, companyname , parentid,companycatid,status,legalentity,userentity FROM fo_company_m cm WHERE companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status,t_2.legalentity,t_2.userentity FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t where companycatid = ? AND t.userentity = case when ? = ? then 'Y' else 'N' end AND status = ? ORDER BY ucompanyname
sql.getParentFalseCompanies=WITH RECURSIVE t AS(SELECT companyid,gfcid, companyname , parentid,companycatid,status,legalentity,userentity FROM fo_company_m cm WHERE companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status,t_2.legalentity,t_2.userentity FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t where companycatid = ? AND status = ? ORDER BY ucompanyname
##sql.getAccountDetails=SELECT a.acctnbr, a.companyid, refacctnbr, extbrcutoff, acctname, a.accttypeid, a.parentid, a.status, a.taxid, socialcode, (SELECT description FROM fo_socialcodes_m WHERE socialcode=socialid) description, settlementdesc, mc.currencycode, remarks1, remarks2, remarks3, escrow, a.createddate, a.createdby, a.modifieddate mdate, a.modifiedby, settleid, cprf, location, ppno, regulatorycategoty, bankid, acctnatureflag, domintlflag, parentacctid, bankname, bankcode, banklocation, bankacctnbr, bankacctname, glaccountnumber, a.legalentity, b.companyname, a.enterpriseid, a.actbranchid, a.extbrcutoff, a.bankidtype, a.routingcode, a.settlemethod, a.ddaparent, a.maxamt, a.divtype, a.aeai, a.decn, a.acctstructypeid, a.fundacctnbr, c.descr acctstrdesc, c.refcode, a.clientidentifier, a.macfundacctnbr, a.macfundacctname, a.clientidentifier, a.fatcacompliant,a.sortcode FROM fo_company_m b, fo_accountmaster_m a left outer join fo_acct_structype_m AS c ON (a.acctstructypeid = c.acctstructypeid AND a.accttypeid = c.accttypeid) left outer join fo_acctcurrency_d mc on ( a.acctnbr=mc.acctnbr) WHERE (a.acctnbr= ? or a.refacctnbr=?) AND a.companyid=b.companyid
sql.getFundNAVDetails=SELECT DISTINCT f.nav, (select oneyearyield from fo_mmf_fundfact_m where fundnbr = f.fundnbr )oneyearyield,f.navtype,f.fractionalsharepolicy, g.groupid AS deskgroupid, CASE f.navtype WHEN 'C' THEN 'CNAV' WHEN 'F' THEN 'FNAV' WHEN 'V' THEN 'VNAV' WHEN 'L' THEN 'LVNAV' END AS navtypedesc, tz.description AS timezone, fd.fundnbr AS navflag, COALESCE((MAX(fd.createddate) OVER (PARTITION BY fd.fundnbr)), COALESCE(f.createddate, f.modifieddate)) AS createddate FROM fo_group_m AS g, fo_company_m AS c, fo_timezone_m AS tz, fo_mmf_fund_m AS f LEFT OUTER JOIN ( fo_mmf_navfeed_d AS fd LEFT OUTER JOIN fo_mmf_navfeed_m AS fm ON (fm.navtrackid = fd.navtrackid)) ON (f.fundnbr = fd.fundnbr) WHERE f.fundnbr = ? AND g.prodid = f.fundnbr AND g.companyid = c.companyid AND c.companycatid = '300' AND c.status = 'Y' AND COALESCE(fm.status, 'Y') = 'Y' AND COALESCE(fd.status, 'Y') = 'Y' AND c.tzcode = tz.tzcode
sql.getBackValueHolidaysForGroupId=SELECT TO_CHAR(hdate,c.dbdateformat) holiday, a.groupid, c.dbdateformat FROM fo_holiday_m b, fo_group_m a, fo_company_m c WHERE a.groupid = b.groupid AND a.companyid = c.companyid AND b.hdate>= FN_GET_GROUP_TZTIME(a.groupid)::date + (select paramvalue::int from fo_global_parameters_m where paramname = 'BACKDATEDTRADESDAYS') AND a.status = 'Y' AND c.status = 'Y' AND a.groupid = ? ORDER BY hdate
sql.getCltSettlementAccountsByGrp=SELECT DISTINCT a.acctnbr, acctname, refacctnbr, '100' intposttypeid, ddaparent, '100' acctnatureflag, paymode FROM fo_acct_clientsettlement_m aa , fo_settlementaccounts_m a WHERE a.acctnbr = aa.acctnbr AND a.status = ? AND aa.status = ? AND groupid = ? ORDER BY acctname, refacctnbr
sql.getCltSettlementAccounts	 =SELECT DISTINCT a.acctnbr, acctname, refacctnbr, '100' intposttypeid, ddaparent, '100' acctnatureflag, paymode FROM fo_acct_clientsettlement_m aa , fo_settlementaccounts_m a WHERE a.acctnbr = aa.acctnbr AND a.status = ? AND aa.status = ? ORDER BY acctname, refacctnbr
sql.getSettlementAccountsByGrp = SELECT DISTINCT acctnbr, acctname, refacctnbr, intposttypeid, ddaparent, acctnatureflag, ppno, fromacctnbr FROM fo_acct_association_m aa , fo_accountmaster_m a WHERE a.acctnbr = aa.toacctnbr AND fromacctnbr = ? AND a.status = ? AND aa.status = ? AND toaccttype = ? AND groupid = ? ORDER BY acctname, refacctnbr
sql.getSettlementAccounts 	   = SELECT DISTINCT acctnbr, acctname, refacctnbr, intposttypeid, ddaparent, acctnatureflag, ppno, fromacctnbr FROM fo_acct_association_m aa , fo_accountmaster_m a WHERE a.acctnbr = aa.toacctnbr AND fromacctnbr = ? AND a.status = ? AND aa.status = ? AND toaccttype = ? ORDER BY acctname, refacctnbr
sql.getGroupTimeZoneByGrp = SELECT t.javatzcode FROM fo_timezone_m t, fo_group_m g, fo_company_m c WHERE c.companyid = g.companyid AND g.groupid = ? AND c.companycatid = ? AND c.tzcode = t.tzcode AND c.status='Y' AND g.status = 'Y' AND t.status = 'Y'
sql.getTotalRedeemShares=SELECT sum(case when mmftrmode = 'S' and ack5time is null then shares else case when ack5time is null then dollaramount / (case	when ack1time is null then fn.nav else t.nav end) else 0 end end ) + sum( case when ack5time is not null then shares else 0 end ) shareAmt from	fo_trading_t t, fo_mmf_fund_m fn, FO_PRODTRANS_M pt where t.prodid = fn.fundnbr and pt.PRODID = t.PARENTPRODID and pt.TRANSTYPEID = t.TRANSTYPE and	fn.status = 'Y' and transtype in (?, ?) and escrowacctnbr = ? and tradestatus in ( 'A' , 'K') and ack5time is null
sql.getMMFSuspendedTransFlag = SELECT durationto, exactduration, suspendtrading, durationfrom, ra.transtype, t.tenortypeid, COALESCE(t.transflag,'') AS transflag FROM fo_ratematrix_d r, fo_ratematrixactive_m ra, fo_tenor_m t, fo_productparameter_m p WHERE t.suspendtrading = 'Y' AND t.groupid = ra.groupid AND t.groupid = ? AND p.groupid = t.groupid AND p.transtype = ra.transtype AND ra.transtype = ? AND t.tenortypeid = ( case t.durationto when 1 then p.spotvalue else ?::SMALLINT end ) AND t.tenorid = r.tenorid AND r.gridid = ra.gridid AND ra.status ='Y' AND exactduration = ?::INT ORDER BY ra.transtype, t.tenortypeid, durationto
sql.getParentProdIdsByProdId = WITH RECURSIVE t (prodid, parentid, prodname,status) AS (SELECT fm.prodid, fm.parentid, fm.prodname , fm.status,fm.balinttype FROM fo_product_m fm WHERE prodid = ? UNION ALL SELECT t_2.prodid, t_2.parentid, t_2.prodname , t_2.status,t_2.balinttype FROM fo_product_m AS t_2, t WHERE t.parentid = t_2.prodid) SELECT prodid, parentid, prodname, balinttype FROM t WHERE status = 'Y' ORDER BY parentid
sql.getParentProdIds 		 = WITH RECURSIVE t (prodid, parentid, prodname,status) AS (SELECT fm.prodid, fm.parentid, fm.prodname , fm.status,fm.balinttype FROM fo_product_m fm UNION ALL SELECT t_2.prodid, t_2.parentid, t_2.prodname , t_2.status,t_2.balinttype FROM fo_product_m AS t_2, t WHERE t.parentid = t_2.prodid) SELECT prodid, parentid, prodname,balinttype FROM t WHERE status = 'Y' ORDER BY parentid
sql.getMultiLingualData = SELECT DISTINCT target, source, locale FROM fo_ml_item_d WHERE itemid = ? AND status = ?
sql.validateAccountByGrp = SELECT a.acctnbr FROM fo_accountmaster_m a, fo_acct_association_m b WHERE a.companyid = ? AND a.legalentity = ? AND a.status = ? AND a.accttypeid = ? AND a.acctnbr = ? AND a.acctnbr = b.toacctnbr AND a.accttypeid = b.toaccttype AND b.groupid = ? AND b.status = ?
sql.validateAccount      = SELECT a.acctnbr FROM fo_accountmaster_m a, fo_acct_association_m b WHERE a.companyid = ? AND a.legalentity = ? AND a.status = ? AND a.accttypeid = ? AND a.acctnbr = ? AND a.acctnbr = b.toacctnbr AND a.accttypeid = b.toaccttype AND b.status = ?
sql.resetAccountTax = UPDATE fo_tax_m SET status = ? WHERE taxid =( SELECT taxid FROM fo_accountmaster_m WHERE acctnbr = ?)
sql.resetAccountAdd = UPDATE fo_accountaddress_d SET status=? WHERE acctnbr=?
sql.resetAccountContact = UPDATE fo_accountcontactperson_d SET status=? WHERE acctnbr=?
sql.resetAccountGridActive = UPDATE fo_spgridactive_m SET status=? WHERE acctnbr=?
sql.resetAccountSpClient = UPDATE fo_spclient_d SET status=? WHERE acctnbr=?
sql.resetAccount = UPDATE fo_accountmaster_m SET status=?, modifiedby=?, modifieddate=? WHERE acctnbr=?
sql.resetAccountAssoc = UPDATE fo_acct_association_m SET status=? WHERE fromacctnbr=? OR toacctnbr=?
sql.getCheckerParametersRoleCcy=SELECT currencycode, mcroleid, ordernbr, amount FROM fo_mc_tradeparameters_m WHERE companyid=? AND currencycode = ? AND mcroleid = ? ORDER BY ordernbr, currencycode
sql.getCheckerParametersRole=SELECT currencycode, mcroleid, ordernbr, amount FROM fo_mc_tradeparameters_m WHERE companyid=? AND mcroleid = ? ORDER BY ordernbr, currencycode
sql.getCheckerParametersCcy =SELECT currencycode, mcroleid, ordernbr, amount FROM fo_mc_tradeparameters_m WHERE companyid=? AND currencycode = ? ORDER BY ordernbr, currencycode
sql.getCheckerParameters = SELECT currencycode, mcroleid, ordernbr, amount FROM fo_mc_tradeparameters_m WHERE companyid=? ORDER BY ordernbr, currencycode

sql.getMMFProdDataPOne	=	select * from ( select prodid, ( select fn_get_lang ('10000001', 'en_US', prodid)) prodname, parentid, nav, refprodid, fundcode, navtype, currencycode, dealingcutoff, todayscutoff, internaltodayscutoff, begintime, ndaf, refacctnbr, macfundacctnbr, macfundacctname, acttype, acctname, clientidentifier, timezone, fundrefacctnbr, ddacct, acctnbr, fromacctnbr, settleacct, clientgroupid, groupid, transtypeid, activeinvestmentflag, ( select refacctnbr from fo_accountmaster_m p where p.acctnbr = fromacctnbr and p.accttypeid = 'I' and p.status = 'Y' ) portfolioNumber, ( select factcardurl from fo_fund_placeholders_d ph where phid = 101 and ph.fundnbr = prodid) factsheet, ( select factcardurl from fo_fund_placeholders_d ph where phid = 103 and ph.fundnbr = prodid) kiid , ( select factcardurl from fo_fund_placeholders_d ph where phid = 102 and ph.fundnbr = prodid) prospectus from ( select b.prodid, b.prodname, b.parentid, b.refprodid, b.fundcode, b.navtype, b.nav, a.currencycode, pp.dealingcutoff, pp.todayscutoff, pp.internaltodayscutoff, pp.begintime, pp.ndaf, am.refacctnbr refacctnbr, am.macfundacctnbr, am.macfundacctname, am.parentid settleacct, a1.acctmode || a1.status acttype, am.acctname, am.clientidentifier, am.acctnbr, aa.fromacctnbr, g.groupid clientgroupid, dg.groupid, t.javatzcode timezone, sett.refacctnbr fundrefacctnbr, (sett.acctname || ':' || sett.refacctnbr ) ddacct, ( select aeai from fo_accountmaster_m mm where mm.acctnbr = am.acctnbr and mm.acctnatureflag = '103' and mm.status = 'Y')activeinvestmentflag, pt.transtypeid from fo_prodcurr_d a, ( select pm.prodid, pm.status, prodname, parentid, refprodid, ( select fundcode from fo_mmf_fund_m where fundnbr = pm.prodid)fundcode, ( select navtype from fo_mmf_fund_m where fundnbr = pm.prodid) navtype, ( select nav from fo_mmf_fund_m where fundnbr = pm.prodid) nav from fo_product_m pm where length(parentid) <> 4 and status = 'Y') b, ( select acctnbr, status, acctmode from ( select acctnbr, status, acctmode, rank() over (partition by acctnbr order by timestamp desc) as rcount from fo_acct_tracksettlemethod_m)var_ex where rcount = 1 and ((acctmode || status) in ('NA', 'MA', 'MP', 'MR') or (acctmode is null and status is null )))a1 right outer join fo_accountmaster_m as am on (a1.acctnbr = am.acctnbr ), fo_group_m g, fo_productparameter_m pp, fo_group_m dg, fo_company_m c, fo_acct_association_m aa, fo_timezone_m t, fo_prodtrans_m pt, fo_accountmaster_m sett where a.prodid = '1700' and aa.groupid = g.groupid and am.acctnbr = aa.toacctnbr and b.prodid = g.prodid and g.currencycode = a.currencycode and pp.groupid = dg.groupid and dg.prodid = g.prodid and dg.currencycode = g.currencycode and dg.companyid = c.companyid and c.tzcode = t.tzcode and c.companycatid = '300' and am.status = 'Y' and c.status = 'Y' and dg.status = 'Y' and pp.status = 'Y' and sett.acctnbr = am.parentid and sett.status = 'Y' and sett.accttypeid <> '201' and g.companyid = case ? when ? then g.companyid else ? end
sql.getMMFProdDataPTwo	=	AND a.status = 'Y' AND g.status = 'Y' AND UPPER (am.refacctnbr) LIKE '%%' AND aa.toaccttype = '207' AND aa.fromaccttype = 'I' AND aa.status = 'Y' AND a.prodid = pt.prodid AND pt.status='Y'
sql.getMMFProdDataPThree	=	AND g.prodid IN (SELECT igp.prodid FROM fo_up_product_d up, fo_group_m igp WHERE up.groupid = igp.groupid AND loginid = ? AND up.status = 'Y' AND igp.status = 'Y' AND igp.companyid = am.legalentity AND igp.prodid = g.prodid AND igp.currencycode = g.currencycode)
sql.getTradeDetailsOne	=	SELECT case when transtype in('85','95') and navtype in ('C','L') then -1*dollaramount else dollaramount end dollaramount, (select refacctnbr from fo_accountmaster_m p where p.acctnbr=investmentaccount) portfolioNo, DATE_PART('day',transdate - settlementdate)::bigint datediff, ordertype,nominatedauthorise, ( case transtype when '85' then -coalesce(dollaramount,0) when '95' then -coalesce(dollaramount,0) else coalesce(dollaramount,0) end ) dollaramountsort , case when dollaramount >0 then 'Yes' else 'No' end as suffunds, interestrate, trademode, limitprice, limitexpiry, masterrate, salespersonmarkup, tradermarkup, firmmarkup, duration, version, offeryield, offerprice, offerdiscount, tenor, tenorcode, transdate, transDate tradeTime, settlementdate, maturitydate, modifydate, tradestatus,
sql.getTradeDetailsTwo	=	case when a.parentprodid = '1700' and a.tradetype != 'I' and (( select stlmodel from fo_productparameter_m p, fo_group_m g where p.groupid = g.groupid and g.companyid = a.deskid and g.prodid = a.prodid and g.currencycode = a.currencycode) not in ('1001', '1015', '1016', '1020')) then case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null and ack5time is not null then 'Confirmed' else case when a.transtype = '10' then case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end else case when a.tradestatus = 'A' and ack1time is not null and ack5time is null and ack2time is null then 'WN' else case when a.tradestatus = 'A' and ack1time is not null and ack5time is not null and ack2time is null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack5time is null and ack2time is null then 'WA' else a.tradestatus end end end end end else case when a.tradestatus = 'A' and ack1time is not null and ack2time is not null then 'Confirmed' else case when a.tradestatus = 'A' and ack1time is not null then 'WC' else case when a.tradestatus = 'A' and ack1time is null and ack2time is null then 'WA' else case when a.tradestatus = 'A' and ack2time is not null then 'Confirmed' else a.tradestatus end end end end end ticketStatus,
sql.getTradeDetailsThree=	statuss, transtype, statust, eccompanyid, transid, ( select groupId from fo_group_m where companyid = a.deskId and prodid = a.prodid and currencycode = a.currencycode and status = 'Y') groupId, ( select count(*) from fo_trade_costs_fees_m tf where tf.transid = a.transid) tradecostsfeesCnt, prodid, clientloginname, salespersonid, salespersonname, salespersonphone, paymentinstructions, settlementinstructions, acctnbr, currencycode, a.createdby, ( select membercatid from fo_member_m where loginid = a.createdby)userrole, modifyby, ( select p.acctname from fo_accountmaster_m p where p.acctnbr = a.investmentaccount ) acctname, tradereason, settlementacctnbr, matureacctnbr, parentprodid, FN_GET_LANG(?, ?, parentprodid)proddesc, timezone, rollovertransid, revenue, profit, interestamount, pandi, pandi profitandinterest , parenttransid, misc1, unitid, ddafrom, ddato, companyname, investmentaccount, newtransid, vldttransid, misc2, misc3, salescredit, portfolio, deskid, branchid, refacctnbr, bookedby, username, acceptedby, backoffdealnbr, coalesce(rejectreason,( select notes from fo_mc_trading_t mt where mt.transid = a.transid ))rejectreason, issuerid, FN_GET_LANG(?, ?, prodid)issuername, cdtypeid, cdtd, dealtype, prodtype, dealmode, messageid, cfextid, fundacct, callfaxselfserve, authorizedcallers, fundnbr, escrowacctnbr, webreference, accruedinterest, daysover, beginbal, wrate, endbal, baserate, isemt, emtmode, investmode, ddatonbr, ddafromnbr, ack1time, ack2time, approvedby, autorollover, pledged, taximplemented, ltax, ftax, tradetype, pledgecontract, pledgedate, rollovertypeid, durationto, approvedtime, runid, ddabalance, ddabalancetime, csai , ppno, maturitystatus, a.itc, payoutdda, beginshares, shares, endshares, nav, navtype, mmftrmode, navpending, sharepending, amtpending,
sql.getTradeDetailsFour	= redeemfee, mncf, mncr, trig, orar, oint, ospm, otrm, aint, iapproval, etermpen, mmtdtransid, isnegflag,
sql.getTradeDetailsFive	= ruleid, iexc, ( select fundcode from fo_mmf_fund_m ff where fundnbr = prodid) fundcode ,( select fractionalsharepolicy from fo_mmf_fund_m ff where fundnbr = prodid) fractionalsharepolicy , ( select loginname from fo_member_m mem where mem.loginid = ( select loginid from fo_mc_trading_t mt where mt.transid = a.transid and mcroleid = '20' ) ) as Approved_Rejected1, ( select apprejtime from fo_mc_trading_t mt where mt.transid = a.transid and mcroleid = '20' ) as apprejtime1, ( select loginname from fo_member_m mem where mem.loginid = ( select loginid from fo_mc_trading_t mt where mt.transid = a.transid and mcroleid = '30' ) ) as Approved_Rejected2, ( select apprejtime from fo_mc_trading_t mt where mt.transid = a.transid and mcroleid = '30' ) as apprejtime2, case when coalesce (iexc, 'X') = 'Y' then ( select eamt from fo_pr_iexct_d where trid = transid ) else null end eamt, case when coalesce (iexc, 'X') = 'Y' then 'Out of Investment Policy Limit' when parentprodid = '1700' and transtype = '10' then case when ( select distinct case when ltid = '100' then 'Y' when ltid = '101' then ( select 'Y' from fo_mmf_fundfact_m ff where ff.fundnbr = a.prodid and ff.status = 'Y' and aum > 0 ) end from fo_pr_invpolicy_d where gpid = ( select groupid from fo_group_m g where g.companyid = a.eccompanyid and g.prodid = a.prodid and g.currencycode = a.currencycode and status = 'Y' ) and stat = 'Y' and ilmt > 0 ) = 'Y' then 'Within Investment Policy Limit' else 'Investment Policy Limit not set' end end invpolicy
sql.getPendingTradeCount = SELECT COUNT(*)apprcnt FROM (SELECT DISTINCT t.transid FROM fo_trading_t t WHERE t.eccompanyid = ?
sql.getSuspendedTenors = select durationto, exactduration, suspendtrading, durationfrom, ra.transtype, t.tenortypeid, t.transflag from fo_ratematrix_d r, fo_ratematrixactive_m ra, fo_tenor_m t, fo_productparameter_m p where t.disabletrading = 'N' and t.groupid = ra.groupid and t.groupid = ? and p.groupid = t.groupid and p.transtype = ra.transtype and ra.transtype = ? and t.tenortypeid = ( case t.durationto when 1 then p.spotvalue else ?::int end ) and t.tenorid = r.tenorid and r.gridid = ra.gridid and ra.status = 'Y'
sql.getOrderEntryDraftReport = select draftid, draftname,jsonobj, jsonobj ->> 'prodName' prodName, jsonobj ->> 'ddaFromnBr' ddaFromnBr, jsonobj ->> 'portfolioNumber' Portfolionbr, jsonobj ->> 'settleAcctnbr' macfundacctnbr, to_char(a.createddate, 'dd/mm/yyyy hh24:mi:ss') createddate, b.firstname ||' '|| b.lastname loginname from fo_draft_d a, fo_member_m b where a.createdby = b.loginid and a.createdby = ? and a.clientfirm = ? and a.status = 'Y' order by createddate desc
sql.getDraftDetailsReport = select draftid, draftname,jsonobj, jsonobj ->> 'prodName' prodName, jsonobj ->> 'ddaFromnBr' ddaFromnBr, jsonobj ->> 'portfolioNumber' Portfolionbr, jsonobj ->> 'settleAcctnbr' macfundacctnbr, to_char(a.createddate, 'dd/mm/yyyy hh24:mi:ss') createddate, b.firstname ||' '|| b.lastname loginname from fo_draft_d a, fo_member_m b where a.createdby = b.loginid and a.createdby = ? and a.draftid = ? and a.status = 'Y' order by createddate desc
sql.getCACData = select jsonobj::text jsonobj from fo_trade_costs_fees_m where transid=?
sql.getApprovalStatus = SELECT a.transdate, a.transid, case when a.createdby = ? then 'false' else (case when b.mcroleid = c.mcroleid then 'true' else 'false' end)end mcaction FROM fo_mc_trading_t b, (SELECT MIN (m.ordernbr) ordernbr, m.transid FROM fo_mc_trading_t m, fo_trading_t t WHERE m.transid = t.transid AND m.status = 'W' GROUP BY m.transid) t, fo_trading_t a left outer join fo_mc_memberrole_m c on (a.eccompanyid = c.companyid and c.loginid = ? and c.status = 'Y') WHERE a.transid = b.transid AND b.transid = t.transid AND a.tradestatus = 'W' AND t.ordernbr = b.ordernbr AND t.transid = ?

sql.getProfileLinks=select profilelinkgroupid || '-' || roletypeid profile,url from fo_wf_profilegroup_urlassoc_m where status='Y' order by 1

sql.getAllPendingTrdForBM=select 'todays' whereToGet,date_part('day', transdate - settlementdate)::bigint datediff, a.transId, p.refacctnbr || ' - ' || p.acctname refAcctnbr, case when transtype in('85', '95') and navtype in ('C', 'L') then -1 * dollaramount else dollaramount end dollarAmount, transdate, currencycode, settlementdate, shares, a.acctnbr, ( select groupId from fo_group_m where companyid = a.deskId and prodid = a.prodid and currencycode = a.currencycode and status = 'Y') deskgroupId, webreference, issuername, username, mmftrmode, maturitydate, pledgedate, approvedtime, modifydate, duration, interestamount, case when transtype in('85', '95') and navtype in ('C', 'L') then -1 * pandi else pandi end pandi, interestrate, currencycode, prodid, parentprodid, deskid, branchid, transtype, tenorcode, masterrate, salespersonmarkup, tradermarkup, statuss, statust, iexc, iapproval, etermpen, eccompanyid, navtype, amtpending, case when a.modifyby = ? then 'disabled' else case when ? = 'MK' or ? = 'A' then 'disabled' else '' end end disabled from vw_tradehistory_t a, fo_accountmaster_m p where tradestatus = ? and a.acctnbr = p.acctnbr AND branchid in( WITH RECURSIVE t AS (SELECT companyid, companyname, parentid, companycatid, status,legalentity FROM fo_company_m cm WHERE companyid IN ( SELECT companyid FROM fo_up_company_m WHERE loginid =? AND status = 'Y' AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.companyname, t_2.parentid, t_2.companycatid, t_2.status,t_2.legalentity FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid ) SELECT companyid FROM t where companycatid = '400' AND status = 'Y' ) AND a.iapproval is null AND (parenttransid=? OR rollovertransid is not null OR parenttransid=transid OR authorizedcallers = ? OR statuss = 'E') AND NOT EXISTS ( SELECT t.transid FROM fo_mc_trading_t t WHERE t.status = 'W' AND t.transid = a.transid ) and exists (select 1 from fo_group_m g,fo_up_product_D d where g.groupid = d.groupid and g.status = 'Y' and d.status = 'Y' and d.loginId =? and a.currencycode = g.currencycode and a.branchid = g.companyid and a.prodid = g.prodid ) ORDER BY transdate DESC
sql.getCompanyPendingTrdForBM=select 'todays' whereToGet,date_part('day', transdate - settlementdate)::bigint datediff, a.transId, p.refacctnbr || ' - ' || p.acctname refAcctnbr, case when transtype in('85', '95') and navtype in ('C', 'L') then -1 * dollaramount else dollaramount end dollarAmount, transdate, currencycode, settlementdate, shares, a.acctnbr, ( select groupId from fo_group_m where companyid = a.deskId and prodid = a.prodid and currencycode = a.currencycode and status = 'Y') deskgroupId, webreference, issuername, username, mmftrmode, maturitydate, pledgedate, approvedtime, modifydate, duration, interestamount, case when transtype in('85', '95') and navtype in ('C', 'L') then -1 * pandi else pandi end pandi, interestrate, currencycode, prodid, parentprodid, deskid, branchid, transtype, tenorcode, masterrate, salespersonmarkup, tradermarkup, statuss, statust, iexc, iapproval, etermpen, eccompanyid, navtype, amtpending, case when a.modifyby = ? then 'disabled' else case when ? = 'MK' or ? = 'A' then 'disabled' else '' end end disabled from vw_tradehistory_t a, fo_accountmaster_m p where tradestatus = ? and a.acctnbr = p.acctnbr and branchid =? and a.iapproval is null and (parenttransid =? or rollovertransid is not null or parenttransid = transid or authorizedcallers = ? or statuss = 'E') and not exists ( select t.transid from fo_mc_trading_t t where t.status = 'W' and t.transid = a.transid ) and exists ( select 1 from fo_group_m g, fo_up_product_D d where g.groupid = d.groupid and g.status = 'Y' and d.status = 'Y' and d.loginId =? and a.currencycode = g.currencycode and a.branchid = g.companyid and a.prodid = g.prodid ) order by transdate desc
sql.getSelectedCompaniesBM = WITH RECURSIVE t AS(SELECT companyid,gfcid, companyname , parentid,companycatid,status,legalentity,userentity FROM fo_company_m cm WHERE companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_m WHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status,t_2.legalentity,t_2.userentity FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid) SELECT DISTINCT companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t where companycatid = ? AND status = ? ORDER BY ucompanyname
sql.getBMTradeStatusCounts=SELECT SUM(dollaramount) amnt,  COUNT(*) count,    tradestatus    FROM fo_trading_t   where branchid IN  (    SELECT companyid  FROM fo_up_company_m     WHERE loginid = ?  AND  status = 'Y'     )   and  currencycode IN  (  SELECT  DISTINCT    g.currencycode    FROM fo_up_product_d u,   fo_group_m g  WHERE u.loginid = ?  AND  g.groupid = u.groupid      AND     g.status = 'Y' AND  u.status = 'Y'  ) AND    prodid  in  (SELECT  DISTINCT    g.prodid    FROM    fo_up_product_d u,          fo_group_m g        WHERE   u.loginid = ?       AND     g.groupid = u.groupid    AND  g.status = 'Y'     AND  u.status = 'Y'     )  AND tradestatus in ('A','C','P','D','R')  AND    tradetype<>'I'    GROUP BY tradestatus
sql.getBMTradeCurrencyStatusCounts=SELECT  COUNT(*) count,      SUM(dollaramount) amnt,      tradestatus,      currencycode       FROM  fo_trading_t       WHERE branchid IN   (      SELECT  companyid      FROM  fo_up_company_m    WHERE  loginid = ?      AND    status = 'Y'    )    AND  currencycode IN       (        SELECT  DISTINCT    g.currencycode    FROM  fo_up_product_d u,    fo_group_m g      WHERE  u.loginid = ?      AND    g.groupid = u.groupid      AND g.status = 'Y'        AND u.status = 'Y'        )          AND    prodid  in        (         SELECT  DISTINCT    g.prodid      FROM    fo_up_product_d u,        fo_group_m g      WHERE   u.loginid = ?     AND g.groupid = u.groupid    AND    g.status = 'Y'    AND    u.status = 'Y'    )       AND  tradestatus in ('A','C','P','D','R')     AND  tradetype <>'I'        GROUP BY  currencycode,      tradestatus
sql.getBMTodaysStatisticsCounts = select distinct count(*) over( partition by tradestatus) tradestatusCnt, count(*) over( partition by currencycode,tradestatus) tradestatusCcyCnt, sum(dollaramount) over(partition by currencycode,tradestatus) amount, tradestatus, currencycode from fo_trading_t WHERE branchid IN ( SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = 'Y' ) AND currencycode IN ( SELECT DISTINCT g.currencycode FROM fo_up_product_d u, fo_group_m g WHERE u.loginid = ? AND g.groupid = u.groupid AND g.status = 'Y' AND u.status = 'Y' ) AND prodid in ( SELECT DISTINCT g.prodid FROM fo_up_product_d u, fo_group_m g WHERE u.loginid = ? AND g.groupid = u.groupid AND g.status = 'Y' AND u.status = 'Y' ) AND tradestatus in ('A','C','P','D','R') AND tradetype<>'I' order by currencycode
sql.getActiveConTractReferences=select distinct (backoffdealnbr) from ( select backoffdealnbr from fo_trading_t where coalesce(nullif(backoffdealnbr, ''), null) is not null and tradestatus  <>'R' and ack1time is not null union select backoffdealnbr from fo_simult_t where coalesce(nullif(backoffdealnbr, ''), null) is not null and tradestatus  <>'R' and ack1time is not null) a

################################################################################################################
sql.getAccountDetailsone  = select a.acctnbr, a.companyid, refacctnbr, extbrcutoff, acctname, a.accttypeid, a.parentid, a.status, a.taxid, socialcode, ( select description from fo_socialcodes_m where socialcode = socialid) description, settlementdesc, mc.currencycode, remarks1, remarks2, remarks3, escrow, a.createddate, a.createdby, a.modifieddate mdate, a.modifiedby, settleid, cprf, location, ppno, regulatorycategoty, bankid, acctnatureflag, domintlflag, parentacctid, bankname, bankcode, banklocation, bankacctnbr, bankacctname, glaccountnumber, a.legalentity, b.companyname, a.enterpriseid, a.actbranchid, a.extbrcutoff, a.bankidtype, a.routingcode, a.settlemethod, a.ddaparent, a.maxamt, a.divtype, a.aeai, a.decn, a.acctstructypeid, a.fundacctnbr, c.descr acctstrdesc, c.refcode, a.clientidentifier, a.macfundacctnbr, a.macfundacctname, a.nominatedacctnbr, a.nominatedacctname, a.clientidentifier, a.fatcacompliant, a.sortcode, ( select sortcode from fo_accountmaster_m p where p.acctnbr = a.parentid and p.status = 'Y') nomsortcode, ( select nominatedacctnbr from fo_accountmaster_m p where p.acctnbr = a.parentid and p.status = 'Y') nomacctnbr, ( select nominatedacctname from fo_accountmaster_m p where p.acctnbr = a.parentid and p.status = 'Y') nomacctname from fo_company_m b, fo_accountmaster_m a left outer join fo_acct_structype_m as c on (a.acctstructypeid = c.acctstructypeid and a.accttypeid = c.accttypeid) left outer join fo_acctcurrency_d mc on ( a.parentid = mc.acctnbr) where (a.acctnbr = ? or a.refacctnbr =?) and a.companyid = b.companyid
sql.getAssociatedParentProducts =  SELECT DISTINCT p.prodid,p.parentid, TRIM(FN_GET_LANG(?,?,p.prodid))prodname, p.refprodid,  p.prodtagging FROM fo_product_m p, fo_group_m g WHERE  g.companyid = CASE ? WHEN ? THEN g.companyid ELSE ?  END AND g.prodid = p.prodid AND parentid='0000' AND EXISTS ( SELECT prodid FROM fo_up_product_d upd, fo_group_m gr WHERE upd.groupid = gr.groupid AND gr.prodid = g.prodid AND upd.loginid = ?)ORDER BY prodname
sql.getDeskHolidaysWithoutGroupIdWithLoginId= WITH RECURSIVE t (companyid,parentid,status)  AS (SELECT    companyid,parentid,status,companycatid   FROM fo_company_m    WHERE companyid in (select   companyid   from   fo_member_m m   where   loginid = ?)   UNION ALL   SELECT    t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t   where t.parentid = t_2.companyid)  SELECT    TO_CHAR(h.hdate,ct.dbdateformat) holiday   FROM t,fo_desk_holiday_m h,fo_company_m ct   WHERE t.companyid = h.deskid   and h.deskid = ct.companyid   and t.status = 'Y'    and ct.status = 'Y'    and t.companycatid = '300'   order by hdate
sql.getDeskHolidaysWithoutGroupIdWithCompanyId= WITH RECURSIVE t (companyid,parentid,status)  AS (SELECT    companyid,parentid,status,companycatid   FROM fo_company_m    WHERE companyid = ?   UNION ALL   SELECT    t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t   where t.parentid = t_2.companyid)  SELECT    TO_CHAR(h.hdate,ct.dbdateformat) holiday   FROM t,fo_desk_holiday_m h,fo_company_m ct n  WHERE t.companyid = h.deskid   and h.deskid = ct.companyid   and t.status = 'Y'    and ct.status = 'Y'    and t.companycatid = '300'   order by hdate
sql.getDeskWeekEndsWithoutGroupIdLoginId= WITH RECURSIVE t (companyid,parentid,status)    AS (SELECT        companyid,parentid,status,companycatid    FROM fo_company_m       WHERE companyid in (select      companyid         from         fo_member_m m        where         loginid = ?)       UNION ALL        SELECT         t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t      where t.parentid = t_2.companyid)     SELECT         dayid        FROM t,fo_desk_pr_holiday_m h     WHERE t.companyid = h.deskid      and t.status = 'Y'        and t.companycatid = '300'
sql.getDeskWeekEndsWithoutGroupIdWithCompanyId= WITH RECURSIVE t (companyid,parentid,status)    AS (SELECT        companyid,parentid,status,companycatid    FROM fo_company_m       WHERE companyid = ?     UNION ALL        SELECT         t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t      where t.parentid = t_2.companyid)     SELECT         dayid        FROM t,fo_desk_pr_holiday_m h     WHERE t.companyid = h.deskid      and t.status = 'Y'        and t.companycatid = '300'
sql.getMCProcessReportDetails =  select * from( select t.*,case when(to_date(to_char(createddate,'YYYY-MM-DD'),'YYYY-MM-DD')=to_date(to_char(current_date,'YYYY-MM-DD'),'YYYY-MM-DD')) then 1 else 0 end crdatecnt,case when ( to_date(to_char(modifieddate,'YYYY-MM-DD'),'YYYY-MM-DD') =to_date(to_char(current_date,'YYYY-MM-DD'),'YYYY-MM-DD')) then 1 else 0 end modydatecnt,count(*) over() as cnt,row_number() over() as rnum from (select rt.*,row_number() over(partition by processid order by  moddate desc) rn ,(filters->'companyCategory') ->> 'value' companycatid ,(newvalues->'naturedesc') ->> 'display' naturedesc from(select * from (select r.itemid,r.companyid,null nature,m2.loginid,(select descr from fo_wf_cat_linkgroup_m where linkgroupid = m2.linkgroupid) profile,case when m2.roletypeid ='MK' then 'MAKER' when m2.roletypeid='MC' then 'MAKER-CHECKER' else 'CHECKER' end roletype, m2.firstname || ' ' || m2.lastname createdby,r.createddate,m1.firstname || ' ' || m1.lastname acceptedby,r.approveddate,m3.firstname || ' ' || m3.lastname modifiedby,coalesce (r.modifieddate,r.createddate) modifieddate,coalesce (coalesce (r.modifieddate,r.approveddate),r.createddate) moddate,r.modifiedby modby,r.rejectedby,r.status status,r.processid,r.action,r.type,r.description displayname ,r.filters,r.newvalues from  fo_mc_buildprocess_m r left outer join fo_member_m m1 on ( r.approvedby = m1.loginid ) left outer join fo_member_m m2 on ( r.createdby = m2.loginid )left outer join fo_member_m m3 on ( coalesce (r.modifiedby,r.createdby) = m3.loginid ) where  r.status='P' and case when r.itemid='1003' then r.groupid in (SELECT igp.groupid FROM fo_up_product_d up,fo_group_m igp WHERE  up.groupid = igp.groupid AND loginid = ? AND up.status = 'Y' AND igp.status = 'Y') else r.groupid = r.groupid  end ) var where loginid in (select distinct m.loginid from (with recursive t(companyid) as (select companyid, parentid,companycatid,status,userentity   from fo_company_m cm where cm.companyid in (select companyid  from fo_up_company_m where loginid = ? and status = 'Y' and companyid = cm.companyid ) and cm.status = 'Y' union all select t_2.companyid,t_2.parentid,t_2.companycatid,t_2.status,t_2.userentity  from fo_company_m as t_2, t where t.companyid = t_2.parentid ) select companyid  from t where userentity = 'Y' and status = 'Y' ) t,fo_member_m m  where t.companyid = m.companyid


############################BACK VALUE #######################

sql.getAcctBalDet = select a.endbal, a.beginbal, a.netbal, a.endshares, a.beginshares, a.netshares, a.mtd, a.mtda, a.ismonthend, a.endint, a.beginint, a.netint, a.createddate createddate, a.beginrevenue, a.netrevenue, a.endrevenue, b.acctnatureflag , a.AVAILABLEBAL, a.AVAILABLESHARES , a.nav, a.oldNav from fo_acct_dailybal_d a, fo_accountmaster_m b where a.escrowacctnbr = b.acctnbr and a.groupid = ? and a.acctnbr = ? and a.transtype = ? and a.accttypeid = ? and a.escrowacctnbr = ? and b.acctnbr = ? and trunc(a.createddate) = ( select max(createddate) from fo_acct_dailybal_d where escrowacctnbr = ? and createddate <= ? )
sql.getLeastNearestBackValueDateShares=select createddate, endshares, tt.endshares_rank, endshares_rank1 from ( select createddate, endshares, endshares_rank, dense_rank() over ( order by endshares) endshares_rank1 from ( select acctbalentryid, createddate, endshares, dense_rank() over ( partition by createddate order by acctbalentryid desc ) endshares_rank from fo_acct_balentry_d where escrowacctnbr in (?) and trunc(createddate) >= ? order by createddate) t where t.endshares_rank = 1 )tt where tt.endshares_rank1 = 1 limit 1
sql.getBackValueNavForFund=select b.fundnbr, coalesce(a.nav, b.nav)nav from ( select * from ( select fundnbr, nav, dense_rank() over ( order by createddate ) createddaternk from fo_fund_navtrack_d where fundnbr = ? and createddate::Date > ? ) t where createddaternk = 1 ) a right outer join fo_mmf_fund_m b on (a.fundnbr = b.fundnbr ) where b.status = 'Y' and b.fundnbr = ?

############################BACK VALUE #######################

############################

sql.getEditAckforAllCompanies= SELECT b.*         FROM (              SELECT a.*,        COUNT(*) OVER() AS cnt, ROW_NUMBER() OVER(ORDER BY    transdate   ) rnum FROM (       select           dollaramount,         investmentaccount,        (           select            refacctnbr         from            fo_accountmaster_m p               where            p.acctnbr = investmentaccount) portfolioNo, ( select nav from fo_trading_track tr  where tr.transid = a.transid  and tr.tracknumber= '1') indicativenav,       date_part('day', transdate - settlementdate)::bigint datediff,     (            case             transtype           when '85' then -coalesce(dollaramount, 0)        when '95' then -coalesce(dollaramount, 0)        else coalesce(dollaramount, 0)         end ) dollaramountsort ,          transdate,            transDate tradeTime,           settlementdate,            maturitydate,           modifydate,           tradestatus,          (SELECT   coalesce(nav,1) AS NAV       FROM fo_mmf_domicile_m d, fo_mmf_fund_m f                   WHERE fundnbr =a.prodid                  AND f.dmid = d.dmid  and f.status='Y' and d.stat='Y'  ) FUNDNAV  ,               case              when (ACK1TIME is null           or ACK2TIME is null) then 'UCN'          when (ACK1TIME is not null          and ACK2TIME is not null) then 'CN'        end dealstatus,            case              when a.parentprodid = '1700'           and a.tradetype != 'I'            and ((                 select stlmodel           from                fo_productparameter_m p,            fo_group_m g             where                p.groupid = g.groupid             and g.companyid = a.deskid            and g.prodid = a.prodid             and g.currencycode = a.currencycode) not in ('1001',        '1015',               '1016',                '1020')) then               case                 when a.tradestatus = 'A'             and ack1time is not null             and ack2time is not null             and ack5time is not null then 'CN'            else               case                when a.transtype = '10' then            case                 when a.tradestatus = 'A'             and ack1time is not null             and ack5time is null              and ack2time is null then 'WC'             else                case                 when a.tradestatus = 'A'            and ack1time is not null            and ack5time is not null            and ack2time is null then 'WN'            else                case                 when a.tradestatus = 'A'             and ack1time is null              and ack5time is null              and ack2time is null then 'WA'             else a.tradestatus             end               end               end                 else                 case                  when a.tradestatus = 'A'              and ack1time is not null              and ack5time is null               and ack2time is null then 'WN'              else                case                 when a.tradestatus = 'A'             and ack1time is not null              and ack5time is not null              and ack2time is null then 'WC'              else                 case                  when a.tradestatus = 'A'              and ack1time is null               and ack5time is null               and ack2time is null then 'WA'              else a.tradestatus              end                 end                 end                 end                 end                  else                  case                   when a.tradestatus = 'A'              and ack1time is not null              and ack2time is not null then 'CN'             else                  case                   when a.tradestatus = 'A'               and ack1time is not null then 'WC'              else                  case                   when a.tradestatus = 'A'               and ack1time is null                and ack2time is null then 'WA'               else                  case when a.tradestatus = 'A'                and ack2time is not null then 'CN'               else a.tradestatus                end                  end                  end                  end                 end ticketStatus,                statuss,                 transtype,                   statust,                  eccompanyid,mmftrmode,                  transid,                   ( select groupId                 from fo_group_m                 where companyid = a.deskId                 and prodid = a.prodid                  and currencycode = a.currencycode                and status = 'Y') groupId,                 a.prodid,                   clientloginname,                  salespersonid,                   salespersonname,                  acctnbr,                  a.currencycode,                  a.createdby,                  modifyby,                   ( select  p.acctname                  from  fo_accountmaster_m p                 where  p.acctnbr = investmentaccount )acctname,       tradereason,            settlementacctnbr,           matureacctnbr,             parentprodid,             FN_GET_LANG('10000001',            'en_US',             parentprodid)proddesc,            companyname,             investmentaccount,            deskid, branchid,                   refacctnbr,                   bookedby, username, acceptedby, backoffdealnbr, coalesce(rejectreason,( select notes from fo_mc_trading_t mt where mt.transid = a.transid ))rejectreason,       FN_GET_LANG('10000001',                   'en_US', a.prodid)issuername,                   fundacct, escrowacctnbr, webreference,  beginbal,  endbal,   ack1time,  ack2time,ack5time,  approvedby,  tradetype,  approvedtime,  beginshares,  shares,   endshares,   nav,    navtype,   (    select     fundcode  from     fo_mmf_fund_m ff                   where    fundnbr = a.prodid) fundcode,                  g.groupid ,'todays' whattoget  from    fo_trading_t a,   fo_group_m g   where    a.eccompanyid = g.companyid and a.prodid = g.prodid  and a.currencycode = g.currencycode                 AND  transdate :: date BETWEEN      ? AND ?              AND branchid IN  (           SELECT companyid         FROM fo_up_company_m        WHERE loginid = ?         AND  status = 'Y'        )             AND g.currencycode IN      (                  SELECT  DISTINCT    g.currencycode      FROM fo_up_product_d u,        fo_product_m p,         fo_group_m g       WHERE u.loginid = ?       AND  g.groupid = u.groupid     AND  g.prodid = p.prodid           AND     g.status =  'Y' and p.status = 'Y'                 AND     u.status =    'Y'                   )                AND    g.prodid  in             (   SELECT  DISTINCT    g.prodid              FROM    fo_up_product_d u,            fo_product_m p,  fo_group_m g   WHERE   u.loginid = ?  AND     g.groupid = u.groupid      AND  g.prodid = p.prodid           AND     g.status ='Y'  and    p.status   ='Y'                AND     u.status = 'Y'            )       AND tradestatus IN ('A','K')
sql.getEditAckForaCompany=SELECT b.*         FROM (              SELECT a.*,        COUNT(*) OVER() AS cnt, ROW_NUMBER() OVER(ORDER BY    transdate   ) rnum FROM (       select           dollaramount,         investmentaccount,        (           select            refacctnbr         from            fo_accountmaster_m p               where            p.acctnbr = investmentaccount) portfolioNo, ( select nav from fo_trading_track tr  where tr.transid = a.transid  and tr.tracknumber= '1') indicativenav,       date_part('day', transdate - settlementdate)::bigint datediff,     (            case             transtype           when '85' then -coalesce(dollaramount, 0)        when '95' then -coalesce(dollaramount, 0)        else coalesce(dollaramount, 0)         end ) dollaramountsort ,          transdate,            transDate tradeTime,           settlementdate,            maturitydate,           modifydate,           tradestatus,          (SELECT   coalesce(nav,1) AS NAV       FROM fo_mmf_domicile_m d, fo_mmf_fund_m f                   WHERE fundnbr =a.prodid                  AND f.dmid = d.dmid  and f.status='Y' and d.stat='Y'  ) FUNDNAV  ,               case              when (ACK1TIME is null           or ACK2TIME is null) then 'UCN'          when (ACK1TIME is not null          and ACK2TIME is not null) then 'CN'        end dealstatus,            case              when a.parentprodid = '1700'           and a.tradetype != 'I'            and ((                 select stlmodel           from                fo_productparameter_m p,            fo_group_m g             where                p.groupid = g.groupid             and g.companyid = a.deskid            and g.prodid = a.prodid             and g.currencycode = a.currencycode) not in ('1001',        '1015',               '1016',                '1020')) then               case                 when a.tradestatus = 'A'             and ack1time is not null             and ack2time is not null             and ack5time is not null then 'CN'            else               case                when a.transtype = '10' then            case                 when a.tradestatus = 'A'             and ack1time is not null             and ack5time is null              and ack2time is null then 'WC'             else                case                 when a.tradestatus = 'A'            and ack1time is not null            and ack5time is not null            and ack2time is null then 'WN'            else                case                 when a.tradestatus = 'A'             and ack1time is null              and ack5time is null              and ack2time is null then 'WA'             else a.tradestatus             end               end               end                 else                 case                  when a.tradestatus = 'A'              and ack1time is not null              and ack5time is null               and ack2time is null then 'WN'              else                case                 when a.tradestatus = 'A'             and ack1time is not null              and ack5time is not null              and ack2time is null then 'WC'              else                 case                  when a.tradestatus = 'A'              and ack1time is null               and ack5time is null               and ack2time is null then 'WA'              else a.tradestatus              end                 end                 end                 end                 end                  else                  case                   when a.tradestatus = 'A'              and ack1time is not null              and ack2time is not null then 'CN'             else                  case                   when a.tradestatus = 'A'               and ack1time is not null then 'WC'              else                  case                   when a.tradestatus = 'A'               and ack1time is null                and ack2time is null then 'WA'               else                  case when a.tradestatus = 'A'                and ack2time is not null then 'CN'               else a.tradestatus                end                  end                  end                  end                 end ticketStatus,                statuss,                 transtype,                   statust,                  eccompanyid,mmftrmode,                  transid,                   ( select groupId                 from fo_group_m                 where companyid = a.deskId                 and prodid = a.prodid                  and currencycode = a.currencycode                and status = 'Y') groupId,                 a.prodid,                   clientloginname,                  salespersonid,                   salespersonname,                  acctnbr,                  a.currencycode,                  a.createdby,                  modifyby,                   ( select  p.acctname                  from  fo_accountmaster_m p                 where  p.acctnbr = investmentaccount )acctname,       tradereason,            settlementacctnbr,           matureacctnbr,             parentprodid,             FN_GET_LANG('10000001',            'en_US',             parentprodid)proddesc,            companyname,             investmentaccount,            deskid, branchid,                   refacctnbr,                   bookedby, username, acceptedby, backoffdealnbr, coalesce(rejectreason,( select notes from fo_mc_trading_t mt where mt.transid = a.transid ))rejectreason,       FN_GET_LANG('10000001',                   'en_US', a.prodid)issuername,                   fundacct, escrowacctnbr, webreference,  beginbal,  endbal,   ack1time,  ack2time,ack5time,  approvedby,  tradetype,  approvedtime,  beginshares,  shares,   endshares,   nav,    navtype,   (    select     fundcode  from     fo_mmf_fund_m ff                   where    fundnbr = a.prodid) fundcode,                  g.groupid ,'todays' whattoget  from    fo_trading_t a,   fo_group_m g   where    a.eccompanyid = g.companyid and a.prodid = g.prodid  and a.currencycode = g.currencycode                 AND  transdate :: date BETWEEN      ? AND ?              AND branchid =?          AND g.currencycode IN      (                  SELECT  DISTINCT    g.currencycode      FROM fo_up_product_d u,        fo_product_m p,         fo_group_m g       WHERE u.loginid = ?       AND  g.groupid = u.groupid     AND  g.prodid = p.prodid           AND     g.status =  'Y' and p.status = 'Y'                 AND     u.status =    'Y'                   )                AND    g.prodid  in             (   SELECT  DISTINCT    g.prodid              FROM    fo_up_product_d u,            fo_product_m p,  fo_group_m g   WHERE   u.loginid = ?  AND     g.groupid = u.groupid      AND  g.prodid = p.prodid           AND     g.status ='Y'  and    p.status   ='Y'                AND     u.status = 'Y'            )       AND tradestatus IN ('A','K')
sql.getCompleteGlobalParameterDetails=SELECT paramname,PARAMETERID,paramvalue,holidaystype FROM   fo_global_parameters_m WHERE  status = 'Y'
sql.checkTransIdStatus=SELECT  tradestatus status,  ack1time,ack2time,ack5time,createdby,transdate createddate,modifydate modifieddate,approvedby acceptedby,approvedtime accepteddate,modifyby modifiedby ,createdbypurn,modifybypurn,approvedbypurn FROM fo_trading_t WHERE transId = ?
sql.getMonthBeginDateInterestPayouts=SELECT DISTINCT d.beginbal,  d.endbal,      d.beginshares,     d.endshares,     c.companyname,  c.companyid,      a.settleacctnbr,     b.acctnbr,   d.acctnbr investacctnbr, b.refacctnbr,   b.acctname,       a.accttypeid,   d.transtype,   d.deskid,      a.parentprodid,      p.prodid,       p.prodname,       d.branchid,    d.ecompanyid,     d.parentprodid,   d.currencycode,   d.mtda,      d.wrate,       d.createddate,       d.groupid,     d.escrowacctnbr,  d.revenue,       be.payoutdda,      b.ppno,     b.status,     b.divtype,     nvl((select navtype from fo_mmf_fund_m where fundnbr = a.prodid),'C') navtype,   a.nav,     d.ismonthend      FROM   fo_acct_dailybal_m a, fo_acct_dailybal_d d,    fo_acct_balentry_d be,    fo_accountmaster_m b, fo_company_m c,      fo_product_m p      WHERE  p.prodid = a.prodid     AND a.escrowacctnbr = b.acctnbr      AND c.companyid = b.companyid        AND a.escrowacctnbr = be.escrowacctnbr    AND a.parentprodid = be.parentprodid    AND a.ecompanyid = be.ecompanyid     AND d.createddate = be.createddate     AND a.deskid =  be.deskid    AND a.prodid = be.prodid    AND a.currencycode = be.currencycode    AND a.deskid = ?    AND a.prodid = ?      AND a.currencycode = ?     AND b.acctnbr = ?      AND a.deskid = d.deskid     AND a.groupid = d.groupid    AND a.acctnbr = d.acctnbr    AND a.accttypeid = d.accttypeid      AND a.transtype =d.transtype      AND a.escrowacctnbr =d.escrowacctnbr    AND TRUNC(d.createddate) = ?      AND d.mtda <> 0       AND NOT EXISTS (       SELECT 1     FROM (SELECT DISTINCT m.acctbalentryid acctbalentryid,     be.createddate createddate,   be.escrowacctnbr escrowacctnbr,entryid     FROM fo_acct_message_m m,     fo_acct_balentry_d be,    fo_trading_t t    WHERE be.escrowacctnbr = t.escrowacctnbr   AND t.tradetype = 'I'    AND TRUNC (t.transdate) =be.createddate   AND t.transid = m.acctbalentryid  AND m.transtype IN('F','T')  AND m.entryid = '114') m  WHERE m.escrowacctnbr = be.escrowacctnbr  AND m.createddate = be.createddate)   ORDER BY   b.refacctnbr
sql.setDeal=INSERT INTO fo_trading_t (dollaramount,    transtype,     interestrate,    trademode,     masterrate,     salespersonmarkup,   tradermarkup,    firmmarkup,     duration,     version,     offeryield,     offerprice,     offerdiscount,    tenor,      tenorcode,           transdate,     settlementdate,    maturitydate,    modifydate,     tradestatus,    statuss,           statust,     eccompanyid,          transid,     prodid,      clientloginname,   salespersonid,    salespersonname,    salespersonphone,   paymentinstructions,  settlementinstructions,  acctnbr,     currencycode,    createdby,     modifyby,     acctname,     tradereason,    settlementacctnbr,   matureacctnbr,    parentprodid,    timezone,     rollovertransid,   revenue,     profit,      interestamount,    pandi,      parenttransid,    misc1,      unitid,      ddafrom,     ddato,      companyname,    investmentaccount,   newtransid,     vldttransid,    misc2,      misc3,      salescredit,    portfolio,     deskid,      branchid,     refacctnbr,     bookedby,     username,     acceptedby,     backoffdealnbr,    rejectreason,    issuerid,     cdtypeid,     cdtd,      dealtype,     prodtype,     dealmode,     messageid,     cfextid,     fundacct,     callfaxselfserve,   authorizedcallers,   fundnbr,     escrowacctnbr,    webreference,    accruedinterest,   daysover,     beginbal,     wrate,      endbal,      baserate,     isemt,      emtmode,     investmode,     ddatonbr,     ddafromnbr,     ack1time,     ack2time,     ack5time,     approvedby,     autorollover,    pledged,     taximplemented,    ltax,      ftax,      tradetype,     pledgecontract,    pledgedate,     rollovertypeid,    durationto,     approvedtime,    runid,      ddabalance,     ddabalancetime,    csai,      ppno,      maturitystatus,          itc,      payoutdda,     mncf,      mncr,      trig,      orar,      oint,      ospm,      otrm,      aint,      ruleid,      nav,      navtype,      shares,      beginshares,    endshares,     mmftrmode)     VALUES (     ?::numeric, ?, ?::numeric,     ?, ?::numeric, ?::numeric,     ?::numeric, ?::numeric, ?::smallint,     ?::smallint, ?::numeric, ?::numeric,     ?::numeric, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?::numeric, ?::numeric, ?::numeric,     ?::numeric, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?::numeric, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?::numeric, ?::smallint, ?::numeric,     ?::numeric, ?::numeric, ?::numeric,     ?, ?::smallint, ?,     ?, ?, ?,     ?, ?, ?,     ?, ?, ?,     ?::numeric, ?::numeric, ?,     ?, ?, ?,     ?, ?::DATE, ?,?,     ?, ?, ?,     ?, ?, ?,     ?, ?::numeric, ?::numeric,     ?::numeric, ?::numeric, ?::numeric,     ?::numeric, ?::numeric, ?,     ?::numeric, ?, ?::numeric,?::numeric,     ?::numeric, ?      )
sql.getDealAggregateTransIds=SELECT  transid  FROM  fo_trading_t  WHERE  parenttransid = ?  ORDER BY  transid
sql.getCOAStatuswithSD=SELECT postdate posteddate,targetdate targetdate,lastexectime lastexectime,case SIGN(postdate::date - ?) when -1 then 'Not Done' when 0 then 'Done' when 1 then 'Will be done' end  mesg,case SIGN(targetdate::date - ?) when -1 then 'Not Done' when 0 then 'Done' when 1 then 'Already done' end  tmesg, status FROM   fo_dj_coa_d WHERE  groupid = ?	AND	taskid = ?
sql.getTMCatgDetails=SELECT	newtransid,sendmode,mdwb,status	FROM	fo_tm_category_d WHERE	deskid = ? AND	prodid =? AND	catid = ?
sql.getCOAStatus= SELECT * FROM fo_dj_coa_d WHERE  groupid = ? AND    taskid = ?	AND    lastexectime::DATE = ?::DATE
sql.saveTradeTrackingOnLatestNav = INSERT INTO fo_trading_track SELECT dollaramount, interestrate, masterrate, salespersonmarkup, tradermarkup, DURATION, VERSION, offeryield, offerprice, offerdiscount, tenor, transdate, settlementdate, maturitydate, modifydate, tradestatus, statuss, transtype, statust, transid, prodid, clientloginname, salespersonid, salespersonname, salespersonphone, paymentinstructions, settlementinstructions, acctnbr, currencycode, modifyby, acctname, tradereason, matureacctnbr, proddesc, TIMEZONE, rollovertransid, revenue, profit, interestamount, parenttransid, misc1, ddafrom, ddato, companyname, investmentaccount, newtransid, deskid, branchid, baserate, settlementacctnbr, pandi, eccompanyid, createdby, misc2, misc3, salescredit, portfolio, trademode, assignacctstatus, refacctnbr, unitid, acceptedloginid, backoffdealnbr, acceptedby, bookedby, dealtype, dealmode, itc, intcompanyid, messageid, bolocation, rejectreason, issuerid, issuername, cdtypeid, cdtd, parentprodid, prodtype, cfextid, fundacct, callfaxselfserve, authorizedcallers, fundnbr, approvedby, approvedtime, webreference, tenorcode, escrowacctnbr, wrate, accruedinterest, daysover, brokername, beginbal, endbal, isemt, emtmode, ack1time, ack2time, investmode, ddafromnbr, ddatonbr, pledgecontract, rollovertypeid, ftax, ltax, durationto, autorollover, pledged, taximplemented, username, pledgedate, firmmarkup, tradetype, runid, ddabalance, ddabalancetime, loadstatus, csai, ppno, vldttransid, ruleid, maturitystatus, payoutdda, ackprdays, mncf, mncr, trig, oint, ospm, otrm, orar, aint, iexc, nav, shares, beginshares, endshares, mmftrmode, iapproval, etermpen, fatcaperc, backupperc, mmtdtransid, isnegflag, navpending, navtype, sharepending, amtpending, redeemfee, ack5time, ordertype, limitprice, limitexpiry, nominatedauthorise, nlimitprice, ? tracknumber, createdbypurn, approvedbypurn, modifybypurn, createdbyrole, modifybyrole, approvedbyrole,feepercentage,nominatedacctnbr, nominatedacctname, sortcode,nominatedbalance,nominatedcurrencycode FROM fo_trading_t t WHERE transid = ?
sql.getActiveInactiveProdCcyForBranchUser=select distinct c.currencycode, c.currencyname currencyname from fo_up_product_d up, fo_currency_m c, fo_product_m p, fo_group_m g where up.loginid =? and	g.companyid = case when ? = ? then g.companyid else ? end and g.prodid = case when ? = ? then g.prodid else ? end and g.prodid = p.prodid and	g.currencycode = c.currencycode and g.groupid = up.groupid and g.status = case when p.status = 'Y' then 'Y' else 'N' end and up.status = case when	p.status = 'Y' then 'Y' else 'N' end and c.status = ?
sql.getCompanyId= select companyid from fo_company_m fcm where companyid=? and status='Y'

sql.getParentProductsByClientFirm = select distinct p.prodid, p.prodname from fo_group_m g, fo_product_m p, fo_up_product_d c, fo_member_m d where g.prodid = p.prodid and g.groupid = c.groupid and c.loginid = d.loginid and p.parentid = '0000' and d.loginid = ? and g.status = 'Y' and p.status = 'Y' and c.status = 'Y' and d.status = 'Y'
sql.getMMFProductsByClientFirm = select distinct p.funddesc prodname, p.fundnbr prodid from fo_group_m g, fo_mmf_fund_m p where g.prodid = p.fundnbr and g.status = 'Y' and p.status = 'Y'

####################Corporate Actions#######################################
sql.isCorpRebaseRunToday=select count(*) cnt from fo_corp_rebase_d where prodid = ? and status = 'Y' and rebasing_status = 'R' and effectivedate::date = ?::date

#################### FIX #######################################
sql.getHolidayDetails = select TO_CHAR(hdate, 'Mon dd, yyyy')holiday, description from fo_holidaymaster_m order by hdate
sql.getWeekHolidayDetails = select dayid, descr from fo_week_holiday_m where status = 'Y'
sql.insertTradeInfoForEmail = insert into fo_trade_emails_d (companyId, transId, webreference, status ) values (?, ?, ?, ?)

sql.verifyMCContractReferenceActivity = select loadstatus, backoffdealnbr from fo_trading_t where transid = ?
sql.resetAccountAssocForGroupId = update  fo_acct_association_m set status =? where groupid in (select groupid from fo_acct_association_m where fromacctnbr =? and fromaccttype ='207')

## Nominated Balance Check
sql.getODSDDABalanceCal=SELECT acctbal,lastrefreshed, errorCode ,sortcode,currencycode FROM fo_acct_ddabal_m WHERE msqnum = ? AND acctnbr =?
sql.saveODSRealBalDetailsDelete = delete from fo_acct_ddabal_m WHERE	msqnum = ? AND acctNbr=?
