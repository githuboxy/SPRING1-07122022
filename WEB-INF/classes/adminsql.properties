################################################################################################################
----------------------------------------------------- Common ---------------------------------------------------
################################################################################################################
adsql.getTimeZones = select tzcode,javatzcode,description,countrycode from fo_timezone_m where status = 'Y' order by description
adsql.getCompanyCategoryIdsIncludeMe = WITH RECURSIVE tmp AS (SELECT a.companycatid , a.companycatname, a.parentcategoryid  FROM fo_companycategory_m  a where a.companycatid= ? UNION  SELECT b.companycatid , b.companycatname,  b.parentcategoryid  FROM fo_companycategory_m  b JOIN tmp ON tmp.companycatid = b.parentcategoryid ) select companycatid , companycatname, parentcategoryid from tmp  INTERSECT SELECT c.companycatid,  companycatname,	  parentcategoryid  FROM   fo_wf_modules_m m,  fo_wf_ccatmodule_d c,  fo_companycategory_m d  WHERE  m.moduleid = c.moduleid   AND    d.companycatid = c.companycatid AND    c.status = ?  AND    m.refmodid = ?   ORDER BY companycatname
adsql.getTradingDesks = select companyid, companyname, legalentity from fo_company_m where companycatid = ? and status = 'Y' order by upper(companyname)
adsql.getBusinessEntities = select companyid, companyname from fo_company_m where companycatid = ? and parentid = CASE ?  WHEN '' THEN parentid  ELSE ? END and status = 'Y' order by upper(companyname)
adsql.getUserTypes=SELECT a.membercatid, fn_get_lang( ? , ? , a.membercatid) AS description FROM fo_usercategory_m AS a, fo_companyroletypes_m AS b WHERE a.membercatid = b.membercatid AND companycatid = CASE ?  WHEN ? THEN companycatid  ELSE ? END
adsql.getLoginNamesByCatId=SELECT  firstname, lastname, loginid  FROM    fo_member_m  WHERE   membercatid= ?  AND     companyid=?   AND     status=?
adsql.getCompaniesByCategory=select * from( WITH  RECURSIVE t  AS  (SELECT 1 as level, companyid,   companyname,UPPER (TRIM (companyname)) companynamee,  createddate  ,  gfcid, routingnumber, createdby, status, '' as  action, parentid, tzcode, DATEFORMAT, dbdateformat,  cparentid,companycatid FROM fo_company_m  WHERE (cparentid = '0000' OR cparentid = '0') UNION ALL  SELECT level+1 as level,t_2.companyid,   t_2.companyname,UPPER (TRIM (t_2.companyname)) as companynamee,  t_2.createddate  ,  t_2.gfcid, t_2.routingnumber, t_2.createdby,  t_2.status, '' as  action, t_2.parentid, t_2.tzcode, t_2.DATEFORMAT, t_2.dbdateformat,  t_2.cparentid ,t_2.companycatid  FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.cparentid  )  SELECT companyid, LPAD (' ', 1 * (LEVEL - 1)) || companyname companyname,UPPER (TRIM (companyname)) companynamee, createddate createddate, LEVEL, gfcid, routingnumber, createdby,  status, '' as action, parentid, tzcode, DATEFORMAT, dbdateformat,  cparentid   FROM t  WHERE companycatid = ?  AND status = ? AND UPPER (companyname) LIKE ?  )var_ex    order by  companynamee
adsql.getCompaniesByLegalEntity=select x.companyid "key",x.companyname "value",x.lvl from( with recursive t as (select ARRAY[companyname::text] AS hierarchy,0 as lvl,companyid,companyname,status,parentid,		cparentid from		fo_company_m where parentid=? and (cparentid='0000' or cparentid='0')union all	select		hierarchy||t_2.companyname::text,		lvl + 1 as lvl,				t_2.companyid,		t_2.companyname,		t_2.status,		t_2.parentid,		t_2.cparentid 	from		fo_company_m as t_2,		t	where		t.companyid = t_2.cparentid )	select companyid,		companyname,		lvl from		t	where status = 'Y' and upper (companyname) like ? order by hierarchy)x
adsql.getUserRoles=select a.roletypeid,roledesc from fo_userroles_m a,fo_roletypes_m b where membercatid = ? and a.roletypeid = b.roletypeid order by SORTORDER 
adsql.getUserRolesByProfile=SELECT  a.roletypeid,roledesc  FROM fo_userroles_m a,fo_roletypes_m b, fo_rolelinkgroup_m c WHERE   membercatid= ?  AND  a.roletypeid = b.roletypeid  and     a.roletypeid=c.roletypeid  and     c.linkgroupid=? ORDER BY CASE WHEN a.roletypeid = 'MK' THEN 1 ELSE 2 END, a.roletypeid         
adsql.getCompanyTypes = SELECT  a.companytypeid, a.description FROM fo_companytype_m a, fo_ccat_type_assc_m b WHERE b.companycatid = ? AND b.status = ? AND b.companytypeid = a.companytypeid AND a.status = ? ORDER BY a.sqid
adsql.getInvestAccounts=select acctnbr,acctname || ' - ' || refacctnbr acctname from fo_accountmaster_m where accttypeid = 'I' and companyid = ? and legalentity = ? and status = 'Y'
adsql.getSettlementCCY=SELECT DISTINCT c.currencycode FROM fo_accountmaster_m a, fo_acctcurrency_d c WHERE a.companyid = ? AND a.acctnbr = c.acctnbr AND a.status = 'Y' AND c.status = 'Y'
adsql.getAdminClientFirmsByEntity=select a.companyid, a.gfcid, case when coalesce(nullif(b.refacctnbr, ''), null) is null then a.companyname else b.refacctnbr || ' - ' || b.acctname end companyname, b.legalentity, a.parentid from fo_company_m a, fo_accountmaster_m b where a.companyid = b.companyid and b.legalentity = ? and companycatid = ? and a.status = 'Y' and b.status = 'Y' and accttypeid = 'I' order by companyname
adsql.getSelectedDeskCompanies = select distinct companyid,companyname, upper(trim(companyname) ) as ucompanyname  from fo_company_m cm where companycatid = ? and status = 'Y' and companyid in  (select companyid from fo_up_company_m where loginid = ? and status = 'Y' and companyid = cm.companyid) order by ucompanyname
adsql.updateGroupDetails			=   UPDATE fo_group_m set status = ?  WHERE	companyid = ? AND	prodid = ? AND	currencycode = ?
adsql.insertGroupDetails			= 	INSERT INTO	fo_group_m(groupid,companyid,prodid,currencycode,createdby)VALUES(?,?,?,?,?)
adsql.getAdminAccountDetails=SELECT distinct a.acctnbr,(SELECT currencycode FROM   fo_acctcurrency_d WHERE  acctnbr=a.acctnbr AND  status    = 'Y' AND createddate =  (SELECT MAX(createddate) FROM   fo_acctcurrency_d WHERE  acctnbr=a.acctnbr AND status    = 'Y'))currency,a.companyid, processid,refacctnbr, acctname, (SELECT acctname  FROM   fo_accountmaster_m WHERE  acctnbr = a.ddaparent) ddaparentname,ddaparent,b.createdby,b.modifiedby,COALESCE(a.modifieddate,a.createddate)  moddate,taxid,socialcode,b.status,action,accttypeid,a.createddate,settleid,cprf,location,ppno,regulatorycategoty,bankid,acctnatureflag,domintlflag,parentacctid,bankname,bankcode,banklocation,bankacctnbr,bankacctname,glaccountnumber,legalentity,parentid,enterpriseid,actbranchid,extbrcutoff,bankidtype,routingcode,settlemethod, sortcode,macfundacctnbr,macfundacctname,nominatedacctnbr,nominatedacctname, 0 AS rn FROM   fo_accountmaster_m a left outer join fo_mc_buildprocess_m b on (a.mcprocessid = b.processid and b.status in ('R','P') and b.modifiedby is null) where a.companyid = ? AND accttypeid = ?  and a.status in ('Y','P') order by a.createddate asc
adsql.getAdminAccountDetailsForChecker=SELECT distinct a.acctnbr,(SELECT currencycode FROM   fo_acctcurrency_d WHERE  acctnbr=a.acctnbr AND  status    = 'Y' AND createddate =  (SELECT MAX(createddate) FROM   fo_acctcurrency_d WHERE  acctnbr=a.acctnbr AND status    = 'Y'))currency,a.companyid, processid,refacctnbr, acctname, (SELECT acctname  FROM   fo_accountmaster_m WHERE  acctnbr = a.ddaparent) ddaparentname,ddaparent,b.createdby,b.modifiedby,COALESCE(a.modifieddate,a.createddate)  moddate,taxid,socialcode,b.status,action,accttypeid,a.createddate,settleid,cprf,location,ppno,regulatorycategoty,bankid,acctnatureflag,domintlflag,parentacctid,bankname,bankcode,banklocation,bankacctnbr,bankacctname,glaccountnumber,legalentity,parentid,enterpriseid,actbranchid,extbrcutoff,bankidtype,routingcode,settlemethod, sortcode,macfundacctnbr,macfundacctname,nominatedacctnbr,nominatedacctname, 0 AS rn FROM   fo_accountmaster_m a left outer join fo_mc_buildprocess_m b on (a.mcprocessid = b.processid and b.status in ('R','P') and b.modifiedby is null) where a.companyid = ? AND accttypeid = ?  and '1' = case when (coalesce(nullif(b.status,''),'P') = 'P' and a.status = 'P') then '1' when (coalesce(nullif(b.status,''),'P') = 'P' and a.status ='Y') then '1' when (b.status = 'R' and a.status = 'Y') then '1' else '0' end order by a.createddate   asc
adsql.getAdditionalSettleMethods=SELECT	settlemethod,status,descr FROM   fo_acct_settlemethod_m WHERE status = 'Y' ORDER BY settlemethod
adsql.getAccountNature=SELECT natureid,descr FROM  fo_acct_nature_m WHERE status = 'Y'  
adsql.getDDAAcctSource=SELECT seqid, srcid, srce, inqurytype FROM   fo_acctsrc_m WHERE  status = ?
adsql.getDDAAcctSourceForAllSources=SELECT seqid, srcid, srce, inqurytype FROM   fo_acctsrc_m WHERE  status = ? AND  SRCID!='N'
adsql.getAccountBranchDetails=SELECT	sddabal, descr, srcstm, branchid, companyid,CASE sddabal WHEN 'Y' THEN 'checked' ELSE '' END AS checked,CASE acctentitle WHEN 'Y' THEN 'checked' ELSE '' END AS acctchecked, acctentitle FROM fo_acct_branch_m WHERE status = 'Y'
adsql.getBankIdTypes=SELECT	bankidtype,descr FROM	fo_acct_bankidtype_m where status ='Y'
adsql.getSocialCodes=SELECT  socialid,description FROM fo_socialcodes_m WHERE status='Y'
adsql.getSettlementmode=SELECT settlemode, refsettlemode, descr FROM fo_settlementmode_m WHERE status = ? AND settlemode = CASE ? WHEN ? THEN settlemode ELSE ? END;
adsql.getSettlementTypes=SELECT settletypeid,descr FROM   fo_settlementtype_m WHERE  status= ?
adsql.getFundCompanyCatIds			=	SELECT companycatid,companycatname,parentcategoryid,status FROM   fo_companycategory_m  where companycatid=? and status =?
adsql.getSelectedCompanyDetails=SELECT companyid, companyname,sdsid, shortname, companycatid, parentid, taxid, companytypeid, companyrating, routingnumber, gfcid, amcname, tzcode, dateformat, starttradingtime, endtradingtime, dbdateformat, bolocation, abanbr, tzdefault, agrmtimpl, createddate, createdby, modifieddate, modifiedby,	cparentid, status, legalentity, ctsacctnbr, custodynbr, isglobal, swcode, swmsgmode, backoffcode, jobtime, companynbr, currency, language,	nameusage, regionid, corptypeid, userentity, dealercode, acctstructypeid,mcprocessid, deskemail, nature,dateformat ,dbdateformat FROM   fo_company_m WHERE  companyid=? AND  status in (?,?)
adsql.insertMCPRocessData=INSERT INTO fo_mc_buildprocess_m  ( processid , itemid , linkid , companyid  , parentcompanyid ,loginid  , prodid ,parentprodid ,groupid  ,oldvalues , newvalues , originalvalues , filters,description,status , action,type, exempt , createdby,investEntityId, legalEntityId, createddate,acctnbr)VALUES(?,?,?,?,?,?,?,?,?, ?,  ?,  ?,?,?,?,?, ?, ?,?,?,?,?,?)
adsql.getMCProcessData=select	processid ,itemid ,linkid ,companyid  ,parentcompanyid ,loginid  ,prodid ,parentprodid ,groupid  ,oldvalues ,newvalues ,filters ,originalvalues,status ,exempt ,createdby ,modifieddate,modifiedby,approveddate,approvedby,rejecteddate,rejectedby ,action,type,rejectedreason	,(newvalues->'naturedesc') ->> 'display' nature,(filters->'newPortfolioFlag') ->> 'value' newPortfolioFlag from fo_mc_buildprocess_m a	where	processid = ?
adsql.rejectMCProcessData=update fo_mc_buildprocess_m set status=?,rejectedby=? ,rejecteddate=?,rejectedreason=? where processid=?
adsql.approveMCProcessData=update fo_mc_buildprocess_m set status=?,approvedby=? ,approveddate=? where processid=?
adsql.revokeMCProcessData=update fo_mc_buildprocess_m set status=?,modifiedby=? ,modifieddate=? where processid=?
adsql.getBackOffLocations= SELECT	bocode,	descr FROM fo_backoffice_m  WHERE companycatid = ? AND	status = 'Y'
#approveaccount Inquiry
adsql.updateMCProcessRecord = SELECT  sp_mc_process_update(?,?,?,?,?,?) resFlag
adsql.getMCLoginNamesHashByCatId= SELECT * FROM ( SELECT	distinct c.loginid, c.loginname, c.firstname, c.lastname, '' AS cloneuser, c.status, c.modifiedby, TO_DATE('', 'yyyy-mm-dd')  AS moddate, 0 AS rn ,   a.status buildstatus , case when coalesce(nullif(a.processid,''), null) is null then c.firstname || ' ' || c.lastname when a.status = 'R' then c.firstname ||' '|| c.lastname else description end loginnamedesc FROM fo_member_m AS c left outer join fo_mc_buildprocess_m a on (a.processid = c.mcprocessid ) WHERE c.status != 'R' AND c.membercatid = ? AND c.companyid = ?) AS var_sbq_4
adsql.getParentIdsByCatId = SELECT	distinct a.companyid, a.companyname, b.companycatid, b.companycatname, a.parentid FROM	(SELECT	companyid, companyname, companycatid, parentid, status FROM	fo_company_m WHERE	companycatid= (SELECT	parentcategoryid FROM	fo_companycategory_m WHERE	companycatid= ?) ) a, fo_companycategory_m b, fo_up_company_m c WHERE	b.companycatid=a.companycatid AND	c.companyid = a.companyid AND a.status = ?
adsql.getAcctStructures=SELECT acctstructypeid, descr FROM fo_acct_structype_m WHERE status = 'Y' ORDER BY acctstructypeid

adsql.getDeskHolidaysWithoutGroupIdWithLoginId= WITH RECURSIVE t (companyid,parentid,status)  AS (SELECT    companyid,parentid,status,companycatid   FROM fo_company_m    WHERE companyid in (select   companyid   from   fo_member_m m   where   loginid = ?)   UNION ALL   SELECT    t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t   where t.parentid = t_2.companyid)  SELECT    TO_CHAR(h.hdate,ct.dbdateformat) holiday   FROM t,fo_desk_holiday_m h,fo_company_m ct   WHERE t.companyid = h.deskid   and h.deskid = ct.companyid   and t.status = 'Y'    and ct.status = 'Y'    and t.companycatid = '300'   order by hdate
adsql.getDeskHolidaysWithoutGroupIdWithCompanyId= WITH RECURSIVE t (companyid,parentid,status)  AS (SELECT    companyid,parentid,status,companycatid   FROM fo_company_m    WHERE companyid = ?   UNION ALL   SELECT    t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t   where t.parentid = t_2.companyid)  SELECT    TO_CHAR(h.hdate,ct.dbdateformat) holiday   FROM t,fo_desk_holiday_m h,fo_company_m ct n  WHERE t.companyid = h.deskid   and h.deskid = ct.companyid   and t.status = 'Y'    and ct.status = 'Y'    and t.companycatid = '300'   order by hdate
adsql.getDeskWeekEndsWithoutGroupIdLoginId= WITH RECURSIVE t (companyid,parentid,status)    AS (SELECT        companyid,parentid,status,companycatid    FROM fo_company_m       WHERE companyid in (select      companyid         from         fo_member_m m        where         loginid = ?)       UNION ALL        SELECT         t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t      where t.parentid = t_2.companyid)     SELECT         dayid        FROM t,fo_desk_pr_holiday_m h     WHERE t.companyid = h.deskid      and t.status = 'Y'        and t.companycatid = '300'
adsql.getDeskWeekEndsWithoutGroupIdWithCompanyId= WITH RECURSIVE t (companyid,parentid,status)    AS (SELECT        companyid,parentid,status,companycatid    FROM fo_company_m       WHERE companyid = ?     UNION ALL        SELECT         t_2.companyid,t_2.parentid,t_2.status,t_2.companycatid  FROM fo_company_m AS t_2, t      where t.parentid = t_2.companyid)     SELECT         dayid        FROM t,fo_desk_pr_holiday_m h     WHERE t.companyid = h.deskid      and t.status = 'Y'        and t.companycatid = '300'
adsql.getDraftHistroyDetails=select draftname, to_char(createddate, 'dd/mm/yyyy hh24:mi:ss') createddate, draftid, case when screenname = 'NEW' then jsonobj ->>'prodName' else jsonobj ->> 'mmfProdName0' end prodName, case when screenname = 'NEW' then jsonobj ->>'navType' else jsonobj ->> 'navType0' end navType, case when screenname = 'NEW' then jsonobj ->>'navTypeDesc' else jsonobj ->> 'navTypeDesc0' end navTypeDesc, case when screenname = 'NEW' then jsonobj ->>'isin' else jsonobj ->> 'isin0' end fundCode, case when screenname = 'NEW' then jsonobj ->>'settleAcctnbr' else jsonobj ->> 'macfundacctnbr0' end settleAcctnbr, case when screenname = 'NEW' then jsonobj ->>'portfolioNumber' else jsonobj ->> 'dispPortfolioRefAcctnbr0' end portfolioNumber, case when screenname = 'NEW' then jsonobj ->>'orderType' else jsonobj ->> 'orderType0' end orderType, case when screenname = 'NEW' then jsonobj ->>'limitPrice' else jsonobj ->> 'limitPrice0' end limitPrice, case when screenname = 'NEW' then jsonobj ->>'limitExpiry' else jsonobj ->> 'limitExpiry0' end limitExpiry, case when screenname = 'NEW' then jsonobj ->>'transType' else jsonobj ->> 'transTypes0' end transType, case when screenname = 'NEW' then jsonobj ->>'mmftrmode' else jsonobj ->> 'mmftrmode0' end mmftrmode, case when screenname = 'NEW' then jsonobj ->>'amount' else jsonobj ->> 'amount0' end amount, case when screenname = 'NEW' then jsonobj ->>'dealDate' else jsonobj ->> 'dealDate' end dealDate from ( select draftid, draftname, screenname, createddate, jsonobj::jsonb from fo_draft_d x union select draftid, draftname, screenname, createddate, jsonobj::jsonb from fo_draft_d_hist y) a where draftid = ?
adsql.getGroupDetails =	SELECT prodid, currencycode, companyid FROM   fo_group_m WHERE  groupid  = ? AND status   = ?        

################################################################################################################
---------------------------------------------------- Client Setup ----------------------------------------------
################################################################################################################
adsql.getCompaniesForClientSetup=WITH RECURSIVE t AS(SELECT companyid,gfcid, companyname ,  parentid,companycatid,status,legalentity,userentity FROM fo_company_m cm WHERE companyid IN (SELECT companyid FROM fo_up_company_m WHERE loginid = ? AND status = ? AND companyid = cm.companyid AND companyid NOT IN (SELECT companyid FROM fo_company_mWHERE companycatid = '100')) UNION ALL SELECT t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid,t_2.companycatid,t_2.status,t_2.legalentity,t_2.userentity FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid) SELECT DISTINCT	companyid, gfcid, companyname, parentid,UPPER(TRIM(companyname))ucompanyname FROM t	where   companycatid = ? AND t.legalentity = case when ? = ? then 'Y' else 'N' end AND status = ? ORDER BY ucompanyname
adsql.getMCParentIdsByCatId=SELECT cm.companyid, case when coalesce(nullif(a.processid,''),null) is null then companyname else description end companyname, cm.cparentid, cm.parentid, cm.createddate    createddate, cm.createdby, COALESCE(cm.modifieddate,cm.createddate)   moddate, cm.status, '' rejectedreason,'' AS  action, '' AS  type,mcprocessid FROM   fo_company_m cm 	left outer join fo_mc_buildprocess_m a on ( cm.mcprocessid  <> '' and  a.processid = cm.mcprocessid )WHERE  companycatid = ? and cm.status='Y'  AND parentid = ? ORDER   BY UPPER(TRIM(companyname))
adsql.getMCParentIdsByCatIdForChecker=SELECT cm.companyid, case when coalesce(nullif(a.processid,''),null) is null then companyname else description end companyname, cm.cparentid, cm.parentid, cm.createddate    createddate, cm.createdby, COALESCE(cm.modifieddate,cm.createddate)   moddate, cm.status, '' rejectedreason,'' AS  action, '' AS  type,mcprocessid FROM   fo_company_m cm 	left outer join fo_mc_buildprocess_m a on (a.processid = cm.mcprocessid  AND a.status in('P')   )WHERE  companycatid = ? and cm.status='Y'  AND parentid = ? ORDER   BY UPPER(TRIM(companyname))
adsql.getAccountTypes= SELECT accttypeid,accttypename FROM fo_accttype_m WHERE status = 'Y'
adsql.updateCompany= UPDATE fo_company_m SET mcprocessid=?   WHERE  companyid = ? ;
adsql.updateCompanyForAdmin= UPDATE fo_company_m SET    companynbr = ?, companyname = ?, shortname = ?, 	backoffcode = ?,companycatid = ?, taxid = ?, companytypeid = ?, companyrating = ?,routingnumber = ?, gfcid = ?, amcname = ?, tzcode = ?, starttradingtime = ?,endtradingtime = ?, bolocation = ?, agrmtimpl = ?, tzdefault = ?, abanbr = ?, ctsacctnbr = ?, custodynbr = ?, swcode = ?, swmsgmode = ?, legalentity = ?,status = ?, jobtime = ?, dateformat = ?,dbdateformat = ?,parentid = ?, cparentid = ?,isglobal = ?,currency = ?, language = ?, userentity = ?,nameusage = ?, regionid = ?, corptypeid = ?, modifiedby = ?, modifieddate = ?, dealercode = ?::smallint, acctstructypeid = ?, nature = ? ,mcprocessid=?  WHERE  companyid = ?
adsql.insertCompany=INSERT INTO fo_company_m(companyid,companynbr,companyname,shortname,backoffcode,companycatid,taxid,companytypeid,companyrating,routingnumber,gfcid,amcname,tzcode,starttradingtime,endtradingtime,bolocation,agrmtimpl,tzdefault,abanbr,ctsacctnbr,custodynbr,swcode,swmsgmode,legalentity,status,jobtime,dateformat,dbdateformat,parentid,cparentid,isglobal,currency,language,userentity,nameusage,regionid,corptypeid,createddate,createdby,modifieddate,modifiedby,dealercode,acctstructypeid,nature,mcprocessid)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?::smallint,?,?,?)
adsql.updateAccountProcessId=UPDATE fo_accountmaster_m SET mcprocessid=? WHERE  acctnbr = ?
adsql.updateAccount=UPDATE fo_accountmaster_m SET companyid=?,legalentity=?,acctname=?,accttypeid=?,status=?,socialcode=?,settleid=?,location=?,acctnatureflag=?,domintlflag=?,bankid=?,bankname=?,glaccountnumber=?,parentacctid=?,settlementdesc=?,remarks1=?,remarks2=?,remarks3=?,escrow=?,cprf=?,ppno=?,regulatorycategoty=?,bankcode=?,banklocation=?,bankacctnbr=?,bankacctname=?,enterpriseid=?,actbranchid=?,extbrcutoff=?,bankidtype=?,routingcode=?,settlemethod=?,parentid=?,modifiedby=?,modifieddate=?,taxid=?,ddaparent=?,refacctnbr=?,nature=?,sortcode=?,macfundacctnbr=?,macfundacctname=?,nominatedacctnbr=?,nominatedacctname=? WHERE acctnbr=?
adsql.insertAccount=INSERT INTO fo_accountmaster_m(companyid,legalentity,acctname,accttypeid,status,socialcode,settleid,location,acctnatureflag,domintlflag,bankid,bankname,glaccountnumber,parentacctid,settlementdesc,remarks1,remarks2,remarks3,escrow,cprf,ppno,regulatorycategoty,bankcode,banklocation,bankacctnbr,bankacctname,enterpriseid,actbranchid,extbrcutoff,bankidtype,routingcode,settlemethod,acctnbr,parentid,createdby,createddate,modifiedby,modifieddate,taxid,ddaparent,nature,sortcode,refacctnbr,macfundacctnbr,macfundacctname,nominatedacctnbr,nominatedacctname,mcprocessid)VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
adsql.updateSettleAccount=UPDATE fo_settlementaccounts_m  SET companyid = ?,legalentity = ?,acctname = ?,accttypeid = ?,status = ?,settleid = ?,location = ?,acctnatureflag = ?,bankid = ?,bankname = ?,ppno = ?,bankcode = ?,parentid = ?,modifiedby = ?,modifieddate = ?,taxid = ?,ddaparent = ?,refacctnbr = ?,remarks = ? WHERE  acctnbr = ?
adsql.insertSettleAccount=INSERT INTO  fo_settlementaccounts_m(  acctnbr, refacctnbr, companyid, ssiid, legalentity, acctname, accttypeid, status, shortname, settleid, acctnatureflag, customerid,  paymode, bankid, bankname, bankcode, location,  ppno,institution, ibannbr, ccy, parentid, sendreceivermsg, remarks,  createddate, createdby, taxid, ddaparent,sortcode) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?,?)
adsql.checkAccountCcyAssociation=SELECT  currencycode  FROM fo_acctcurrency_d  WHERE acctnbr=? AND status=?
adsql.updateAccountCcyAssociation=UPDATE  fo_acctcurrency_d SET currencycode=?,  status=? WHERE acctnbr=?
adsql.insertAccountCcyAssociation=INSERT INTO fo_acctcurrency_d(acctnbr,  status,  createddate,  currencycode)  VALUES (?,?,?,?)
adsql.deleteAccountAssociation=DELETE FROM fo_acct_association_m WHERE toacctnbr=?  AND   fromaccttype=? AND   toaccttype=?
adsql.getAllCountries=SELECT countrycode, countryname FROM FO_COUNTRY_M WHERE status=? ORDER BY countryname
adsql.checkCompanyCSIDExits=select companyid,companyname from fo_company_m where companyid<>?and gfcid=?
adsql.getRejectedReason=SELECT rejectedreason FROM   fo_mc_buildprocess_m WHERE  processid = ?		
adsql.checkLiveAccounts=select count (*) cnt from ( select b.acctnbr from fo_acct_dailybal_m a, fo_accountmaster_m b where (endbal > 0 or mtd > 0) and a.escrowacctnbr = b.acctnbr and b.accttypeid in ('207', '208') and b.status = 'Y' and a.ecompanyid = b.companyid and ecompanyid = ? ) var		

################################################################################################################
---------------------------------------------------- User Setup -----------------------------------------
adsql.getCategoryDefaultLinkGroups = select wc.linkgroupid as key, wc.descr as value from FO_WF_CAT_LINKGROUP_M wc where companycatid = ? and status = ? order by value asc
adsql.getSsoLoginIds=select (newvalues->'ssologid') ->> 'value' ssologin from fo_mc_buildprocess_m a where a.status = 'P' and coalesce(nullif(((newvalues->'ssologid') ->> 'value'),''),null)  is not null union select coalesce(nullif(ssologin,''),'NONE') SSOLOGIN from FO_SS_LOGIN_M where ssologin not in( select (newvalues->'ssologid') ->> 'value' ssologin from fo_mc_buildprocess_m a where a.status in( 'P') and coalesce(nullif(((newvalues->'ssologid') ->> 'value'),''),null)  is not null )
adsql.updateMember=SET loginname=?, membercatid=?, firstname=?, middlename=?, lastname=?, digitalloginid=?, roletypeid=?, modifieddate=?, modifiedby=?, status=?, itc=?, nature=?, linkgroupid=?,defaultrole=?
adsql.insertMember= INSERT INTO fo_member_m (loginid, companyid, loginname, membercatid, password, firstname, middlename, lastname, active, locked, counter, digitalloginid, passwordhint, passwordanswer, passwordexpdate, roletypeid, disabled, createddate, createdby, status, itc, locale, style, nature, language,linkgroupid,defaultrole,  mcprocessid ) VALUES (?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?::timestamp + interval '60' day,?,?,?,?,?,?,?,?,?,?,?,?,?)
adsql.updateSSOLogin=UPDATE fo_ss_login_m SET     fo2login = ?, ssologin = ?, sscatid = ?, status = ?, modifieddate = ?, modifiedby = ? WHERE fo2login = ? AND status  = ?
adsql.deleteSSOLogin=DELETE FROM fo_ss_login_m WHERE     fo2login = ?
adsql.deleteClientFirmByLoginId==UPDATE fo_usercompanypermission_m set status = 'N' WHERE     loginid = ?
adsql.insertSSOLogin=INSERT INTO fo_ss_login_m (fo2login, ssologin, sscatid, status, createddate, createdby) VALUES (?,?,?,?,?,?)
adsql.insertUserAlert=INSERT INTO fo_pr_invusralert_m ( cmid,lgid,ovrd, crdt,crby,natr,stat) VALUES  ( ?,?,?, ?,?,?,?)
adsql.getUsersBySearchGroup=select * from ( select t.*, count(*) over() as counter from ( select distinct loginid loginId, ss.ssologin SsoLogin, m.companyid companyId, m.firstname firstName, m.lastname lastName, '' cparentCname, case when m.status = 'N' then 'Deleted' when m.status = 'P' then 'Waiting For Approval' else 'Active' end status, c.companycatid companyCatId, c.companyname clientFirmName, c.parentid parentId, c.parentid branchId, c.cparentid cparentId, loginname loginName, m.membercatid memberCatId, ( select descr from fo_wf_cat_linkgroup_m a where a.linkgroupid = m.linkgroupid ) profileDesc, case description when 'ADMIN' then case c.companycatid when '300' then 'TRADER-ADMIN' when '400' then 'BUSINESSMANAGER-ADMIN' else description end when 'CLIENT' then case roledesc when 'EXEMPT' then 'CLIENT-EXEMPT' else description end else description end description, ( select r.roledesc from fo_roletypes_m r where r.roletypeid = m.roletypeid) roleDesc from fo_member_m m left outer join fo_ss_login_m ss on (ss.fo2login = m.loginid) , fo_usercategory_m u, fo_company_m c, fo_companycategory_m ct, fo_roletypes_m r where m.membercatid = u.membercatid and c.companyid = m.companyid and c.companycatid = ct.companycatid and m.roletypeid = r.roletypeid and m.membercatid in('1') and m.loginid <> '10520' and m.status <> 'R' and c.companycatid = ? and c.status = 'Y' and ct.status = 'Y' ) t ) a
adsql.getUsersBySearchNonGroup=select * from ( select t.*, count(*) over() as counter from ( select distinct loginid loginId, ss.ssologin SsoLogin, m.companyid companyId, m.firstname firstName, m.lastname lastName, case when m.status = 'N' then 'Deleted' when m.status = 'P' then 'Waiting For Approval' else 'Active' end status, ucp.companycatid companyCatId, ucp.companyname clientFirmName, ucp.parentid parentId, ucp.parentid branchId, desk.companyname cparentCname, loginname loginName, ucp.cparentid cparentId, m.membercatid memberCatId, ( select descr from fo_wf_cat_linkgroup_m a where a.linkgroupid = m.linkgroupid ) profileDesc , case description when 'ADMIN' then case ucp.companycatid when '300' then 'TRADER-ADMIN' when '400' then 'BUSINESSMANAGER-ADMIN' else description end when 'CLIENT' then case roledesc when 'EXEMPT' then 'CLIENT-EXEMPT' else description end else description end description, ( select r.roledesc from fo_roletypes_m r where r.roletypeid = m.roletypeid) roleDesc from fo_member_m m left outer join fo_ss_login_m ss on (ss.fo2login = m.loginid ) , fo_usercategory_m u, ( select distinct c.companyid, c.companycatid, c.parentid, c.cparentid, c.companyname from ( with recursive t as ( select c.companyid, cparentid, case when coalesce(nullif(ac.refacctnbr, ''), null) is null then c.companyname || ' | ' || 'None' else c.companyname || ' | ' || ac.refacctnbr || ' - ' || ac.acctname end companyname, c.status, parentid, companycatid from fo_company_m c left outer join ( select refacctnbr , acctname, companyid, status, accttypeid from fo_accountmaster_m ) ac on (ac.companyid = c.companyid and ac.status = 'Y' and ac.accttypeid = 'I') where c.companyid in ( select companyid from fo_up_company_m where loginid = '10520' and status = 'Y') union all select t_2.companyid, t_2.cparentid, case when coalesce(nullif(ac.refacctnbr, ''), null) is null then t_2.companyname || ' | ' || 'None' else t_2.companyname || ' | ' || ac.refacctnbr || ' - ' || ac.acctname end companyname, t_2.status, t_2.parentid, t_2.companycatid from fo_company_m as t_2 left outer join ( select refacctnbr , acctname, companyid, status, accttypeid from fo_accountmaster_m ) ac on (ac.companyid = t_2.companyid and ac.status = 'Y' and ac.accttypeid = 'I') , t where t.companyid = t_2.parentid ) select companyid, companycatid, parentid, cparentid, companyname , status from t where status = 'Y' ) c , fo_companycategory_m ct where c.companycatid = ct.companycatid and ct.status = 'Y' ) ucp , fo_company_m desk, fo_roletypes_m r where m.membercatid = u.membercatid and m.status <> 'R' and desk.companyid = ucp.parentid and ucp.companyid = m.companyid and m.roletypeid = r.roletypeid
adsql.getSelectedDeskCompanyDetailsChecker= SELECT * FROM (SELECT c.companyid,companyname,shortname,companycatid,parentid,taxid,companytypeid,companyrating,routingnumber,gfcid,amcname,tzcode,dateformat,starttradingtime,endtradingtime,dbdateformat,bolocation,abanbr,tzdefault,agrmtimpl,c.createddate,c.createdby,c.modifieddate,c.modifiedby,cparentid,c.status,legalentity,ctsacctnbr,custodynbr,isglobal,swcode,swmsgmode,backoffcode,jobtime,companynbr,currency,language,nameusage,regionid,corptypeid,userentity,dealercode,acctstructypeid,mcprocessid,b.status buildprocess,nature FROM   fo_company_m c left outer join fo_mc_buildprocess_m b on ( c.mcprocessid=b.processid ) WHERE  c.companyid=?  AND    c.status IN ( ? , ? )  )   t WHERE  ( coalesce(nullif(buildprocess,''), 'P') in ('P' ) or   (status <>'P' OR buildprocess <>'R' ))        
adsql.getSelectedDeskCompanyDetails=SELECT * FROM (SELECT c.companyid,companyname,shortname,companycatid,parentid,taxid,companytypeid,companyrating,routingnumber,gfcid,amcname,tzcode,dateformat,starttradingtime,endtradingtime,dbdateformat,bolocation,abanbr,tzdefault,agrmtimpl,c.createddate,c.createdby,c.modifieddate,c.modifiedby,cparentid,c.status,legalentity,ctsacctnbr,custodynbr,isglobal,swcode,swmsgmode,backoffcode,jobtime,companynbr,currency,language,nameusage,regionid,corptypeid,userentity,dealercode,acctstructypeid,mcprocessid,b.status buildprocess,nature FROM   fo_company_m c left outer join fo_mc_buildprocess_m b on ( c.mcprocessid=b.processid ) WHERE  c.companyid=?  AND    c.status IN ( ? , ? )  )   t WHERE  coalesce(buildprocess, 'P') in ('P', 'R' ,'A') 
adsql.getMCSelectedCompanyDetails1= SELECT  a.* FROM (SELECT a.companyid, b.processid,companyname,shortname,companycatid,parentid,taxid,companytypeid,companyrating,routingnumber,gfcid,amcname,tzcode,DATEFORMAT,starttradingtime,endtradingtime,a.createddate,a.createdby,a.status,dbdateformat,bolocation,agrmtimpl,tzdefault,abanbr,action,cparentid,custodynbr,isglobal,ctsacctnbr,backoffcode,swcode,swmsgmode,companynbr,legalentity,currency,nameusage,regionid,corptypeid,LANGUAGE,userentity,dealercode,acctstructypeid,rejectedreason,nature FROM fo_company_m a left outer join fo_mc_buildprocess_m b on ( a.mcprocessid = b.processid  AND b.status IN('P','R')  AND    coalesce(nullif(b.modifiedby,''),null)  is null ) WHERE a.companyid = ?  ORDER BY companyname, createddate DESC) a limit 1
adsql.getMCSelectedCompanyDetails2= SELECT a.* FROM (SELECT a.companyid,b.processid,companyname,shortname,companycatid,parentid,taxid,companytypeid,companyrating,routingnumber,gfcid,amcname,tzcode,DATEFORMAT,starttradingtime,endtradingtime,a.createddate,a.createdby,a.status,dbdateformat,bolocation,agrmtimpl,tzdefault,abanbr,action,cparentid,custodynbr,isglobal,ctsacctnbr,backoffcode,swcode,swmsgmode,companynbr,legalentity,currency,nameusage,regionid,corptypeid,LANGUAGE,userentity,dealercode,acctstructypeid,rejectedreason,nature FROM fo_company_m  a left outer join fo_mc_buildprocess_m b on ( a.mcprocessid = b.processid AND b.status = 'P') WHERE a.companyid = ?  ORDER BY companyname, createddate DESC) a limit 1

################################################################################################################
---------------------------------------------------- User Product Permissions -----------------------------------------
adsql.selectStatementForProcessId=SELECT mcprocessid processid,groupid FROM   fo_up_product_d WHERE  groupid = ? AND	loginid = ?
adsql.selectStatementForAll=SELECT * FROM   fo_up_product_d WHERE  groupid = ? AND	loginid = ? ORDER BY createddate DESC
adsql.selectStatementForTzCode=SELECT t.javatzcode FROM fo_company_m a, fo_group_m g, fo_timezone_m t WHERE a.companyid = g.companyid AND g.prodid = ? AND a.companycatid = '300' AND t.tzcode = a.tzcode
adsql.insertStatement=INSERT INTO fo_up_product_d  (groupid,loginid,status,createddate,createdby,mcprocessid) VALUES  (?,?,?,?,?,?)
adsql.updatespclient1=UPDATE fo_spclient_d SET    status='N' WHERE  deskid=? AND    prodid=? AND    salespersonid=?
adsql.updatespclient2=UPDATE fo_spclient_d SET    status='N' WHERE  branchid=? AND    prodid=? AND    salespersonid=?
adsql.getUserLockUpdateStatus=SELECT status,processid FROM fo_userassoclock_m WHERE taskid=?::SMALLINT
adsql.checkUserLevelAuditLog=select m.loginid, m.loginname from fo_auditLog_m m where m.loginid = ? and m.status = ?
adsql.deleteUser=UPDATE fo_member_m SET modifieddate=?, modifiedby=?, status=? where loginid = ?
adsql.getAllProducts = SELECT prodid,prodname FROM fo_product_m WHERE  status ='Y'
adsql.updateUserProducts1 = UPDATE fo_up_product_d SET mcprocessid=? WHERE  groupId = ? AND    loginid = ?
adsql.updateUserProducts2 = UPDATE fo_up_product_d SET status = ?, createddate = ?::timestamp,createdby = ? WHERE  groupId = ? AND    loginid = ?
adsql.insertUserProducts = INSERT INTO fo_up_product_d (groupid,loginid,status,createddate,createdby,mcprocessid ) VALUES  (?,?,?,?,?,?)
################################################################################################################
adsql.getGroupIds=SELECT  groupid FROM fo_group_m where companyid = ? AND prodid  =? AND currencycode  =?
adsql.getUserDeskProductCurrAssoc= SELECT DISTINCT b.prodid,a.currencycode,a.status FROM   fo_prodcurr_d a, (WITH RECURSIVE t (level,prodid, prodname, prodtagging, parentid) AS (SELECT 1 as level,prodid, prodname, prodtagging, parentid,status FROM fo_product_m WHERE prodid = ? UNION ALL SELECT t.level + 1  as level,t_2.prodid, t_2.prodname, t_2.prodtagging, t_2.parentid,t_2.status FROM fo_product_m AS t_2, t WHERE t.prodid = t_2.parentid) SELECT prodid, prodname, prodtagging, parentid,level FROM t WHERE level <> 1 AND status = 'Y' AND level  in ( WITH RECURSIVE t (level) AS (SELECT 1 AS level,prodid,status FROM fo_product_m WHERE prodid = ? UNION ALL SELECT t.level + 1  as level,t_2.prodid,t_2.status FROM fo_product_m AS t_2, t WHERE t.prodid = t_2.parentid) SELECT max(level) FROM t WHERE status = 'Y'  ) )	b WHERE  a.prodid = ? AND a.status = 'Y' 
adsql.getUserDeskProductCurrAssocBranchId= SELECT DISTINCT b.prodid,a.currencycode,a.status FROM   fo_prodcurr_d a,fo_group_m c,  (WITH RECURSIVE t (level,prodid, prodname, prodtagging, parentid) AS (SELECT 1 as level,prodid, prodname, prodtagging, parentid,status FROM fo_product_m WHERE prodid = ? UNION ALL SELECT t.level + 1  as level,t_2.prodid, t_2.prodname, t_2.prodtagging, t_2.parentid,t_2.status FROM fo_product_m AS t_2, t WHERE t.prodid = t_2.parentid) SELECT prodid, prodname, prodtagging, parentid,level FROM t WHERE level <> 1 AND status = 'Y' AND level  in ( WITH RECURSIVE t (level) AS (SELECT 1 AS level,prodid,status FROM fo_product_m WHERE prodid = ? UNION ALL SELECT t.level + 1  as level,t_2.prodid,t_2.status FROM fo_product_m AS t_2, t WHERE t.prodid = t_2.parentid) SELECT max(level) FROM t WHERE status = 'Y'  ) )	b WHERE  a.prodid = ? AND a.status = 'Y' AND c.currencycode = a.currencycode AND c.companyid =? AND b.prodid = c.prodid AND c.status = 'Y'
adsql.getCustServParentProdCurrencies=SELECT DISTINCT a.currencycode FROM   fo_group_m a WHERE  a.status = 'Y' AND a.groupid IN (SELECT bc.groupid FROM(SELECT c.groupid FROM   fo_up_product_d c WHERE  c.loginid = ? ) bc  WHERE  bc.groupid = (SELECT c.groupid FROM   fo_group_m c WHERE  status = 'Y' AND c.groupid = bc.groupid AND companyid = ? AND prodid = ?)) 
adsql.getMCUserProducts= SELECT a.groupid, a.status,a.mcprocessid FROM   fo_up_product_d a, fo_group_m b WHERE  a.loginid = ? AND	b.prodid IN (WITH RECURSIVE t AS ( SELECT prodid, parentid FROM fo_product_m cm WHERE prodid = ? UNION ALL SELECT t_2.prodid,t_2.parentid FROM fo_product_m AS t_2,t WHERE t.prodid = t_2.parentid ) SELECT prodid FROM  t ) AND b.groupid = a.groupid AND b.companyid =? 
################################################################################################################
------------------------------------------------- Product Management -------------------------------------------
################################################################################################################


################################################################################################################
--------------------------------------------------- Mutual Funds -----------------------------------------------
################################################################################################################
adsql.getCompanyCatIdName				=	SELECT   companycatname   FROM   fo_companycategory_m  WHERE    companycatid = ?  
adsql.getSelFCDetails				 	=	SELECT companyid, companyname, companycatid, parentid, companytypeid, companyrating, routingnumber,  tzcode,  dateformat, dbdateformat,  bolocation,  tzdefault,   createddate,  createdby,  modifieddate,  modifiedby, cparentid,amcname, status,  nature,mcprocessid FROM   fo_company_m  WHERE  companyid=?  AND    status in ('P','Y')
adsql.insertFundCompanyDetails		=	INSERT INTO fo_company_m (companyid, companyname, companycatid, parentid, companytypeid,companyrating, routingnumber, tzcode, dateformat, dbdateformat, bolocation, createddate, createdby, backoffcode,nature,status,mcprocessid)  VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
adsql.getDomicileTypes 				= 	SELECT dmid, desr FROM fo_mmf_domicile_m WHERE stat = 'Y' order by dmid desc
##adsql.getProductClassDetails 			= 	select  * from ( select distinct prodclassid productClassId, refid productClassDesc, descr description, case when b.processid is null then a.status else b.status end status, dmid domicileType, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, coalesce(a.modifiedby, a.createdby) createdBy,a.createddate createdDate, rejectedreason rejectedReason from fo_mmf_prodclass_m a left outer join fo_mc_buildprocess_m b on ( a.mcprocessid = b.processid ) where a.status in ( 'Y', 'P' ) and a.companyid = ?)t order by createddate desc nulls last
adsql.getSelectedCompaniesFC    		=  	SELECT distinct cm.companyid, a.status buildstatus, case  when coalesce(nullif(a.processid,''), null) is null then companyname  else description    end companyname   FROM   fo_company_m cm left outer join fo_mc_buildprocess_m a on (a.processid = cm.mcprocessid)   WHERE  companycatid = ?   AND cm.status in('P','Y')
adsql.delFCValidations				=	SELECT   companyname fund_company, fam.prodname fund_family, descr prodclass, prd.prodname FROM fo_product_m prd, fo_mmf_fund_m fund,  fo_mmf_prodclass_product_d cla,  fo_mmf_fundfact_m typ,  fo_company_m fundcomp, fo_product_m fam,  fo_mmf_prodclass_m clas  WHERE prd.prodid = fund.fundnbr AND cla.prodid = prd.prodid  AND typ.fundnbr = prd.prodid  AND fundcomp.companyid = fund.providerid AND fam.prodid = fund.familyid  AND clas.prodclassid = cla.prodclassid	  AND prd.status = 'Y'  AND fund.status = 'Y'  AND cla.status = 'Y'  AND typ.status = 'Y'  AND fundcomp.status = 'Y'  AND fam.status = 'Y' AND fundcomp.companyid = ? ORDER BY 1, 2, 3, 4
adsql.delFcFfValidations				=	SELECT DISTINCT b.prodid,b.refprodid,	b.prodname, UPPER (b.prodname) uprodname, (select companyname from fo_company_m  where companyid = ?) fund_company	 FROM fo_group_m a, fo_product_m b  WHERE     a.prodid IN (SELECT DISTINCT prodid	 FROM fo_group_m	 WHERE     companyid IN   (SELECT companyid FROM fo_company_m  WHERE  companycatid =  '600' AND status = 'Y')  AND status = 'Y') AND a.prodid = b.prodid  AND a.companyid = ?  AND a.status = b.status  AND b.prodid NOT IN (SELECT fundnbr FROM FO_MMF_FUND_M)  ORDER BY uprodname
adsql.getFundCompanyTypes				=	SELECT  a.companytypeid, a.description  FROM        fo_companytype_m a, fo_ccat_type_assc_m b WHERE       b.companycatid  = ?   AND     b.status = ?   AND     b.companytypeid = a.companytypeid  AND     a.status = ?  ORDER BY a.sqid
adsql.insertProductClassDetails       =   INSERT INTO fo_mmf_prodclass_m (prodclassid,refid,descr,createdby,createddate,status,companyid,dmid,mcprocessid)VALUES(?,?,?,?,?::TIMESTAMP,?,?,?,?)
adsql.updateFcCompany					=   SET     companyname = ?, shortname = ?,  companycatid = ?,  parentid = ?,  companytypeid = ?,  companyrating = ?, routingnumber = ?, tzcode = ?,   dateformat = ?, dbdateformat = ?,  bolocation = ?, abanbr = ?, modifiedby = ?, modifieddate = ?,   backoffcode= ?,  nature= ?	 
adsql.checkprodClassAssociation		=   SELECT 	descr classname, prodname FROM 	fo_mmf_prodclass_m m, fo_mmf_prodclass_product_d d, fo_product_m p WHERE 	m.prodclassid = d.prodclassid  AND 	d.prodid = p.prodid AND 	d.status = 'Y' AND 	p.status = 'Y'	  AND 	d.prodclassid = ?				
adsql.getMSelectedCompanies          	=   SELECT * from (SELECT var_sbq.*, row_number() over(partition by companyid order by moddate desc) rn	 from (  SELECT distinct cm.companyid,  a.status buildstatus,  case  when coalesce(nullif(a.processid,''), null) is null then companyname   
adsql.getCSelectedCompanies         	=	else description end companyname,  abanbr,  bolocation,  gfcid, routingnumber,   a.createddate moddate, cm.status, a.rejectedreason,  '' AS action,'' rejectedby,'' acceptedby,'' modifiedby,''createdby,  '' AS  type,cm.mcprocessid  FROM   fo_company_m cm left outer join fo_mc_buildprocess_m a on (a.processid = cm.mcprocessid    )	  WHERE  companycatid = ? 	   AND cm.status in('P','Y')  ) AS var_sbq ) t where   rn = 1   
adsql.getCKSelectedCompanies          =   SELECT * from (SELECT var_sbq.*,	 row_number() over(partition by companyid order by moddate desc) rn	 from (	 SELECT distinct cm.companyid, a.status buildstatus, case  when coalesce(nullif(a.processid,''), null) is null then companyname  when a.status = 'R' then companyname else description  end companyname, abanbr,  bolocation,  gfcid,  routingnumber,  a.createddate moddate, cm.status, a.rejectedreason,  '' AS action,'' rejectedby,'' acceptedby,'' modifiedby,''createdby,  '' AS  type,cm.mcprocessid FROM   fo_company_m cm left outer join fo_mc_buildprocess_m a on (a.processid = cm.mcprocessid   )	  WHERE  companycatid = ?   AND cm.status in('P','Y')  ) AS var_sbq ) t where   rn = 1  and  ( coalesce(nullif(buildstatus,''), 'P') in ('P' ) or   (status <>'P' OR buildstatus <>'R' )) ORDER   BY UPPER(TRIM(companyname))	 
adsql.getMKSelectedCompanies          =   SELECT * from (SELECT var_sbq.*, row_number() over(partition by companyid order by moddate desc) rn	 from (  SELECT distinct cm.companyid,  a.status buildstatus,  case  when coalesce(nullif(a.processid,''), null) is null then companyname   when a.status = 'R' then description else description  end companyname,  abanbr,  bolocation,  gfcid, routingnumber,   a.createddate moddate, cm.status, a.rejectedreason,  '' AS action,'' rejectedby,'' acceptedby,'' modifiedby,''createdby,  '' AS  type,cm.mcprocessid  FROM   fo_company_m cm left outer join fo_mc_buildprocess_m a on (a.processid = cm.mcprocessid    )	  WHERE  companycatid = ? 	   AND cm.status in('P','Y')  ) AS var_sbq ) t where   rn = 1   and  coalesce(buildstatus, 'P') in ('P', 'R' ,'A')  ORDER   BY UPPER(TRIM(companyname))	 
adsql.delFFValidations				=	SELECT   companyname fund_company, fam.prodname fund_family, descr prodclass, prd.prodname FROM fo_product_m prd, fo_mmf_fund_m fund,  fo_mmf_prodclass_product_d cla,  fo_mmf_fundfact_m typ,  fo_company_m fundcomp, fo_product_m fam,  fo_mmf_prodclass_m clas  WHERE prd.prodid = fund.fundnbr AND cla.prodid = prd.prodid  AND typ.fundnbr = prd.prodid  AND fundcomp.companyid = fund.providerid AND fam.prodid = fund.familyid  AND clas.prodclassid = cla.prodclassid	  AND prd.status = 'Y'  AND fund.status = 'Y'  AND cla.status = 'Y'  AND typ.status = 'Y'  AND fundcomp.status = 'Y'  AND fam.status = 'Y' AND fam.prodid = ? ORDER BY 1, 2, 3, 4
adsql.insertupdateproductclass		= 	with b as ( select ? prodclassid, ? refid, ? descr, ? createdby, ?::TIMESTAMP createddate, ? status, ? companyid, ? dmid, ? mcprocessid) , upd as ( update fo_mmf_prodclass_m a set refid = b.refid, status = b.status, descr = b.descr, dmid = b.dmid, modifiedby = b.createdby, modifieddate = b.createddate	 from b where a.prodclassid =b.prodclassid AND    a.companyid = b.companyid returning a.prodclassid  ) insert into fo_mmf_prodclass_m (prodclassid, refid, descr, createdby, createddate, status, companyid, dmid, mcprocessid) select prodclassid, refid, descr, createdby, createddate, status, companyid, dmid, mcprocessid from b where (b.prodclassid) not in ( select prodclassid from upd)
adsql.updatemcproductclass				= UPDATE	fo_mmf_prodclass_m	SET mcprocessid=? WHERE  prodclassid =?  AND    companyid =?
adsql.deleteproductgroupclass         = DELETE from fo_mmf_prdgrpcls_d WHERE  pcid = ?
adsql.setproductclsgrp				= 	INSERT INTO fo_mmf_prdgrpcls_d (mgid, pcid, ibid, eflg, natr,  aenp, crby,  crdt) SELECT distinct a.mgid,? pcid,b.ibid,? eflg, ? natr,? aenp, ? crby,?::TIMESTAMP crdt  FROM 	fo_mmf_prdgroup_m a,  fo_mmf_prdgrpcls_d b   WHERE 	a.stat='Y' AND 		a.mgid=b.mgid
adsql.updateproductclass				= UPDATE	fo_mmf_prodclass_m	 SET	status = 'N', 	 modifiedby = ?, modifieddate = ?::TIMESTAMP WHERE  prodclassid =?	 AND    companyid =?			
adsql.getProductClassAlertMsg			=	SELECT DISTINCT prodclassid,refid,descr FROM fo_mmf_prodclass_m a, fo_mc_buildprocess_m b  WHERE coalesce(nullif(a.mcprocessid,''),null) = b.processid  and a.companyid = ?				


 
################################################################################################################
--------------------------------------------------Product Group - Company Association -------------------------------------------------
################################################################################################################
adsql.getGroupIdByStatus = SELECT a.groupid FROM   fo_group_m a WHERE  companyid = ?  AND prodid = ? AND  currencycode= ? AND status=?
adsql.updateGroupStatus=update fo_group_m set	status = ? where companyid = ? and prodid = ? and currencycode = ? 
adsql.getPrdClsGrp=select mgid prodGrpId,desr prodGrpName,mcprocessid mcProcessId from fo_mmf_prdgroup_m where cmid=? and stat in (?,?)
adsql.getPrdClsAsso=select a.prodclassid,a.prodclassName,a.dmid,a.domicileType,b.pdclgrpid,b.eflg,b.aenp from (select prodclassid,descr prodclassName,a.dmid,b.desr domicileType from fo_mmf_prodclass_m a,fo_mmf_domicile_m b where a.dmid=b.dmid and a.companyid=? and a.status=?)a left outer join (select gm.mgid pdclgrpid,pcid prodclassid,ibid,eflg,aenp from fo_mmf_prdgrpcls_d gd,fo_mmf_prdgroup_m gm where gm.cmid=? and gd.ibid=? and gm.mgid=gd.mgid and gm.stat=?)b on (a.prodclassid=b.prodclassid) order by prodclassname
adsql.getPrdGrpFamily=select p.prodid,p.prodname from fo_mmf_prodclass_m pcm,fo_mmf_prodclass_product_d pca ,fo_mmf_fund_m mmf,fo_product_m p where pcm.prodclassid=pca.prodclassid and pcm.companyid=? and pca.prodclassid=? and pca.prodid=mmf.fundnbr and mmf.familyid=p.prodid and pca.status=? group by p.prodid order by prodname
adsql.getPrdGrpFunds=select a.prodclassid,a.familyid,a.fundnbr prodId,a.fundcode || '-' || a.reffundnbr || '-' || a.funddesc prodName,a.fundcode,a.currencycode ccyCode,a.reffundnbr,b.mgid,b.entityid,b.investaccount investAccountId,b.settleaccount settleAccountId,b.stat prodStatus from (select mmf.fundnbr,mmf.familyid,mmf.fundcode,mmf.funddesc,mmf.currencycode,mmf.reffundnbr,pcpd.prodclassid from fo_mmf_fund_m mmf, fo_group_m grp, fo_mmf_prodclass_product_d pcpd where mmf.fundnbr=pcpd.prodid and grp.prodid = mmf.fundnbr and grp.currencycode= mmf.currencycode and grp.status = 'Y' and grp.companyid = ? and pcpd.status=? and mmf.status=? and mmf.familyid=? and pcpd.prodclassid=?)a left outer join(select pgd.pcid prodclassid,pgd.prid prodid,pgd.mgid,pgd.ibid entityid,pgd.investaccount,pgd.settleaccount,pgd.stat from FO_MMF_PRDGRPFUND_D pgd where pgd.pcid=? and pgd.ibid=? and pgd.mgid=?)b on (b.prodclassid=a.prodclassid and a.fundnbr=b.prodid )
adsql.insertPrdGrp=INSERT INTO fo_mmf_prdgroup_m(mgid,desr,cmid,stat,natr,crby,crdt,mcprocessid)VALUES (?, ?, ?, ?, ?, ?, ?,?)
adsql.updateProcessId=update fo_mmf_prdgroup_m set mcprocessid=? where cmid=?
adsql.updatePrdGrp = UPDATE fo_mmf_prdgroup_m SET  stat=?,desr = ?,natr = ?,mdby = ?,mddt = ?,mcprocessid=? WHERE cmid = ? AND  mgid = ?
adsql.insertUpdateProdCls=with b as (select ? mgid,? pcid,? ibid,? eflg,? natr,? aenp,? crby,?::timestamp crdt,? mcprocessid) , upd as ( update fo_mmf_prdgrpcls_d a set eflg = b.eflg ,natr = b.natr,aenp = b.aenp,mdby = b.crby,mddt = b.crdt ,mcprocessid=b.mcprocessid from b where b.mgid = a.mgid and b.pcid = a.pcid and b.ibid = a.ibid returning a.mgid ) insert into fo_mmf_prdgrpcls_d (mgid,pcid,ibid,eflg,natr,aenp,crby,crdt,mcprocessid) select b.mgid,b.pcid,b.ibid,b.eflg,b.natr,b.aenp,b.crby,b.crdt,b.mcprocessid from b where(b.mgid) not in (select mgid from upd)
adsql.insertUpdatePrdGrpFund = with b as (select ? mgid,? pcid,? ibid,	? prid,? stat,? crby,? mdby,? investaccount,? settleaccount,? mcprocessid) , upd as (update fo_mmf_prdgrpfund_d a set stat = b.stat , mcprocessid = b.mcprocessid, investaccount= b.investaccount,settleaccount=b.settleaccount from  b where b.mgid = a.mgid and b.pcid = a.pcid	and b.ibid = a.ibid	and b.prid = a.prid returning a.mgid ) insert into fo_mmf_prdgrpfund_d (mgid,pcid,ibid,prid,stat,crby,mdby,settleaccount,investaccount,mcprocessid) select b.mgid,b.pcid, b.ibid,b.prid,	b.stat,	b.crby,	b.mdby,	b.settleaccount,b.investaccount,b.mcprocessid from b where (b.mgid) not in (select mgid	from upd)
adsql.insertUpdateGroup=with b as (select ? companyid,? prodid,? currencycode,? createdby,? status,? mcprocessid) ,upd as (update fo_group_m a set status = b.status , mcprocessid = '' from  b where b.companyid = a.companyid	and b.prodid = a.prodid	and b.currencycode = a.currencycode returning a.companyid ) insert	into fo_group_m (groupid,companyid,prodid,currencycode,createdby,status,mcprocessid) select	nextval('SQ_GROUPID'),companyid,prodid,currencycode,createdby,status,mcprocessid from b  where (b.companyid) not in (select companyid	from upd)
adsql.getSettleAcctByCCY=SELECT DISTINCT a.acctnbr,a.acctname || ' - ' ||a.refacctnbr acctname FROM fo_accountmaster_m a,fo_acctcurrency_d c WHERE a.companyid = ? AND c.currencycode = ? AND a.acctnbr = c.acctnbr AND a.status = 'Y' AND c.status = 'Y'
adsql.isActiveTradeFund=SELECT COUNT(*) FROM	fo_trading_t t	WHERE	t.eccompanyid = ?  AND	t.tradestatus not in ( 'R','D','Z') and '1'= case when tradestatus ='A' and ack1time is not null and ack2time is not null and ack5time is not null then '0' else '1' end
adsql.isAcctBalanceFund=SELECT COUNT(*) FROM fo_product_m p,fo_company_m d,fo_accountmaster_m a,fo_acct_association_m ac,fo_acct_dailybal_m acdb,fo_group_m g  WHERE g.status = 'Y' AND g.prodid = p.prodid AND g.companyid = d.companyid AND g.companyid = a.companyid AND g.groupid = ac.groupid AND acdb.groupid = g.groupid AND acdb.escrowacctnbr = a.acctnbr AND ac.toacctnbr = a.acctnbr AND ac.fromaccttype ='I' AND ac.toaccttype ='207' AND a.status = 'Y' AND a.accttypeid = '207' AND ac.status = 'Y' AND a.companyid = ?
adsql.getClientProdGrpFunds=select distinct f.prid prodId,prodname,prodcode fundCode,SETTLEACCOUNT settleAccountId,INVESTACCOUNT investAccountId,g.currencycode ccyCode,g.groupid from fo_mmf_prdgroup_m a,fo_mmf_prdgrpcls_d b,fo_mmf_prdgrpfund_d f,fo_product_m p,fo_mmf_prodclass_m c,fo_group_m g where p.prodid = f.prid and c.prodclassid = f.pcid and f.pcid = b.pcid and f.stat = 'Y' and a.mgid = b.mgid and f.mgid = b.mgid and b.ibid = f.ibid and g.companyid = a.cmid and g.prodid = f.prid and g.prodid = p.prodid and a.cmid =? and a.mgid = ? and b.ibid = ?
adsql.unsetGroup=update fo_group_m set	status = 'N' where status = 'Y' and prodid = ? and companyid = ?
adsql.unsetSettleAcct=update fo_accountmaster_m a set status = 'N' where accttypeid = '207' and acctnbr in (select fromacctnbr from fo_acct_association_m d where status = 'N' and d.fromaccttype = '207' and d.toaccttype = '209' and groupid in(select a.groupid from fo_group_m a where a.prodid =? and a.companyid =? )and fromacctnbr in (select b.acctnbr from fo_accountmaster_m b where b.companyid =? and b.acctnbr = d.fromacctnbr and b.status = 'Y' and b.legalentity =? ) )
adsql.unsetInvSettleAcct=update fo_acct_association_m d set status = 'N' where status = 'Y' and groupid in( select a.groupid from fo_group_m a where a.prodid =? and a.companyid =? )and fromacctnbr =(select b.acctnbr from fo_accountmaster_m b where b.companyid =? and b.acctnbr = d.fromacctnbr and b.status = 'Y'and b.legalentity =? )
adsql.checkSettleAccountByGrpId=select count(*) from fo_acct_association_m aa ,fo_accountmaster_m a where a.acctnbr = aa.toacctnbr and fromacctnbr = ? and a.status = ? and aa.status = ? and toaccttype = ? and groupid = ?
adsql.insertAcctAssoc  = INSERT INTO fo_acct_association_m (groupid, fromacctnbr,toacctnbr,fromaccttype,toaccttype,status,createdby,createddate,intposttypeid) VALUES      (?,?,?,?,?,?,?,?,?)
adsql.updateAcctAssocByGrpId=UPDATE fo_acct_association_m SET status = ? WHERE groupid = ? AND fromacctnbr = ? AND toacctnbr = ? AND fromaccttype = ? AND toaccttype = ? AND intposttypeid = ?
adsql.updateSettAcctByGrpId=UPDATE fo_acct_clientsettlement_m SET status = ? WHERE groupid = ? AND acctnbr = ?
adsql.insertClientSettAcct=INSERT INTO fo_acct_clientsettlement_m (groupid,setlprodid,acctnbr,status,createdby) VALUES(?,?,?,?,?)
adsql.checkFundAcct=SELECT count(*) FROM fo_acct_association_m a, fo_accountmaster_m b WHERE parentid = ? AND b.acctnbr = a.fromacctnbr AND a.status = 'Y' AND b.status = 'Y' AND a.groupid = ?
adsql.getAcctDetForFAcct=select a.SOCIALCODE ,a.acctnatureflag from fo_company_m b,fo_accountmaster_m a  where a.acctnbr = ? and a.companyid = b.companyid 
adsql.insertFundAcct=INSERT INTO fo_accountmaster_m (acctnbr,acctname,accttypeid,refacctnbr,companyid,parentid,createdby,createddate,taxid,socialcode,legalentity,escrow,acctnatureflag,divtype,acctstructypeid) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
adsql.getDeskProdClsFundsCnt=select pc.prodclassid, count(*) noofProd from	fo_mmf_prodclass_m pc,	fo_mmf_prodclass_product_d pd where pc.prodclassid=pd.prodclassid	and pc.companyid=? and pc.status='Y' and pd.status='Y' group by pc.prodclassid
adsql.getProdClsList=select	a.mgid,	a.pcid,	a.ibid,	a.eflg,	coalesce(activeCnt, 0) activeCnt from	fo_mmf_prdgrpcls_d a left outer join (	select		mgid,		pcid,		ibid,		count(*) activeCnt	from		fo_mmf_prdgrpfund_d	where		stat = 'Y'	group by		mgid,		pcid,		ibid )b on	(a.mgid = b.mgid	and a.pcid = b.pcid	and a.ibid = b.ibid)	where	a.mgid =?	and a.ibid =? 
adsql.getBusinessEntitiesBothByDesk= WITH RECURSIVE t  AS  (SELECT companyid,companyname,parentid,companycatid,status ,legalentity,cparentid FROM fo_company_m cm	WHERE companyid  = ? UNION ALL SELECT t_2.companyid,t_2.companyname, t_2.parentid, t_2.companycatid,t_2.status,t_2.legalentity,t_2.cparentid FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid  ) SELECT companyid ,companyname  FROM t WHERE  companycatid=? AND cparentid!='0000'  AND    status=?	  ORDER BY companyname
################################################################################################################
------------------------------------------------ Desk Entity Setup ---------------------------------------------
################################################################################################################

################################################################################################################
------------------------------------------------ Company Product Permission ---------------------------------------------
################################################################################################################
adsql.getAssociatedCompanyProducts = SELECT distinct a.prodid,a.prodname,UPPER(TRIM(a.prodname))  as uprodname,  a.prodcode FROM   fo_product_m a,fo_group_m b WHERE  a.prodid = b.prodid  AND    b.status = 'Y'  AND    a.status = 'Y' AND    b.companyid = ? AND    a.parentid NOT IN (SELECT prodid  FROM   fo_product_m  ) ORDER BY uprodname 						
adsql.getDeskProdCurrAssociation = SELECT DISTINCT b.prodid, a.currencycode, a.status FROM fo_prodcurr_d a,fo_group_m c,(SELECT DISTINCT pm.prodid, prodname, parentid FROM fo_product_m pm WHERE LENGTH (prodid) <> 4 AND status = 'Y' ORDER BY prodid) b WHERE a.prodid = ? AND a.status = 'Y' AND c.status = 'Y' AND c.currencycode = a.currencycode  AND c.companyid = ? AND   b.prodid=c.prodid
adsql.getCompanyParentProdCurrencies = SELECT DISTINCT currencycode FROM   fo_group_m  WHERE  prodid =?  AND companyid =?  AND status = 'Y' 
adsql.getProductByProdId = SELECT prodid, prodname FROM   fo_product_m WHERE   status='Y'
adsql.getProductCodeByProdId = SELECT fundnbr,fundcode FROM   fo_mmf_fund_m  WHERE   status='Y'
adsql.setUnsetCompProdPermissionsOne = SELECT a.groupid, a.status,a.mcprocessid FROM   fo_group_m a WHERE  prodid = ?  AND currencycode = ? AND  companyid  = ?
adsql.setUnsetCompProdPermissionsTwo = SELECT	a.companyid companyid,a.prodid,a.currencycode FROM	fo_group_m a WHERE	a.prodid=? AND	a.currencycode=?  AND	a.companyid = (SELECT	DISTINCT k.companyid FROM	fo_company_m k WHERE	k.companycatid=? AND k.companyid=a.companyid AND k.status='Y' ) AND	a.status='Y'										
adsql.setUnsetCompProdPermissionsInt = INSERT INTO    fo_group_m (groupid, companyid, prodid, currencycode, createddate, createdby,  status ,mcprocessid )  VALUES (?,?,?,?,TO_DATE(?,?),?,?,?)
adsql.setUnsetCompProdPermBussEntity = UPDATE     fo_mmf_prdgrpfund_d SET        stat   = ? WHERE      ibid = ? AND        prid = ? 
adsql.setUnsetCompProdPermBussEntityOne = UPDATE	fo_group_m  a SET status='N' WHERE prodid=? AND	 currencycode=?  AND companyid = ( SELECT DISTINCT k.companyid  FROM	fo_company_m k,	fo_accountmaster_m p WHERE	(p.legalentity=? AND k.companyid=p.companyid) AND k.companyid=a.companyid AND k.companycatid=? AND k.status='Y' AND p.status='Y' AND p.accttypeid='I' AND NOT EXISTS (SELECT companyid	FROM fo_accountmaster_m	 WHERE legalentity <> ?	AND companyid=a.companyid AND accttypeid='I' AND status='Y' AND legalentity IN ( SELECT companyid FROM fo_group_m g WHERE g.prodid = a.prodid AND g.currencycode = a.currencycode AND status = 'Y'))) AND status='Y'											
adsql.setUnsetCompProdPermBussEntityTwo =  UPDATE fo_et_productcompany_d  a SET     status='N' WHERE	 brgroupid = (SELECT  b.groupid         	 FROM    fo_group_m b      	 WHERE   b.prodid=?        	 AND     b.currencycode=?  	 AND     b.companyid = ?   	 AND     b.status='N' )                       											
adsql.setUnsetCompProdPermBussEntityThree  = UPDATE fo_acct_association_m a SET     status='N' WHERE   groupid=( SELECT  b.groupid FROM    fo_group_m b  WHERE   b.groupid=a.groupid AND     b.prodid=? AND     b.currencycode=?   AND     b.companyid = ( SELECT	DISTINCT k.companyid FROM	fo_company_m k,fo_accountmaster_m p WHERE (p.legalentity=? AND k.companyid=p.companyid) AND k.companyid=b.companyid AND	k.companycatid=?  AND k.status='Y' AND	p.status='Y'  AND p.accttypeid='I' ) ) AND fromacctnbr IN (SELECT acctnbr FROM fo_accountmaster_m WHERE status = 'Y' AND legalentity = ?) AND	 status='Y'															
adsql.setUnsetCompProdPermBussEntityFour  = UPDATE fo_up_product_d a SET     status='N'  WHERE   groupid=(  SELECT  b.groupid   FROM    fo_group_m b  WHERE   b.status='N'  AND  b.prodid=?  AND     b.currencycode=?  AND     b.companyid =? )  AND	 status='Y'									
adsql.checkCompanyProdExits  = select * from fo_group_m grp, fo_company_m comp where comp.companyid = grp.companyid and comp.status = 'Y' and grp.status = 'Y' and COMPANYCATID = '500' and prodid = ? and CURRENCYCODE = ?
################################################################################################################
-------------------------------------------------- Pilot Setup -------------------------------------------------
################################################################################################################
adsql.getPilotSeupAssocProducts = SELECT  distinct  prodid, FN_GET_LANG(?,?,prodid) prodname, parentid,currencycode,refprodid, prodtagging,(SELECT navtype FROM fo_mmf_fund_m WHERE fundnbr = prodid) navtype ,(SELECT fundcode FROM fo_mmf_fund_m WHERE fundnbr = prodid) isin FROM (SELECT DISTINCT b.prodid, b.prodname, b.parentid, b.refprodid, b.prodtagging,a.currencycode FROM   fo_prodcurr_d a,(SELECT DISTINCT pm.prodid, prodname,parentid,refprodid,prodtagging FROM fo_product_m pm WHERE (LENGTH (parentid) <> 4) AND status = 'Y') b, fo_mmf_prodclass_m pc, fo_mmf_fund_m f, fo_group_m g  WHERE a.prodid = ?  AND    b.prodid  = g.prodid and f.fundnbr= b.prodid and f.dmid= pc.dmid  and g.companyid =pc.companyid and f.dmid <> '105' and pc.status = 'Y'  and f.status ='Y'   AND    g.currencycode = a.currencycode  and f.currencycode = g.currencycode AND  g.companyid = (  case  ? when ? then g.companyid else ? end  ) AND   a.status = 'Y' AND   g.status = 'Y')var
#adsql.checkPilotCSIDExits = select refacctnbr,acctname,customerid,customername,macfundacctnbr,macfundacctname from fo_pilotsetup_m where companyid<>? and customerid=? and status <> 'N'
adsql.getCSIDDetails = select companyid,customername from fo_pilotsetup_m where status <> 'N' and companyid<>? and customerid=? union select companyid,companyname from fo_company_m where companyid<> ? and gfcid=? and status='Y' union select companyid,'' companyname from fo_mc_buildprocess_m where linkid='COMPDETL' and itemid='1002' and status='P' and companyid<> ? and (newvalues->'gfcidNumber') ->> 'value' =?
adsql.checkPilotCSIDExits = select companyid,customername from fo_pilotsetup_m where status <> 'N' and companyid<>? and customerid=? union select companyid,companyname from fo_company_m where companyid<> ? and gfcid=? union select companyid,'' companyname from fo_mc_buildprocess_m where linkid='COMPDETL' and itemid='1002' and status='P' and companyid<> ? and (newvalues->'gfcidNumber') ->> 'value' =?
adsql.checkParentWithNoPortfolioExitsForGivenCSID = select companyid, customername from fo_pilotsetup_m where status = 'P' and companyid <> ? and customerid = ? and acctnbr is null union select companyid , '' companyname from fo_company_m c where companyid <> ? and status = 'Y' and gfcid = ? and companyid not in ( select companyid from fo_accountmaster_m where status = 'Y') union select companyid, '' companyname from fo_mc_buildprocess_m where linkid = 'COMPDETL' and itemid = '1002' and status = 'P' and companyid in ( select companyid from fo_company_m where companyid <> ? and gfcid = ? and status = 'Y') and (newvalues->'newsettlevalues')::text <> '{}'::text  and (newvalues->'naturedesc')->>'display' = 'Deleted Client Firm Account' 
adsql.getLegalEnititesByDesk= WITH RECURSIVE t  AS  (SELECT companyid,companyname,parentid,companycatid,status ,legalentity,cparentid FROM fo_company_m cm	WHERE companyid  = ? UNION ALL SELECT t_2.companyid,t_2.companyname, t_2.parentid, t_2.companycatid,t_2.status,t_2.legalentity,t_2.cparentid FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid  ) SELECT companyid ,companyname  FROM t WHERE  companycatid=? AND cparentid!='0000'  AND    status=?	  AND    legalentity=? 	ORDER BY companyname
adsql.getBusinessEntitesByDesk= WITH RECURSIVE t  AS  (SELECT companyid,companyname,parentid,companycatid,status ,legalentity,cparentid FROM fo_company_m cm	WHERE companyid  = ? UNION ALL SELECT t_2.companyid,t_2.companyname, t_2.parentid, t_2.companycatid,t_2.status,t_2.legalentity,t_2.cparentid FROM fo_company_m AS t_2, t WHERE t.companyid = t_2.parentid  ) SELECT companyid ,companyname  FROM t WHERE  companycatid=? AND    status=?	  AND    legalentity=? 	ORDER BY companyname
adsql.insertPilotDetails= INSERT INTO fo_pilotsetup_m (companyid, acctnbr, refacctnbr, acctname, macfundacctnbr, macfundacctname,nominatedacctnbr,sortcode,nominatedacctname, accttypeid, parentid, status, socialcode, legalentity, businessentity, acctnatureflag, settleid, divtype, acctstructypeid, currencycode, processid, createdby, comment, customerid, customername, businessentityname,tradingdeskname, deskid,parentcompanyid,createddate ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,?,?,?,?,? ) ;
adsql.insertPilotAccountDetails = insert into fo_pilotsetup_d(acctnbr,investacctnbr,isin,fundaccount,currencycode,status, createdby,modifiedby,createddate)  values(?,  ?, ?, (select CONCAT  (fundcode ||' - '|| funddesc) from fo_mmf_fund_m where fundnbr = ? ), ?, ?, ?, ?,?)
################################################################################################################
-------------------------------------------------- Company Product Category Permission -------------------------------------------------
################################################################################################################
adsql.getDeskProdCurrAssociations =   SELECT DISTINCT a.prodid,  a.currencycode,     a.status ,a.mcprocessid    FROM   fo_group_m a, fo_product_m b    WHERE  a.companyid= ?  AND    a.prodid=b.prodid   AND    a.status='Y' AND    b.status='Y' AND    b.parentid NOT IN(   SELECT  prodid      FROM    fo_product_m WHERE   status = 'Y'   )  AND    b.prodid NOT IN (  WITH  RECURSIVE t  AS  (SELECT prodid, prodcode, parentid    FROM fo_product_m cm   WHERE parentid = ?  UNION ALL  SELECT t_2.prodid, t_2.prodcode, t_2.parentid   FROM fo_product_m AS t_2, t	WHERE t.prodid = t_2.parentid  ) SELECT prodid   FROM t  )
adsql.getOperval= SELECT	operval FROM   fo_wf_userlinkgroup_d WHERE  linkid =  ? AND loginid = ? AND    linkgroupid = ( SELECT	a.linkgroupid FROM	fo_wf_userlinkgroup_m a, fo_wf_linkgroup_m b WHERE	a.loginid = ? AND a.linkgroupid = b.linkgroupid	AND b.companyid = ? AND a.status = 'Y') AND    status =  ?									
adsql.getLinkId=SELECT linkid FROM   fo_wf_links_m WHERE  image  = ? AND    status = 'Y'
adsql.checkCompanyProdCategoryExits = select a.prodid ,currencycode from fo_group_m a,fo_product_m p	where	a.prodid = p.prodid 	and  currencycode = ? and a.companyid = ? and a.prodid <> '1700' and a.status = 'Y' and p.status = 'Y'
adsql.getGroupIdInfo=SELECT groupid FROM fo_group_m

################################################################################################################
--------------------------------------------------- Reports ----------------------------------------------------
################################################################################################################

#account Inquiry
#adsql.acctInquiryQuery = select x.companyid,x.acctnbr,y.parentid,x.customerid, x.customername,x.companyname,x.deskid,x.businessentity,x.tradingdeskname,x.businessentityname,x.investbusinessentityname,y.createddate,x.status,	 x.processid,m.firstname ||' '|| m.lastname createdby, x.refacctnbr pilotAcctNbr,x.acctname pilotAccountName,	 y.refacctnbr settAcctNbr,y.acctname settAccountName,y.macfundacctnbr,y.macfundacctname	,y.currencycode,x.createdby loginid, null rejectreason	 from 	 (	 select   a.*	   FROM (SELECT DISTINCT a.companyid,a.acctnbr, customerid, case when coalesce( b.processid,null) is null then customername else  description end customername, 		case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,	                         (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display'  investbusinessentityname,a.createddate, b.status,	                         b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,currencycode,  1 AS rnum	                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid and b.itemid in ('1034','1036')	                  ) where accttypeid='I'  and a.status <> 'N'								                   )a   WHERE rnum = 1	 ORDER BY createddate DESC, customerid	 )x,	 ( 	 select   a.*	   FROM (SELECT DISTINCT a.companyid,parentid, customerid, case when coalesce( b.processid,null) is null then customername else  description end customername, 	case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,	                        (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display' investbusinessentityname, a.createddate, b.status,	                        b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,currencycode,  1 AS rnum	                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid	and b.itemid in ('1034','1036')		                  ) where accttypeid='209' 	and a.status <> 'N'                   )a   WHERE rnum = 1	 ORDER BY createddate DESC, customerid	 )y,fo_member_m m 	 where x.companyid=y.companyid	 and x.acctnbr=y.parentid	and m.loginid=x.createdby ORDER BY createddate DESC, customerid
#adsql.mkakerAcctInquiryQuery = select x.companyid,x.acctnbr,y.parentid,x.customerid, x.customername,x.companyname,x.deskid,x.businessentity,x.tradingdeskname,x.businessentityname,x.investbusinessentityname,y.createddate,x.status,	 x.processid,m.firstname ||' '|| m.lastname createdby, x.refacctnbr pilotAcctNbr,x.acctname pilotAccountName,		 y.refacctnbr settAcctNbr,y.acctname settAccountName,y.macfundacctnbr,y.macfundacctname	,y.currencycode,x.createdby loginid,	 null rejectreason	 from 		 (		 select   a.*		   FROM (SELECT DISTINCT a.companyid,a.acctnbr, customerid, case when coalesce( b.processid,null) is null then customername else  description end customername, case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,		                         (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display'  investbusinessentityname,a.createddate, b.status,		                         b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,currencycode,  1 AS rnum		                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid and b.itemid in ('1034','1036')		                  ) where accttypeid='I'  and a.status <> 'N'                       AND b.status in('P','Y','R','A') 		                   )a	   WHERE rnum = 1		 ORDER BY createddate DESC, customerid		 )x,		 ( 		 select   a.*		   FROM (SELECT DISTINCT a.companyid,parentid, customerid, case when coalesce( b.processid,null) is null then customername else  description end customername, 		case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,		                        (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display' investbusinessentityname, a.createddate, b.status,		                        b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,currencycode,  1 AS rnum		                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid	and b.itemid in ('1034','1036')                  ) where accttypeid='209' 	and a.status <> 'N'	                       AND b.status in('P','Y','R','A') 		                   )a	   WHERE rnum = 1		 ORDER BY createddate DESC, customerid		 )y,fo_member_m m 		 where x.companyid=y.companyid		 and x.acctnbr=y.parentid	and m.loginid=x.createdby	 ORDER BY createddate DESC, customerid
#adsql.checkerAcctInquiryQuery = select x.companyid,x.acctnbr,y.parentid,x.customerid, x.customername,x.companyname,x.deskid,x.businessentity,x.tradingdeskname,x.businessentityname,x.investbusinessentityname,y.createddate,x.status,	 x.processid,m.firstname ||' '|| m.lastname createdby, x.refacctnbr pilotAcctNbr,x.acctname pilotAccountName, y.refacctnbr settAcctNbr,y.acctname settAccountName,y.macfundacctnbr,y.macfundacctname	,y.currencycode,x.createdby loginid, null rejectreason	 from 	 ( select   a.*	   FROM (SELECT DISTINCT a.companyid,a.acctnbr, customerid, case when coalesce( b.processid,null) is null then customername else  description end customername, case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,deskid, businessentity, tradingdeskname, (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display'  investbusinessentityname,a.createddate, b.status,	b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,currencycode,  1 AS rnum	 FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid and b.itemid in ('1034','1036')) where accttypeid='I'  and a.status <> 'N'   AND b.status in('P','Y','A') )a  WHERE rnum = 1 ORDER BY createddate DESC, customerid	 )x, ( 	 select   a.*  FROM (SELECT DISTINCT a.companyid,parentid, customerid, case when coalesce( b.processid,null) is null then customername else  description end customername, case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,   deskid, businessentity, tradingdeskname,	    (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display' investbusinessentityname, a.createddate, b.status,		                        b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,currencycode,  1 AS rnum		                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid	and b.itemid in ('1034','1036')			                  ) where accttypeid='209' 	and a.status <> 'N'	                       AND b.status in('P','Y','A')                    )a	   WHERE rnum = 1		 ORDER BY createddate DESC, customerid		 )y,fo_member_m m 		 where x.companyid=y.companyid		 and x.acctnbr=y.parentid	and m.loginid=x.createdby	 ORDER BY createddate DESC, customerid
adsql.acctInquiryQuery=select x.companyid,x.acctnbr,x.parentcompanyid,y.parentid,x.customerid, x.customername,x.companyname,x.deskid,x.businessentity,x.tradingdeskname,x.businessentityname,x.investbusinessentityname,x.createddate,x.status,	 x.processid,m.firstname ||' '|| m.lastname createdby,x.refacctnbr pilotAcctNbr,x.acctname pilotAccountName,y.refacctnbr settAcctNbr,y.acctname settAccountName,y.macfundacctnbr,y.macfundacctname	,y.nominatedacctnbr,y.sortcode,y.nominatedacctname,y.currencycode,x.createdby loginid, null rejectreason	 from 	fo_member_m m, (	 select   a.*	   FROM (SELECT DISTINCT a.companyid,a.acctnbr, customerid,a.parentcompanyid, customername, case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,	                         (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display'  investbusinessentityname,a.createddate, b.status,	                         b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,nominatedacctnbr,sortcode,nominatedacctname,currencycode,  1 AS rnum	                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid and b.itemid in ('1034','1036')	                  ) where (accttypeid='I' or a.acctnbr is null)  and a.status <> 'N'								                   )a   WHERE rnum = 1	 ORDER BY createddate DESC, customerid	 )x left outer join	 ( 	 select   a.*	   FROM (SELECT DISTINCT a.companyid,parentid, customerid, customername, 	case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,	                        (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display' investbusinessentityname, a.createddate, b.status,	                        b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,nominatedacctnbr,sortcode,nominatedacctname,currencycode,  1 AS rnum	                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid	and b.itemid in ('1034','1036')		                  ) where accttypeid='209' 	and a.status <> 'N'                   )a   WHERE rnum = 1	 ORDER BY createddate DESC, customerid	 )y on(x.companyid=y.companyid	 and x.acctnbr=y.parentid) 	 where m.loginid=x.createdby ORDER BY createddate DESC, customerid
adsql.mkakerAcctInquiryQuery=select x.companyid,x.acctnbr,x.parentcompanyid,y.parentid,x.customerid, x.customername,x.companyname,x.deskid,x.businessentity,x.tradingdeskname,x.businessentityname,x.investbusinessentityname,x.createddate,x.status,	 x.processid,m.firstname ||' '|| m.lastname createdby,x.refacctnbr pilotAcctNbr,x.acctname pilotAccountName,y.refacctnbr settAcctNbr,y.acctname settAccountName,y.macfundacctnbr,y.macfundacctname	,y.nominatedacctnbr,y.sortcode,y.nominatedacctname,y.currencycode,x.createdby loginid,	 null rejectreason	 from 	fo_member_m m ,(select   a.*		   FROM (SELECT DISTINCT a.companyid,a.acctnbr, customerid,a.parentcompanyid, customername, case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,		                         (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display'  investbusinessentityname,a.createddate, b.status,		                         b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,nominatedacctnbr,sortcode,nominatedacctname,currencycode,  1 AS rnum		                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid and b.itemid in ('1034','1036')		                  ) where (accttypeid='I' or a.acctnbr is null) and a.status <> 'N'   AND b.status in('P','Y','R','A') 		                   )a	   WHERE rnum = 1		 ORDER BY createddate DESC, customerid		 )x left outer join	 ( 		 select   a.*		   FROM (SELECT DISTINCT a.companyid,parentid, customerid,   customername, 		case when a.parentcompanyid='0000' then '' else  (select companyname from fo_company_m where companyid = a.parentcompanyid)  end companyname,	                          deskid, businessentity, tradingdeskname,		                        (filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display' investbusinessentityname, a.createddate, b.status,		                        b.processid, a.createdby,a.refacctnbr,a.acctname, a.accttypeid,macfundacctnbr,macfundacctname,nominatedacctnbr,sortcode,nominatedacctname,currencycode,  1 AS rnum		                    FROM fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid	and b.itemid in ('1034','1036')                  ) where accttypeid='209' 	and a.status <> 'N'	                       AND b.status in('P','Y','R','A') 		                   )a	   WHERE rnum = 1		 ORDER BY createddate DESC, customerid		 )y	on (x.companyid=y.companyid		 and x.acctnbr=y.parentid)	 where m.loginid=x.createdby	 ORDER BY createddate DESC, customerid
adsql.checkerAcctInquiryQuery = select x.companyid,x.acctnbr,x.parentcompanyid,y.parentid,x.customerid,x.customername,x.companyname,x.deskid,x.businessentity,x.tradingdeskname,x.businessentityname,x.investbusinessentityname,x.createddate,x.status,x.processid,m.firstname || ' ' || m.lastname createdby,x.refacctnbr pilotAcctNbr,x.acctname pilotAccountName,y.refacctnbr settAcctNbr,y.acctname settAccountName,y.macfundacctnbr,y.macfundacctname ,y.nominatedacctnbr,y.sortcode,y.nominatedacctname ,y.currencycode,x.createdby loginid,null rejectreason from fo_member_m m,(select	a.* from (select distinct a.companyid,a.acctnbr,customerid,a.parentcompanyid,  customername,case	when a.parentcompanyid = '0000' then ''	else (select companyname from	fo_company_m where	companyid = a.parentcompanyid)end companyname,deskid,businessentity,tradingdeskname,(filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display' investbusinessentityname,a.createddate,b.status,b.processid,a.createdby,a.refacctnbr,a.acctname,a.accttypeid,macfundacctnbr,macfundacctname,nominatedacctnbr,sortcode,nominatedacctname,currencycode,1 as rnum from fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on (b.companyid = a.companyid and b.itemid in ('1034','1036'))where (a.acctnbr is null or accttypeid = 'I' ) and a.status <> 'N' and b.status in('P','Y','A') )a where rnum = 1 order by createddate desc,customerid )x left outer join	(select a.* from(select distinct a.companyid,parentid,customerid,  customername,case when a.parentcompanyid = '0000' then '' else (select companyname from fo_company_m where companyid = a.parentcompanyid)end companyname,deskid,businessentity,tradingdeskname,(filters->'businessEntity') ->> 'display' businessentityname,(filters->'businessInvestEntity') ->> 'display' investbusinessentityname,a.createddate,b.status,b.processid,a.createdby,a.refacctnbr,a.acctname,a.accttypeid,macfundacctnbr,macfundacctname,nominatedacctnbr,sortcode,nominatedacctname,currencycode,1 as rnum from fo_pilotsetup_m a left outer join fo_mc_buildprocess_m b on(b.companyid = a.companyid and b.itemid in ('1034','1036') )		where	accttypeid = '209' and a.status <> 'N'			and b.status in('P','Y','A') )a	where		rnum = 1	order by		createddate desc,		customerid )y on (x.companyid = y.companyid and x.acctnbr = y.parentid)	where  m.loginid = x.createdby order by	createddate desc,	customerid

#mcprocessreportQuery
adsql.getMCProcessReportDetails =  select * from( select t.*,case when(to_date(to_char(createddate,'YYYY-MM-DD'),'YYYY-MM-DD')=to_date(to_char(current_date,'YYYY-MM-DD'),'YYYY-MM-DD')) then 1 else 0 end crdatecnt,case when ( to_date(to_char(modifieddate,'YYYY-MM-DD'),'YYYY-MM-DD') =to_date(to_char(current_date,'YYYY-MM-DD'),'YYYY-MM-DD')) then 1 else 0 end modydatecnt,count(*) over() as cnt,row_number() over() as rnum from (select rt.*,row_number() over(partition by processid order by  moddate desc) rn ,(filters->'companyCategory') ->> 'value' companycatid ,(newvalues->'naturedesc') ->> 'display' naturedesc from(select * from (select r.itemid,r.companyid,null nature,m2.loginid,(select descr from fo_wf_cat_linkgroup_m where linkgroupid = m2.linkgroupid) profile,case when m2.roletypeid ='MK' then 'MAKER' when m2.roletypeid='MC' then 'MAKER-CHECKER' else 'CHECKER' end roletype, m2.firstname || ' ' || m2.lastname createdby,r.createddate,m1.firstname || ' ' || m1.lastname acceptedby,r.approveddate,m3.firstname || ' ' || m3.lastname modifiedby,coalesce (r.modifieddate,r.createddate) modifieddate,coalesce (coalesce (r.modifieddate,r.approveddate),r.createddate) moddate,r.modifiedby modby,r.rejectedby,r.status status,r.processid,r.action,r.type,r.description displayname ,r.filters,r.newvalues from  fo_mc_buildprocess_m r left outer join fo_member_m m1 on ( r.approvedby = m1.loginid ) left outer join fo_member_m m2 on ( r.createdby = m2.loginid )left outer join fo_member_m m3 on ( coalesce (r.modifiedby,r.createdby) = m3.loginid ) where  r.status='P' and case when r.itemid='1003' then r.groupid in (SELECT igp.groupid FROM fo_up_product_d up,fo_group_m igp WHERE  up.groupid = igp.groupid AND loginid = ? AND up.status = 'Y' AND igp.status = 'Y') else r.groupid = r.groupid  end ) var where loginid in (select distinct m.loginid from (with recursive t(companyid) as (select companyid, parentid,companycatid,status,userentity   from fo_company_m cm where cm.companyid in (select companyid  from fo_up_company_m where loginid = ? and status = 'Y' and companyid = cm.companyid ) and cm.status = 'Y' union all select t_2.companyid,t_2.parentid,t_2.companycatid,t_2.status,t_2.userentity  from fo_company_m as t_2, t where t.companyid = t_2.parentid ) select companyid  from t where userentity = 'Y' and status = 'Y' ) t,fo_member_m m  where t.companyid = m.companyid
#approveaccount Inquiry
adsql.approvePilotRecord = SELECT  sp_mc_pilotsetup_direct(?,?,?,?,?) resFlag

################################################################################################################
-------------------------------------------------- MC Common Process -------------------------------------------------
################################################################################################################
adsql.getMCBuildProcessDet=select processid , itemid , linkid , companyid  , parentcompanyid , loginid  , prodid , parentprodid , groupid  , oldvalues ,	newvalues , filters , originalvalues, status , exempt , createdby , modifieddate, modifiedby, approveddate, approvedby, rejecteddate, rejectedby ,action,type,rejectedreason    , (newvalues->'naturedesc') ->> 'display' nature, (filters->'newPortfolioFlag') ->> 'value' newPortfolioFlag,createdbypurn, modifiedbypurn, approvedbypurn,rejectedbypurn,investentityid, acctnbr, legalentityId  from fo_mc_buildprocess_m a where processid = ?
adsql.getMCBuildProcessDetSubOne=select processid , itemid , linkid , companyid ,description,
adsql.getMCBuildProcessDetSubTwo= (newvalues->'naturedesc') ->> 'display' nature, parentcompanyid , loginid  , prodid , parentprodid , groupid  ,  oldvalues , newvalues , filters , status , exempt ,a.createddate createddate,a.createdby createby, coalesce((select firstname || ' ' || lastname from   fo_member_m where loginid = a.createdby),createdby) createdby, to_char(createddate, 'dd/mm/yyyy hh24:mi:ss') createddate , to_char(modifieddate,  'dd/mm/yyyy hh24:mi:ss') modifieddate , (select firstname || ' ' || lastname from fo_member_m where loginid = a.modifiedby) modifiedby ,   to_char(approveddate, 'dd/mm/yyyy hh24:mi:ss') approveddate , coalesce((select firstname || ' ' || lastname from fo_member_m where loginid =   a.approvedby) ,approvedby )approvedby , to_char(rejecteddate, 'dd/mm/yyyy hh24:mi:ss') rejecteddate , (select firstname || ' ' || lastname from fo_member_m   where loginid = a.rejectedby) rejectedby ,rejectedreason from fo_mc_buildprocess_m a
adsql.insertMcBuild= INSERT INTO fo_mc_buildprocess_m ( processid , itemid , linkid , companyid  , parentcompanyid , loginid  , prodid , parentprodid , groupid  ,  oldvalues , newvalues , originalvalues , filters , description , status , action,type, exempt , createdby,investEntityId, legalEntityId, createddate,acctnbr ,createdbypurn,ruleid) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,  ?,  ?,?, ?,?,?, ?, ?, ?,?,?,?,?,?,?)
adsql.updateMcBuild =update fo_mc_buildprocess_m set oldvalues = ?, filters = ?, originalvalues = ?, newvalues = ?,description=?,status ='P' where processid <> '' and processid = ?
adsql.setUserAuditTrack=INSERT  INTO fo_auditLog_d (loginid, accesstime,image, screenname,processid,action,status ) VALUES    (?,?::timestamp,?,?,?,?,?)
adsql.getMCBuildTradeProcessDet= select transid, companyid, ( select c.companyname from fo_company_m c where c.companyid = t.companyid) companyname, modifiedat accesstime, webreference, tradestatus, modifiedby loginid, ( select m.firstname || '' || m.lastname from fo_member_m m where m.loginid = t.modifiedby) createdbyname from fo_auditlog_t t
adsql.checkProcessIdStatus=SELECT status, createdby, createddate, modifieddate, approvedby acceptedby, approveddate accepteddate, modifiedby ,createdbypurn, modifiedbypurn, approvedbypurn,rejectedbypurn FROM fo_mc_buildprocess_m WHERE processid = ?

################################################################################################################
-------------------------------------------------- Fund Details -------------------------------------------------
################################################################################################################
adsql.getPrividerList = SELECT companyid, companyname FROM  fo_company_m  WHERE companycatid ='600' AND status='Y' AND parentid= ?  ORDER BY UPPER(TRIM(companyname))      
adsql.getFundAssocDetails =  SELECT DISTINCT b.prodid, b.refprodid, b.prodname ,UPPER(b.prodname) uprodname  FROM   fo_group_m a,fo_product_m b  WHERE  a.prodid in( SELECT distinct prodid FROM  fo_group_m  WHERE companyid in (SELECT companyid FROM  fo_company_m WHERE companycatid='600' AND status=? ) AND     status = ? )  AND a.prodid = b.prodid AND a.companyid = ?  AND   a.status = b.status AND b.prodid NOT IN (select fundnbr from FO_MMF_FUND_M)   ORDER  BY refprodid ,prodname                                  
adsql.getProductClassList =  SELECT DISTINCT prodclassid, refid, descr, status, dmid, mcprocessid processid ,'M' type1 ,'' MCSTATUS , coalesce(modifiedby,createdby) createdby,'' rejectedreason FROM fo_mmf_prodclass_m WHERE status = 'Y' AND companyid = ? and  dmid = ? order by descr                                 
adsql.getAssocCcyForBranchUserProduct =  SELECT DISTINCT    c.currencycode, c.currencyname currencyname  FROM   fo_up_product_d up, fo_currency_m c, fo_group_m g  WHERE  up.loginid=? AND    g.companyid= CASE ?        WHEN ? THEN g.companyid	 ELSE ?	END	 AND    g.prodid = 	CASE ?		 WHEN ? THEN g.prodid		 ELSE ?	END	 AND    g.currencycode = c.currencycode  AND    g.groupid = up.groupid AND    g.status    = ?  AND    up.status   = ?  AND    c.status    = ?                             
adsql.getFamilyProviderId =  SELECT DISTINCT companyid FROM fo_product_m pr, fo_group_m gr WHERE pr.prodid = ?   AND pr.prodid = gr.prodid 	AND parentid = ?   AND pr.status = ?   AND gr.status = ? 
adsql.insertProduct =  INSERT INTO fo_product_m (prodid, prodname, prodcode, parentid,status, refprodid,mcprocessid) VALUES (?,?,?,?,?,?,?) 
adsql.updateFundFact = UPDATE fo_mmf_fundfact_m SET  fundtype = ?,createddate = ?::timestamp,oneyearyield = ?::numeric WHERE 	fundnbr = ?
adsql.insertFundFact = INSERT INTO fo_mmf_fundfact_m ( fundnbr,createddate,cusip,fundtype,createdby,oneyearyield)	VALUES (?, ?::timestamp, ?,?,?,?::numeric)
adsql.getCompanyBranchList = SELECT DISTINCT c1.companyid companyid, a.legalentity branchid,	 ? prodid FROM fo_group_m g, fo_company_m c1, fo_accountmaster_m a WHERE g.prodid = ? AND c1.status = 'Y' AND a.companyid = c1.companyid AND a.companyid = g.companyid AND a.accttypeid = 'I'				
adsql.insertGroup = INSERT INTO fo_group_m ( groupid, companyid, prodid, currencycode, createddate, createdby, status) VALUES(?, ?, ?, ?, ?, ?, ?)
adsql.selectUnassociatedProdClass = SELECT DISTINCT a.mgid, a.cmid FROM fo_mmf_prdgroup_m a,fo_mmf_prdgrpcls_d b,fo_company_m  c WHERE a.mgid = b.mgid	 AND a.dmid = ?	and c.companyid = a.cmid and c.status = 'Y'  AND a.mgid NOT IN (SELECT DISTINCT a.mgid	FROM fo_mmf_prdgroup_m a, fo_mmf_prdgrpcls_d b,fo_mmf_prodclass_m c WHERE a.mgid = b.mgid AND b.pcid = c.prodclassid AND c.dmid = ? AND b.pcid = ?	)
adsql.insertUnassociatedProdClass = INSERT INTO fo_mmf_prdgrpcls_d ( mgid, pcid, eflg,aenp,crby,crdt,natr,ibid) SELECT DISTINCT ?, ?, 'N', 'N', ?,?::timestamp without time zone, ?, b.companyid FROM fo_accountmaster_m a, fo_company_m b WHERE a.legalentity = b.companyid AND b.legalentity = 'N' AND a.accttypeid = 'I'	 AND a.companyid = ? AND a.status = 'Y'	 AND b.status = 'Y' AND b.companyid NOT IN ( SELECT DISTINCT d.ibid FROM fo_mmf_prdgroup_m c,fo_mmf_prdgrpcls_d d	 WHERE c.cmid = ? AND c.mgid = d.mgid AND c.mgid = ?)				
adsql.getprodClassAssocCompany = SELECT a.cmid companyid, b.aenp || b.eflg aenpeflg, '' oldeflg, b.eflg neweflg , 'Y' stat, b.ibid FROM fo_mmf_prdgroup_m a, fo_mmf_prdgrpcls_d b WHERE a.mgid = b.mgid	AND a.stat = 'Y' AND b.pcid = ?	 AND a.cmid IN ( SELECT DISTINCT a.companyid FROM fo_accountmaster_m a,	 (with recursive t as(SELECT     a.companyid,a.parentid,a.companycatid FROM fo_company_m a WHERE a.companyid = ? union all  SELECT     t_2.companyid,t_2.parentid,t_2.companycatid FROM fo_company_m t_2,t where t.companyid = t_2.parentid)	 select companyid from t	 WHERE companycatid = '400')b	 WHERE a.legalentity = b.companyid AND a.status = 'Y')	
adsql.getprodClassAssocCompanyone = SELECT DISTINCT companyid, mgid, neweflg, oldeflg , stat, ibid FROM (SELECT DISTINCT a.companyid, a.mgid, a.eflg neweflg,b.eflg oldeflg, b.stat stat, a.ibid FROM (SELECT a.cmid companyid, a.mgid, b.pcid, b.eflg, b.ibid FROM fo_mmf_prdgroup_m a, fo_mmf_prdgrpcls_d b,fo_group_m grp, fo_product_m pr WHERE a.mgid = b.mgid	AND a.stat = 'Y' AND b.pcid = ?	AND b.ibid = grp.companyid and grp.prodid=pr.prodid and pr.status='Y' AND grp.prodid = ? AND grp.status = 'Y') a left outer join (SELECT a.cmid companyid, a.mgid, b.pcid, b.eflg, c.stat stat, b.ibid	FROM fo_mmf_prdgroup_m a,fo_mmf_prdgrpcls_d b,fo_mmf_prdgrpfund_d c,fo_group_m grp WHERE a.mgid = b.mgid AND a.stat = 'Y' AND b.pcid =?	AND c.prid = ?	AND b.pcid = c.pcid AND b.mgid = c.mgid	 AND b.ibid = c.ibid AND b.ibid = grp.companyid	AND grp.prodid = ? AND grp.status = 'Y') b on( a.companyid = b.companyid AND a.mgid = b.mgid AND a.ibid = b.ibid)) a WHERE companyid IS NOT NULL AND a.companyid IN (SELECT DISTINCT c1.companyid companyid FROM fo_group_m g, fo_company_m c, fo_company_m c1, fo_accountmaster_m a WHERE g.companyid = c.companyid AND c.companycatid = '400'	 AND prodid = ?	 AND g.status = 'Y' AND c.status = 'Y'	 AND c1.status = 'Y' AND a.companyid = c1.companyid AND a.legalentity = g.companyid AND a.accttypeid = 'I')										
adsql.getprodClassAssocCompanytwo = DELETE FROM fo_mmf_prdgrpfund_d WHERE prid = ? AND pcid != ?
adsql.getAccounts = SELECT DISTINCT acctnbr, accttypeid,acctname,legalentity,refacctnbr FROM	fo_accountmaster_m WHERE companyid=? AND status = CASE WHEN ? = ? THEN status ELSE ? END	 AND	accttypeid = ? AND  refacctnbr = CASE WHEN ? = ? THEN refacctnbr ELSE ? END AND	legalentity=? ORDER BY   refacctnbr							
adsql.getDDAAccountsForCcy = SELECT DISTINCT a.acctnbr FROM	fo_accountmaster_m a,fo_acctcurrency_d c WHERE	a.companyid = ?	AND c.currencycode = ? AND	a.acctnbr = c.acctnbr	 AND	a.status = 'Y' AND	c.status = 'Y'			
adsql.unSetCompanyProdPermissions = UPDATE fo_group_m SET status = 'N' WHERE status = 'Y' AND prodid = ?	 AND companyid = ?
adsql.unSetCompanyProdPermissionsone =UPDATE fo_acct_association_m SET status = 'N' WHERE status = 'Y' AND groupid IN (SELECT a.groupid	 FROM fo_group_m a WHERE a.prodid = ? AND a.companyid = ?)			
adsql.saveFundCostChanges = insert into fo_costs_fees_d (costtypeid,feetypeid,fundnbr,val,mcprocessid,status) values(?,?,?,?,?,?)
adsql.setProdClassGrpAssocDetails = SELECT DISTINCT a.mgid, COUNT (case when c.stat = 'Y' then 'X' else NULL end) OVER (PARTITION BY cmid, b.pcid) statycnt, COUNT (case when c.stat = 'N' then 'X' else NULL end) OVER (PARTITION BY cmid, b.pcid) statncnt FROM fo_mmf_prdgroup_m a, fo_mmf_prdgrpcls_d b, fo_mmf_prdgrpfund_d c,fo_product_m p  	,fo_group_m g WHERE a.mgid = b.mgid AND a.stat = 'Y' AND a.cmid = ? AND b.pcid = ? AND b.ibid = ? AND b.ibid = c.ibid AND b.mgid = c.mgid AND b.pcid = c.pcid AND c.prid = p.prodid and g.companyid = a.cmid and g.prodid = c.prid and g.prodid = p.prodid and p.status = 'Y' ORDER BY a.mgid
adsql.updateProductClassDetails = DELETE FROM fo_mmf_prdgrpfund_d WHERE prid = ?
adsql.updateProductClassDetailsone = UPDATE fo_mmf_prodclass_product_d SET modifiedby = ?, modifieddate = ?, status = ?, prodclassid = ? WHERE prodid = ?
adsql.updateProductClassDetailstwo = INSERT INTO fo_mmf_prodclass_product_d (prodclassid, prodid, status, modifiedby, modifieddate, createdby, createddate ) VALUES (?, ?, ?, ?, ?, ?, ? )
adsql.setProdClassFundAssocDetails = SELECT a.mgid FROM fo_mmf_prdgroup_m a,	 fo_mmf_prdgrpcls_d b	 WHERE a.cmid = ? AND a.stat = 'Y' AND b.pcid = ? AND b.ibid = ? AND a.mgid = b.mgid			
adsql.setProdClassFundAssocDetailsone = INSERT INTO fo_mmf_prdgrpfund_d (mgid, pcid, prid, stat, crby, crdt, ibid,settleaccount,investaccount) VALUES (?, ?, ?, ?, ?, ?::timestamp, ?,?, ?)
adsql.getProductTradeDeskId = SELECT DISTINCT    a.companyid FROM   fo_company_m a, fo_group_m b WHERE  b.companyid = a.companyid AND    b.prodid= case when ? = ? then b.prodid else ? end AND a.companycatid = ?
adsql.updateMMFProductPremission = Update fo_group_m set	status = 'Y'	 where	companyid = ?	 And	prodid = ? And	currencycode = ?
adsql.updateMMFProductPremissionone = INSERT INTO fo_group_m (groupid,companyid,prodid,currencycode,createdby) VALUES	(?,?,?,?,?)
adsql.updateMMFProductPremissiontwo = SELECT a.cmid,b.aenp FROM fo_mmf_prdgroup_m a, fo_mmf_prdgrpcls_d b, fo_mmf_prdgrpfund_d c WHERE prid = ?	and a.cmid=? AND a.MGID = b.mgid AND a.mgid = c.mgid AND b.pcid = c.pcid AND b.ibid = c.ibid AND a.stat = 'Y'
adsql.getAccountsone = SELECT DISTINCT acctnbr, accttypeid,acctname,legalentity,refacctnbr FROM	fo_accountmaster_m WHERE companyid=? AND status = CASE WHEN ? = ? THEN status ELSE ? END	 AND	accttypeid = ? AND  refacctnbr = CASE WHEN ? = ? THEN refacctnbr ELSE ? END ORDER BY   refacctnbr							
adsql.updateMMFProductPremissionthree =Insert into fo_acct_clientsettlement_m (groupid,setlprodid, acctnbr, status,createdby) values (?,?,?,?,?) 
adsql.getMMFLiquiditySettlementAccounts = SELECT DISTINCT a.acctnbr FROM fo_settlementaccounts_m a,fo_acctcurrency_d c WHERE	a.companyid = ?	AND c.currencycode = ?	AND a.acctnbr = c.acctnbr	 AND	a.status = 'Y'			 AND	c.status = 'Y'
adsql.updateMMFProductPremissionfour = UPDATE fo_acct_clientsettlement_m SET status = ?  WHERE groupid = ?  AND acctnbr = ?
adsql.updateMMFProductPremissionfive = UPDATE fo_acct_association_m SET status = ?  WHERE groupid = ?  AND fromacctnbr = ? AND toacctnbr = ? AND fromaccttype = ? AND toaccttype = ?  AND intposttypeid = ? 	
adsql.updateMMFProductPremissionsix  = INSERT INTO fo_acct_association_m (groupid, fromacctnbr,toacctnbr,fromaccttype,toaccttype,status,createdby,intposttypeid) VALUES      (?,?,?,?,?,?,?,?)                      
adsql.getAccountDetailsone  = select a.acctnbr, a.companyid, refacctnbr, extbrcutoff, acctname, a.accttypeid, a.parentid, a.status, a.taxid, socialcode, ( select description from fo_socialcodes_m where socialcode = socialid) description, settlementdesc, mc.currencycode, remarks1, remarks2, remarks3, escrow, a.createddate, a.createdby, a.modifieddate mdate, a.modifiedby, settleid, cprf, location, ppno, regulatorycategoty, bankid, acctnatureflag, domintlflag, parentacctid, bankname, bankcode, banklocation, bankacctnbr, bankacctname, glaccountnumber, a.legalentity, b.companyname, a.enterpriseid, a.actbranchid, a.extbrcutoff, a.bankidtype, a.routingcode, a.settlemethod, a.ddaparent, a.maxamt, a.divtype, a.aeai, a.decn, a.acctstructypeid, a.fundacctnbr, c.descr acctstrdesc, c.refcode, a.clientidentifier, a.macfundacctnbr, a.macfundacctname, a.nominatedacctnbr, a.nominatedacctname, a.clientidentifier, a.fatcacompliant, a.sortcode, ( select sortcode from fo_accountmaster_m p where p.acctnbr = a.parentid and p.status = 'Y') nomsortcode, ( select nominatedacctnbr from fo_accountmaster_m p where p.acctnbr = a.parentid and p.status = 'Y') nomacctnbr, ( select nominatedacctname from fo_accountmaster_m p where p.acctnbr = a.parentid and p.status = 'Y') nomacctname from fo_company_m b, fo_accountmaster_m a left outer join fo_acct_structype_m as c on (a.acctstructypeid = c.acctstructypeid and a.accttypeid = c.accttypeid) left outer join fo_acctcurrency_d mc on ( a.parentid = mc.acctnbr) where (a.acctnbr = ? or a.refacctnbr =?) and a.companyid = b.companyid
adsql.getTaxDetails  =  SELECT  taxid, taxpayertype,         taxpayerstatuscode,   taxdocumentsplace,    taxnbr                FROM    fo_tax_m              WHERE   taxid IN              (SELECT taxid                 FROM    fo_accountmaster_m    WHERE   acctnbr = ? )        
adsql.setMMMFProdAccountInfo  = INSERT INTO fo_accountmaster_m (acctnbr,acctname,longname,clientidentifier,accttypeid,refacctnbr,companyid,parentid,settlementdesc,createdby,createddate,	taxid,socialcode,remarks1,remarks2,remarks3,legalentity,bankcode,bankname,escrow,acctnatureflag,divtype,acctstructypeid,fundacctnbr,ppno) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)	
adsql.setMMMFProdAccounttaxInfo  =INSERT INTO fo_tax_m (taxid,taxpayertype,taxpayerstatuscode,taxnbr)VALUES (?,?,?,?)
adsql.setAccountAssociation  = Insert into fo_acct_association_m (groupid,fromacctnbr,toacctnbr,fromaccttype,toaccttype,status,createddate,createdby,intposttypeid) values (?,?,?,?,?,?,?,?,?)
adsql.getSettlementAccounts  =  Select	distinct acctnbr, acctname,refacctnbr,intposttypeid,ddaparent,acctnatureflag,ppno,fromacctnbr from   fo_acct_association_m aa,fo_accountmaster_m a where  a.acctnbr = aa.toacctnbr and    fromacctnbr = ? And    a.status = ? And    aa.status = ? And    toaccttype  = ? And    groupid = ? Order by acctname,											 refacctnbr											
adsql.getDeletedMMFGroupId  = SELECT groupId FROM   fo_group_m      WHERE  companyid     =?  AND    prodid        =?  AND    currencycode  =?  AND    status        =? 
adsql.getGroupCurrencies  = SELECT DISTINCT g.currencycode, c.currencyname FROM   fo_group_m g,fo_currency_m c WHERE  g.companyid= case when ? = ? then g.companyid else ? end   AND    g.prodid =   case when ? = ? then g.prodid else ? end	  AND    c.currencycode=g.currencycode   	 AND    c.status='Y'                    	 AND    g.status='Y' ORDER BY currencycode	
adsql.getMMFFundYieldsone = SELECT	fundnbr, fundtype,createddate,oneyearyield,aum,wam FROM	fo_mmf_fundfact_m WHERE	fundnbr=?
adsql.getPlaceHoldersForFund = SELECT a.phid, a.descr, b.fundnbr, b.factcardurl FROM fo_fund_placeholders_m a left outer join  fo_fund_placeholders_d b on(a.phid = b.phid and b.fundnbr = ?) WHERE a.status in ('Y','P') ORDER BY case when a.phid='102' then 103 when a.phid='103' then 102	 else a.phid end  
adsql.getFundDetailsCostsandCharges =  Select fm.costtypeid, fm.feetypeid, fm.costtypeid || fm.feetypeid id, f.feename, fm.costtypeid || fm.feetypeid || 'descr' feedescr, fd.val val, fd.fundnbr, fm.costtypeid || fm.feetypeid || 'name' lablename from fo_fee_type_m f, fo_cost_type_m c, fo_fee_cost_m fm left outer join ( select costtypeid, feetypeid, fundnbr, val from fo_costs_fees_d	) fd on (fd.costtypeid = fm.costtypeid and fd.feetypeid = fm.feetypeid and fd.fundnbr = ? ) Where f.feetypeid = fm.feetypeid	and fm.status='Y' and c.costtypeid = fm.costtypeid order by fm.costtypeid,fm.sortorder asc
adsql.getFundDetailsone = SELECT  reffundnbr AS REFFUNDNBR, funddesc AS FUNDDESC, cutofftime AS CUTOFFTIME, portfolio AS PORTFOLIO, profitcenter AS PROFITCENTER,rating AS RATING,noofshares AS NOOFSHARES,settlementdate AS JAVATIMEZONE,nav AS NAV,b1fees AS B1FEES,processingtype AS PROCESSINGTYPE,fundcode AS FUNDCODE,currencycode AS CURRENCYCODE,cusip AS CUSIP, maxamt AS MAXIMUMAMOUNT, a.status AS STATUS, a.dmid AS DMID,b.desr AS DESCR, c.prodclassid AS PRODCLASSID,(select descr from FO_MMF_PRODCLASS_M where prodclassid=c.prodclassid) prodclassdescr,familyid AS FAMLYID, navtype,internalcode ,sedol, a.createdby ,a.mcprocessid, a.fundShareClassId,(select countrycode||' - '||countryname from FO_FUND_COUNTRY_M fc where fc.countrycode=a.domicileCountryCode and fc.status='Y')  domicileCountryCode ,(select policydesc from FO_DISPOLICY_M pm where pm.policyid=a.policyid and status ='Y') policyid,	TO_CHAR(a.lastFeedUpdate,'MON DD, YYYY HH24:MI:SS')  lastfeedupdate,fractionalSharePolicy  FROM fo_mmf_domicile_m b,    fo_mmf_fund_m a  left outer join fo_mmf_prodclass_product_d c on(a.fundnbr = c.prodid)  WHERE fundnbr = ? AND a.dmid = b.dmid and a.status <> 'N' AND providerid = ?   AND familyid = ?			
adsql.getAvailableForSaleCountries =  SELECT   c.countrycode,c.countryname     FROM 	 FO_FUNDAVAILABLITY_M f, FO_FUND_COUNTRY_M c  WHERE	 f.countrycode=c.countrycode and f.fundNbr=? and   f.status=?   and   c.status=?  ORDER BY c.countrycode ,c.countryname    	 
adsql.getProductParametersone = SELECT	p.groupid, transtype ,      mintradesize,    maxtradesize,    amtdecimals,     ccyroundtype, ratedecimals,    stlmodel,	  stlmethod,	  sddabal,	  sddabalb,	  sddabalt,	  escrow,       seacct,       seacctb,      seacctt,      begintime,       endtime,         cutofftime,      ticketgenid,     respondtime,     settlementdate,  rateconv,        tradeprocessing, rollovercutoff,  stpmaxamt,       todayscutoff,    rrcheck,         ticketformat,    settlementloc,   spotvalue,       minmaturity,     maxmaturity,     basecurrency,    settlementcurrency, daybasis,        spotimplemented, interpolation,   cfaforreject,    cfaforaccept,    baserate,        sptrade,         prodtype,        mkttype,         rolloverimplemented,    unitid,          tradeticket, timeout,	 isratesensitive, breditable,	 breapproval, holdfvdd,	 releasetime, taxon,		 mncr,		 mxcr,		 tpcr,		 tpzm,		 intposttypeid, ipreleasetype, matrelease,	 maturitystatus, ipreleasetime, trdsettlereleasetime, internalendtime, internaltodayscutoff, internalrollovercutoff, internalbegintime, producttype, parentprodid, autoupdte,	 autorollover, pledged	,	 pldgspmargin, taximplemented, autorollreltime, todactive,	 tomactive,	 spotactive,	 recap,		  csai,		  alrdmdda,	  rollovertype,	 ackprocess,	        ackprdays,	        uart,	   	 uarb,	   	 uarc,	   	 ndaf,	   	 ccot,	   	 atnt,	   	 genacctype,	    prdprsr,	    chmmfacbal,	    TO_CHAR(modifieddate,  'MON DD, YYYY HH24:MI:SS')   AS modifieddate, ecbt,	   	 iart,	   	 astl,	   	 fatca,	   	 setspecday,	    trdsetday,	    earlyterm,	    allowextclttrd, isnegflag,	 nratex,		 mtdpayout,	 backup,	   	 nonbreakage,    smmfnrtc	    FROM	fo_productparameter_m  p,  fo_group_m g     WHERE	p.groupid = g.groupid   AND	g.status = 'Y'   AND	p.groupid = ? AND	transtype = ? ORDER BY groupid,    transtype   
adsql.isWATradeORnonZeroAcctExist = select pendingAction from ( select '1' pendingAction from fo_trading_t a where a.tradestatus not in ( 'R','D','Z') and '1'= case when tradestatus ='A' and ack1time is not null and ack2time is not null and ack5time is not null then '0' else '1' end and a.prodid = ? union select '2' pendingAction from fo_trading_f a where a.tradestatus = 'W' and a.prodid = ? union select '3' pendingAction from vw_tradehistory_t a where a.tradestatus = 'W' and a.prodid = ? union select '4' pendingAction from fo_acct_dailybal_m a, fo_accountmaster_m am where a.escrowacctnbr = am.acctnbr and am.status = 'Y' and a.prodid = ? and (a.endbal > 0 or a.mtd > 0))var_ex order by pendingAction
adsql.deleteFundAccount = update fo_accountmaster_m am set status = 'D' where acctnbr in ( select b.toacctnbr from fo_acct_association_m b, fo_group_m g, fo_product_m p where p.prodid = g.prodid and g.groupid = b.groupid and b.toacctnbr = am.acctnbr and am.accttypeid = '207' and b.fromaccttype = 'I' and b.toaccttype = '207' and g.status = 'N' and p.status = 'N' and am.status = 'Y' and p.prodid =? )
adsql.deleteFundMmfFund = update fo_mmf_fund_m a set status = 'N' where fundnbr =( select b.prodid from fo_product_m b where b.status = 'N' and b.prodid =? )
adsql.deleteFundMmfFundFact = update fo_mmf_fundfact_m a set status = 'N' where fundnbr =( select b.prodid from fo_product_m b where b.status = 'N' and b.prodid =? )
adsql.unSetAllProdRelProduct = UPDATE fo_product_m SET     status = ? WHERE   prodid = ?
adsql.unSetAllProdRelGroup = update fo_group_m a set status = ? where prodid =( select b.prodid from fo_product_m b where b.prodid =? and b.status = 'N' )
adsql.unSetAllProdRelClient = update fo_spclient_d a set status = ? where prodid = ( select b.prodid from fo_product_m b where b.status = 'N' and b.prodid =? )
adsql.unSetAllProdRelUpProduct = update fo_up_product_d a set status = ? where groupid = ( select groupid from fo_group_m b where b.groupid = a.groupid and b.status = 'N' and b.prodid = ( select c.prodid from fo_product_m c where c.status = 'N' and c.prodid =? ) )
adsql.unSetAllProdRelAccount = update fo_acct_association_m a set status = ? where groupid = ( select groupid from fo_group_m b where b.groupid = a.groupid and b.status = 'N' and b.prodid = ( select c.prodid from fo_product_m c where c.status = 'N' and c.prodid =? ) )
adsql.unSetAllProdCleSettle = update fo_acct_clientsettlement_m a set status = ? where groupid = ( select groupid from fo_group_m b where b.groupid = a.groupid and b.status = 'N' and b.prodid = ( select c.prodid from fo_product_m c where c.status = 'N' and c.prodid =? ) )
adsql.getRefFundNbrs = SELECT reffundnbr FROM fo_mmf_fund_m WHERE status in('Y','P')
adsql.getFundClassAcctNbr = select a.acctnbr from fo_product_m p, fo_company_m d, fo_accountmaster_m a, fo_acct_association_m ac, fo_acct_dailybal_m acdb, fo_group_m g left outer join ( select a.cmid from fo_mmf_prdgroup_m a, fo_mmf_prdgrpcls_d b, fo_mmf_prdgrpfund_d c, fo_mmf_prodclass_m e where a.mgid = b.mgid and a.mgid = c.mgid and b.pcid = c.pcid and b.pcid = ? and b.pcid = e.prodclassid and e.status = ?) aa on g.companyid = aa.cmid where g.status = ? and g.prodid = p.prodid and g.prodid = ? and g.companyid = d.companyid and g.companyid = a.companyid and g.groupid = ac.groupid and acdb.groupid = g.groupid and acdb.escrowacctnbr = a.acctnbr and ac.toacctnbr = a.acctnbr and ac.fromaccttype = 'I' and ac.toaccttype =? and a.status = ? and a.accttypeid = ? and ac.status = ?
################################################################################################################
-------------------------------------------------- Desk And Entity -------------------------------------------------
################################################################################################################
adsql.insertDeskEntity=INSERT INTO fo_company_m (companyid, companynbr, companyname,sdsid, shortname, backoffcode, companycatid, taxid, companytypeid, companyrating, routingnumber, tzcode, bolocation, tzdefault, abanbr, ctsacctnbr, custodynbr, swcode, legalentity, status, dateformat, dbdateformat, parentid, cparentid, isglobal, currency, language, userentity, nameusage, createddate, createdby, dealercode, acctstructypeid, nature, deskemail,mcprocessid ) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?::smallint,?,?,?,?)
adsql.updateMCDeskEntity=UPDATE fo_company_m SET mcprocessid=?  WHERE  companyid = ? 
adsql.updateDeskEntity= UPDATE fo_company_m SET    companynbr = ?, companyname = ?,sdsid = ?, shortname = ?, backoffcode = ?, companycatid = ?, companytypeid = ?, companyrating = ?, routingnumber = ?, tzcode = ?, bolocation = ?, tzdefault = ?, abanbr = ?, ctsacctnbr = ?, custodynbr = ?, legalentity = ?, status = ?, dateformat = ?, dbdateformat = ?, parentid = ?, cparentid = ?, isglobal = ?, currency = ?, language = ?, userentity = ?, nameusage = ?, modifiedby = ?, modifieddate = ?, dealercode = ?::smallint, acctstructypeid= ?, nature = ? ,deskemail= ? , mcprocessid=? WHERE  companyid = ?
adsql.unsetDeskEntity=UPDATE fo_company_m SET    status = ?, modifiedby = ?, modifieddate = ?, nature = ? ,mcprocessid=? WHERE  companyid = ?
adsql.getdeskCount=SELECT   COUNT (*)  desk_count FROM fo_company_m des WHERE companycatid = ?  and status = 'Y'
adsql.busCnt =SELECT   COUNT (*)  comp_Count FROM fo_company_m des WHERE companycatid = ?  and status = 'Y'
adsql.busUnderDeskCnt =SELECT   COUNT (*)  comp_Count FROM fo_company_m des WHERE companycatid = ?  and status = 'Y' and parentid=?	
adsql.subBusCnt =SELECT   COUNT (*)  comp_Count FROM fo_company_m des WHERE companycatid = ?  and status = 'Y' and cparentid = ?
adsql.clientFirmCnt= SELECT 'Account' countType, Count(*) FROM   fo_company_m a, fo_accountmaster_m b WHERE  a.companyid = b.companyid AND b.legalentity = ? AND companycatid = ? AND a.status = 'Y' AND b.status = 'Y' UNION SELECT 'Company', Count(*) FROM   fo_company_m WHERE  parentid = ? AND status = 'Y' AND companycatid = ?
adsql.invBusCnt= SELECT   COUNT (*)  comp_Count FROM fo_company_m a, fo_accountmaster_m b WHERE a.companyid = b.companyid AND b.legalentity = ? AND companycatid = ? AND a.status = 'Y' AND b.status = 'Y' AND accttypeid = 'I'
adsql.getcompniesBybranch=select * from ( SELECT cm.companyid, cm.companyname, cm.mcprocessid , case when  (nullif(mcb.processid,''), null) is null then cm.status else mcb.status end status , mcb.type, cm.routingnumber , cm.parentid,cm.cparentid,cm.legalentity ,cm.deskemail,dk.companyname  deskname FROM fo_company_m cm left outer join fo_mc_buildprocess_m mcb on (cm.mcprocessid <> '' and cm.mcprocessid = mcb.processid ) ,fo_company_m dk WHERE cm.companycatid = ? AND cm.parentid = dk.companyid AND dk.status='Y' AND cm.status in('Y','P'))t
adsql.getcompaniesByDesk= select * from ( SELECT cm.companyid, cm.companyname, cm.mcprocessid , case when  (nullif(mcb.processid,''), null) is null then cm.status else mcb.status end status , mcb.type, cm.routingnumber , cm.parentid	,cm.cparentid,cm.legalentity, cm.deskemail FROM fo_company_m cm left outer join fo_mc_buildprocess_m mcb on (cm.mcprocessid  <> '' and cm.mcprocessid = mcb.processid ) WHERE cm.companycatid = ? AND cm.status in('Y','P'))t
adsql.appendgetcompaniesChk= where (status<>'R' or type<>'N')	
adsql.appendorderbyBranch= ORDER BY deskname,companyname
adsql.appendorderbyDesk= ORDER BY companyname
adsql.getActiveAcctForInvBusEntity =  SELECT COUNT(*) count	FROM (SELECT  b.acctnbr,a1.acctmode || a1.status acttype FROM fo_acct_association_m act, (SELECT AT.acctnbr, AT.status, AT.acctmode FROM fo_acct_tracksettlemethod_m AT,(SELECT   acctnbr, MAX (TIMESTAMP) tstamp FROM fo_acct_tracksettlemethod_m GROUP BY acctnbr) am	WHERE AT.acctnbr = am.acctnbr AND AT.TIMESTAMP = am.tstamp) a1  right outer join fo_accountmaster_m b	on(a1.acctnbr = b.acctnbr), fo_group_m g WHERE b.accttypeid = ?	AND b.legalentity = ? AND act.toacctnbr = b.acctnbr AND act.fromaccttype = ? AND act.toaccttype = ? AND g.groupid = act.groupid	AND g.status = 'Y' AND g.companyid = b.companyid)t WHERE acttype IN ('NA', 'MA', 'MP', 'MR') OR acttype IS NULL
adsql.getSDSIDDetails = select companyid, companyname from fo_company_m where companyid <> ? and sdsid = ? and status = 'Y' union select companyid, '' companyname from fo_mc_buildprocess_m where linkid = 'DESETST' and itemid = '1010' and status = 'P' and companyid <> ? and (newvalues->'sdsId') ->> 'value' =?
adsql.insertSdsHisData=insert into fo_data_acquisition_sdsid_his(sdsid,companyid, name, status, effectivefrom, effectiveto) ( select sdsid,companyid, companyname, status, coalesce(nullif(c.lastfeedupdate, c.createddate), c.createddate), now() from fo_company_m c where c.companyid = ? and c.sdsid = ? and  (c.companyname) <> upper(?) and c.status = 'Y')
adsql.updateSdsLastupdateDate=update fo_company_m set   lastfeedupdate=now() where sdsid=? and companyId =? and status=? 

################################################################################################################
-------------------------------------------------- Desk Parameter -------------------------------------------------
################################################################################################################
adsql.getProdTypes=SELECT prodtypeid, description FROM fo_prodtype_m order by UPPER(description)
adsql.getSubProducts=SELECT DISTINCT b.prodid, b.prodname FROM fo_group_m a, (SELECT DISTINCT pm.prodid, prodname  FROM fo_product_m pm WHERE (LENGTH (parentid) <> 4) AND status = 'Y') b WHERE a.prodid = b.prodid and a.companyid = case when ? = ? then  a.companyid else ? end AND a.status = 'Y'
adsql.getSettleModels=SELECT stlmodelid,descr FROM fo_tm_settlemodels_m WHERE	status ='Y'    
adsql.getRoundingTypes=SELECT ccyroundtype,descr FROM fo_tm_rounding_m WHERE	status ='Y' order by ccyroundtype desc
adsql.getInterpolationTypes=SELECT code,description FROM fo_interpolation_m 
adsql.getIntPostingTypes=SELECT intposttypeid,descr FROM fo_acct_intposttypes_m WHERE	status = 'Y' ORDER BY intposttypeid
adsql.getFundCutOffDetails=select cutofftime from fo_mmf_fund_m m where m.fundnbr = ?
adsql.getProductParameters=SELECT interpolation,trdsettlereleasetime,holdfvdd,p.groupid FROM fo_productparameter_m  p, fo_group_m g WHERE p.groupid = g.groupid AND g.status = 'Y' AND p.groupid = ? AND transtype = ?
adsql.resetCompanyTimeParameters =UPDATE fo_company_m SET starttradingtime=?,endtradingtime=? WHERE companyid=?
adsql.resetDeskParamMcProcess =UPDATE FO_PRODUCTPARAMETER_M SET mcprocessid = ? WHERE groupId = ? and TRANSTYPE = ?
adsql.getNavType =SELECT DISTINCT navtype FROM fo_mmf_fund_m WHERE status = 'Y' AND fundnbr = ?
adsql.suspendTradeForGroupId =UPDATE fo_tenor_m SET suspendtrading = ? ,transflag     =?,modifiedby     =?,modifieddate   =? WHERE     groupid= ?
adsql.resetCOADetails =DELETE from fo_dj_coa_d WHERE  groupid = ? AND    taskid = ?
adsql.updateDeskParametersDataForMaker = UPDATE FO_PRODUCTPARAMETER_M  SET mcprocessid=?,status='Y' where groupid=?
adsql.updateDeskParametersData = UPDATE FO_PRODUCTPARAMETER_M  SET   GROUPID = ?,  TRANSTYPE = ?,  MINTRADESIZE = ?::integer,  MAXTRADESIZE = ?::integer,  AMTDECIMALS = ?::integer,  RATEDECIMALS = ?::integer,  BEGINTIME = ?,  ENDTIME = ?,  CUTOFFTIME = ?,  TICKETGENID = ?,  RESPONDTIME = ?,  RATECONV = ?,  TRADEPROCESSING = ?,  ROLLOVERCUTOFF = ?,  STPMAXAMT = ?::bigint,  TODAYSCUTOFF = ?,  RRCHECK = ?,  TICKETFORMAT = ?,  SPOTVALUE = ?::smallint,  MINMATURITY = ?,  MAXMATURITY = ?,  BASECURRENCY = ?,  SETTLEMENTCURRENCY = ?,  DAYBASIS = ?,  SETTLEMENTDATE = ?::timestamp,  SETTLEMENTLOC = ?,  SPOTIMPLEMENTED = ?,  INTERPOLATION = ?,  BASERATE = ?,  CLACCEPTANCE = ?,  MODIFIEDDATE = ?::timestamp,  MODIFIEDBY = ?,  STATUS = ?,  SPTRADE = ?,  CFAFORREJECT = ?,  CFAFORACCEPT = ?,  ROLLOVERIMPLEMENTED = ?,  UNITID = ?,  PRODTYPE = ?,  MKTTYPE = ?,  SHOWINVESTMENT = ?,  MAXAMOUNT = ?::NUMERIC,  TRADETICKET = ?,  ROUNDING = ?,  RECAP = ?,  TENORGAP = ?,  ISRATESENSITIVE = ?,  HOLDFVDD = ?,  RELEASETIME = ?,  INTPOSTTYPEID = ?,  IPRELEASETIME = ?,  IPRELEASETYPE = ?,  TAXON = ?,  MNCR = ?::NUMERIC,  MXCR = ?::NUMERIC,  TPCR = ?,  TPZM = ?,  TIMEOUT = ?::smallint,  INTERNALENDTIME = ?,  INTERNALTODAYSCUTOFF = ?,  INTERNALROLLOVERCUTOFF = ?,  INTERNALBEGINTIME = ?,  TRDSETTLERELEASETIME = ?,  MATRELEASE = ?,  PRODUCTTYPE = ?,  PARENTPRODID = ?,  AUTOUPDTE = ?,  TAXIMPLEMENTED = ?,  PLEDGED = ?,  AUTOROLLOVER = ?,  AUTOROLLRELTIME = ?,  BREDITABLE = ?,  BREAPPROVAL = ?,  SDDABAL = ?,  TODACTIVE = ?,  TOMACTIVE = ?,  SPOTACTIVE = ?,  INTCALCID = ?,  CCYROUNDTYPE = ?::smallint,  SEACCT = ?,  STLMODEL = ?,  ESCROW = ?,  SDDABALT = ?,  SDDABALB = ?,  PLDGSPMARGIN = ?,  SEACCTB = ?,  SEACCTT = ?,  CSAI = ?,  MATURITYSTATUS = ?,  ROLLOVERTYPE = ?,  ACKPROCESS = ?,  ACKPRDAYS = ?::smallint,  ALRDMDDA = ?,  UART = ?,  UARB = ?,  UARC = ?,  NDAF = ?::smallint,  ATNT = ?,  CCOT = ?,  GENACCTYPE = ?,  PRDPRSR = ?,  CHMMFACBAL = ?,  STLMETHOD = ?::smallint,  ECBT = ?,  IART = ?,  ASTL = ?,  FATCA = ?,  BACKUP = ?,  SETSPECDAY = ?,  EARLYTERM = ?,  TRDSETDAY = ?,  ALLOWEXTCLTTRD = ?,  NONBREAKAGE = ?,  ISNEGFLAG = ?,  NRATEX = ?,  SMMFNRTC = ?,  MTDPAYOUT = ?,  MCPROCESSID = ? ,dealingCutoff=? WHERE GROUPID=?  AND TRANSTYPE=?
adsql.insertDeskParametersData = INSERT INTO FO_PRODUCTPARAMETER_M   (  GROUPID, TRANSTYPE, MINTRADESIZE, MAXTRADESIZE, AMTDECIMALS, RATEDECIMALS, BEGINTIME, ENDTIME, CUTOFFTIME, TICKETGENID, RESPONDTIME, RATECONV, TRADEPROCESSING, ROLLOVERCUTOFF, STPMAXAMT, TODAYSCUTOFF, RRCHECK, TICKETFORMAT, SPOTVALUE, MINMATURITY, MAXMATURITY, BASECURRENCY, SETTLEMENTCURRENCY, DAYBASIS, SETTLEMENTDATE, SETTLEMENTLOC, SPOTIMPLEMENTED, INTERPOLATION, BASERATE, CLACCEPTANCE, CREATEDDATE, CREATEDBY, MODIFIEDDATE, MODIFIEDBY, STATUS, SPTRADE, CFAFORREJECT, CFAFORACCEPT, ROLLOVERIMPLEMENTED, UNITID, PRODTYPE, MKTTYPE, SHOWINVESTMENT, MAXAMOUNT, TRADETICKET, ROUNDING, RECAP, TENORGAP, ISRATESENSITIVE, HOLDFVDD, RELEASETIME, INTPOSTTYPEID, IPRELEASETIME, IPRELEASETYPE, TAXON, MNCR, MXCR, TPCR, TPZM, TIMEOUT, INTERNALENDTIME, INTERNALTODAYSCUTOFF, INTERNALROLLOVERCUTOFF, INTERNALBEGINTIME, TRDSETTLERELEASETIME, MATRELEASE, PRODUCTTYPE, PARENTPRODID, AUTOUPDTE, TAXIMPLEMENTED, PLEDGED, AUTOROLLOVER, AUTOROLLRELTIME, BREDITABLE, BREAPPROVAL, SDDABAL, TODACTIVE, TOMACTIVE, SPOTACTIVE, INTCALCID, CCYROUNDTYPE, SEACCT, STLMODEL, ESCROW, SDDABALT, SDDABALB, PLDGSPMARGIN, SEACCTB, SEACCTT, CSAI, MATURITYSTATUS, ROLLOVERTYPE, ACKPROCESS, ACKPRDAYS, ALRDMDDA, UART, UARB, UARC, NDAF, ATNT, CCOT, GENACCTYPE, PRDPRSR, CHMMFACBAL, STLMETHOD, ECBT, IART, ASTL, FATCA, BACKUP, SETSPECDAY, EARLYTERM, TRDSETDAY, ALLOWEXTCLTTRD, NONBREAKAGE, ISNEGFLAG, NRATEX, SMMFNRTC, MTDPAYOUT, MCPROCESSID ,dealingCutoff ) VALUES ( ?, ?, ?::integer, ?::integer, ?::integer, ?::integer, ?, ?, ?, ?, ?, ?, ?, ?, ?::bigint, ?, ?, ?, ?::smallint, ?, ?, ?, ?, ?,  ?::timestamp , ?, ?, ?, ?, ?,  ?::timestamp , ?,  ?::timestamp , ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?::NUMERIC, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?::NUMERIC, ?::NUMERIC, ?, ?, ?::smallint, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?::smallint, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?::smallint, ?, ?, ?, ?, ?::smallint, ?, ?, ?, ?, ?, ?::smallint, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ,? )
adsql.getJavaTimeZonee	= SELECT javatzcode  FROM fo_timezone_m WHERE	tzcode = ?
adsql.getDeskParameterCutOffDetails =select amtdecimals,todayscutoff,internaltodayscutoff from fo_group_m g,fo_productparameter_m m where g.groupid = m.groupid and g.prodid = ? 
################################################################################################################
---------------------------------------------------- Fund Family ---------------------------------------------------
################################################################################################################
adsql.getFundFamilies= select t .* from(SELECT DISTINCT b.prodid, b.refprodid,b.prodname ,UPPER(b.prodname) uprodname, b.mcprocessid processid,'M' type1 ,'A' MCSTATUS , '' createdby, rejectedreason  FROM   fo_group_m a,fo_product_m b left outer join fo_mc_buildprocess_m c on (b.mcprocessid = c.processid) WHERE  a.prodid in( SELECT distinct prodid FROM  fo_group_m WHERE companyid in (SELECT companyid FROM  fo_company_m WHERE companycatid='600' AND status='Y' ) AND  status in ('Y' ,'P','R') )  AND a.prodid = b.prodid AND a.companyid = ?
adsql.appendFFChecker= and 1 = case when c.status = 'R' and coalesce(nullif(c.action, ''), 'M') = 'N' then 0 else 1 end 
adsql.appendFFstatus= AND   a.status = b.status   ) t
adsql.updateaccountmaster= UPDATE fo_accountmaster_m am SET status = 'D' WHERE acctnbr IN (SELECT b.toacctnbr FROM fo_acct_association_m b, fo_group_m g, fo_product_m p WHERE p.prodid = g.prodid AND g.groupid = b.groupid AND b.toacctnbr = am.acctnbr AND am.accttypeid = '207' AND b.fromaccttype = 'I' AND b.toaccttype = '207' AND g.status = 'N' AND p.status = 'N' AND am.status = 'Y' AND p.parentid = ? )
adsql.updatemmffundm= UPDATE fo_mmf_fund_m a SET status='N' WHERE  fundnbr=(  with recursive t as(SELECT  b.prodid,b.parentid,b.status FROM fo_product_m b WHERE  b.prodid=? union all SELECT t_2.prodid,t_2.parentid,t_2.status FROM fo_product_m t_2,t where t.prodid =  t_2.parentid ) select prodid from t WHERE status='N' AND t.prodid=a.fundnbr ) 
adsql.updatemmffundfactm= UPDATE fo_mmf_fundfact_m a SET status='N' WHERE  fundnbr=(with recursive t as(SELECT  b.prodid,b.parentid,b.status FROM fo_product_m b WHERE  b.prodid=? union all SELECT t_2.prodid,t_2.parentid,t_2.status FROM fo_product_m t_2,t where t.prodid =  t_2.parentid )select prodid from t WHERE    status='N' AND t.prodid=a.fundnbr )                   	
adsql.deleteprodclass= DELETE FROM  fo_mmf_prodclass_product_d WHERE prodid=?
adsql.deleteprdgrpfund= DELETE FROM  fo_mmf_prdgrpfund_d WHERE prid=?
adsql.updateproductm= UPDATE fo_product_m SET status = ? WHERE prodid in (with recursive t as(SELECT  b.prodid ,b.parentid FROM fo_product_m b WHERE b.prodid=? union all SELECT  t_2.prodid,t_2.parentid FROM fo_product_m t_2,t where t.prodid = t_2.parentid) select prodid from t )  
adsql.updategroupm=  UPDATE  fo_group_m a SET status = ? WHERE   prodid=(with recursive t as(SELECT  b.prodid ,b.parentid,b.status FROM fo_product_m b WHERE b.prodid=? union all SELECT  t_2.prodid,t_2.parentid,t_2.status FROM fo_product_m t_2,t where t.prodid = t_2.parentid) select prodid from t WHERE status='N' AND t.prodid=a.prodid )  			
adsql.updatespclient=  UPDATE  fo_spclient_d a SET status = ? WHERE prodid = (with recursive t as(SELECT  b.prodid ,b.parentid,b.status FROM fo_product_m b WHERE   b.prodid=? union all SELECT  t_2.prodid ,t_2.parentid,t_2.status FROM fo_product_m t_2,t where t.prodid=t_2.parentid)select prodid from t WHERE status='N' AND t.prodid=a.prodid )              	
adsql.updateupproduct= UPDATE  fo_up_product_d  a SET status = ? WHERE groupid = (SELECT groupid FROM fo_group_m b WHERE b.groupid = a.groupid AND b.status = 'N' AND b.prodid = (with recursive t as(SELECT  c.prodid ,c.parentid,c.status FROM fo_product_m c WHERE c.prodid=? union all SELECT  t_2.prodid ,t_2.parentid,t_2.status FROM fo_product_m t_2,t where t.prodid=t_2.parentid ) select prodid from t WHERE status='N' AND  t.prodid=b.prodid ) )
adsql.updateacctassoc= UPDATE fo_acct_association_m a SET status = ? WHERE  groupid = (SELECT groupid FROM fo_group_m b WHERE b.groupid = a.groupid AND b.status='N' AND b.prodid = (with recursive t as(SELECT  c.prodid ,c.parentid,c.status FROM fo_product_m c WHERE c.prodid=? union all SELECT  t_2.prodid ,t_2.parentid,t_2.status FROM fo_product_m t_2,t where t.prodid=t_2.parentid ) select prodid from t WHERE status='N' AND t.prodid=b.prodid ) )
adsql.updateacctclientsett= UPDATE fo_acct_clientsettlement_m a SET status = ? WHERE groupid = (SELECT groupid FROM fo_group_m b WHERE b.groupid = a.groupid AND b.status='N' AND b.prodid = (with recursive t as(SELECT  c.prodid ,c.parentid,c.status FROM fo_product_m c WHERE c.prodid=? union all SELECT  t_2.prodid ,t_2.parentid,t_2.status FROM fo_product_m t_2,t where t.prodid=t_2.parentid )select prodid from t WHERE status='N' AND t.prodid=b.prodid ) )             						
adsql.updateproductms= UPDATE	fo_product_m
adsql.updateproductmnotadmn=SET mcprocessid=? WHERE prodid=?
adsql.updateproductmadmn= SET prodName=?,prodcode=?,refprodid=?,prodtype=?,balinttype=? WHERE	prodid=?
adsql.insertproductm=INSERT into fo_product_m (prodid,prodName,prodcode,parentid,status,refprodid,prodtype,balinttype,mcprocessid ) VALUES (?,?,?,?,?,?,?,?,?)
adsql.insertgroupm=INSERT into fo_group_m (groupid,companyid,prodid,currencycode,createddate,createdby,status,mcprocessid) VALUES (?,?,?,?,?,?,?,?)
adsql.getSelectedCompanies= SELECT companyid,companyname,abanbr,bolocation,gfcid,routingnumber FROM  fo_company_m WHERE companycatid=? AND status='Y' ORDER BY UPPER(TRIM(companyname)) 
adsql.getFundFamilyAlterMsg= SELECT DISTINCT b.prodid, b.prodname, b.mcprocessid processid,rejectedby FROM fo_group_m a,fo_product_m b, fo_mc_buildprocess_m c WHERE a.prodid in( SELECT distinct prodid FROM  fo_group_m WHERE companyid in (SELECT companyid  FROM  fo_company_m  WHERE companycatid='600' AND status='Y' ))and coalesce(nullif(b.mcprocessid,''),null) = c.processid     		
adsql.getFundFamilyAlterMsgCHKR= and c.status='R' and c.rejectedby is not null and c.modifiedby is null
adsql.getFundFamilyAlterMsgMKR= and c.status='P'
adsql.getFundFamilyAlterMsgRestQuery= AND a.prodid = b.prodid AND a.companyid = ? AND   a.status = b.status 

################################################################################################################
adsql.getAssociatedParentProducts =  SELECT DISTINCT p.prodid,p.parentid, TRIM(FN_GET_LANG(?,?,p.prodid))prodname, p.refprodid,  p.prodtagging FROM fo_product_m p, fo_group_m g WHERE  g.companyid = CASE ? WHEN ? THEN g.companyid ELSE ?  END AND g.prodid = p.prodid AND parentid='0000' AND EXISTS ( SELECT prodid FROM fo_up_product_d upd, fo_group_m gr WHERE upd.groupid = gr.groupid AND gr.prodid = g.prodid AND upd.loginid = ?)ORDER BY prodname

################################################################################################################
---------------------------------------------------- workflow ----------------------------------------------
################################################################################################################
#adsql.getJSONLeftPanelLinks = SELECT   a.levelid levelid, b.linkid linkid, a.descr descr, a.parentid parentid, a.SOURCE SOURCE, b.l_operval operval, a.sortorder sortorder, b.status,  a.image, a.imagetype, a.width, a.height, a.TYPE, current_date FROM (WITH  RECURSIVE t  AS  (SELECT  1 as LEVEL, linkid, descr, parentid, SOURCE,	  operval, sortorder,status, image, imagetype, width, height, TYPE FROM fo_wf_links_m WHERE parentid = '0000' UNION ALL SELECT     LEVEL+1 as	  level,t_2.linkid, t_2.descr, t_2.parentid, t_2.SOURCE, t_2.operval, t_2.sortorder,t_2.status, t_2.image, t_2.imagetype, t_2.width, t_2.height,	  t_2.TYPE FROM fo_wf_links_m AS t_2, t WHERE t.linkid = t_2.parentid  ) SELECT  LEVEL levelid,linkid, descr, parentid, SOURCE, operval, sortorder,	  status, image, imagetype, width, height, TYPE FROM t)a, (SELECT   ud.linkid, ud.status, MAX (ud.operval) l_operval FROM fo_wf_userlinkgroup_d ud,	  fo_wf_userlinkgroup_m um WHERE um.loginid = ud.loginid AND um.linkgroupid = ud.linkgroupid AND um.loginid = ? AND um.PRMARY = 'Y' GROUP BY	  ud.linkid, ud.status) b WHERE a.linkid = b.linkid AND a.status = 'Y' AND b.status = 'Y' AND levelid = ?::INT
adsql.getJSONLeftPanelLinks = select a.levelid levelid, b.linkid linkid, a.descr descr, a.parentid parentid, a.SOURCE source, b.l_operval operval, a.sortorder sortorder, b.status,    a.image, a.imagetype, a.width, a.height, a.TYPE, current_date from (with recursive t as ( select ARRAY[sortorder,linkid::numeric] AS hierarchy, 1 as    level, linkid, descr, parentid, source, operval, sortorder, status, image, imagetype, width, height, type from fo_wf_links_m where parentid = '0000'    union all select t.hierarchy||t_2.sortorder::numeric||t_2.linkid::numeric, level + 1 as level, t_2.linkid, t_2.descr, t_2.parentid, t_2.SOURCE,    t_2.operval, t_2.sortorder, t_2.status, t_2.image, t_2.imagetype, t_2.width, t_2.height, t_2.TYPE from fo_wf_links_m as t_2, t where t.linkid =    t_2.parentid ) select level levelid, linkid, descr, parentid, source, operval, sortorder, status, image, imagetype, width, height, type from t where    type <> 'T'   ORDER  BY  hierarchy)a, ( select ud.linkid, ud.status, max (ud.operval) l_operval from fo_wf_userlinkgroup_d ud, fo_wf_userlinkgroup_m um    where um.loginid = ud.loginid and um.linkgroupid = ud.linkgroupid and um.loginid = ? and um.PRMARY = 'Y' group by ud.linkid, ud.status) b where a.linkid    = b.linkid and a.status = 'Y' and b.status = 'Y'
adsql.getProfileLinkDetails = SELECT profilelinkgroupid,profiledescr,linkid,descr,image,status,useraction FROM   fo_wf_profile_links_d WHERE  profilelinkgroupid=?
adsql.getHQClientFirms = with recursive t as ( select 1 as level, companyid, cparentid, companycatid , status, parentid, gfcid, companyname from fo_company_m cm where companyid = ? union all select level + 1 as level, t_2.companyid, t_2.cparentid, t_2.companycatid , t_2.status, t_2.parentid, t_2.gfcid, t_2.companyname from fo_company_m as t_2, t where t.companyid = t_2.cparentid ) select level, companyid, gfcid, companyname from t where (parentid in ( select companyid from fo_company_m where companycatid = ?) or parentid = '0000' ) and status = ? and companycatid = ? order by level
adsql.getClientTradeDeskId = WITH  RECURSIVE t  AS  (SELECT companyid,parentid,companycatid FROM fo_company_m cm WHERE companyid = ? UNION ALL SELECT t_2.companyid,t_2.parentid,   t_2.companycatid FROM fo_company_m AS t_2, t WHERE t.parentid = t_2.companyid  ) SELECT companyid   FROM t WHERE companycatid = ?
adsql.getJavaTimeZone = SELECT	javatzcode  FROM fo_timezone_m WHERE	tzcode = ?
adsql.getMemberInfoSql = SELECT	c.dbdateformat format, c.dateformat dformat  FROM		fo_company_m c, fo_member_m m WHERE		UPPER(m.loginname) = UPPER(?) AND		m.companyid=c.companyid	
adsql.getMemberInfo = SELECT    m.companyid, m.roletypeid, m.membercatid, u.description, c.companycatid, m.loginid, r.roledesc, m.passwordexpdate, firstname, middlename,	   lastname, m.language, locale, m.linkgroupid, to_char(m.lastlogintime,'dd/mm/yyyy hh24:mi:ss') logintime,(SELECT javatzcode FROM    fo_timezone_m	   tm WHERE    tm.tzcode = c.tzcode and tm.status = 'Y' )tzcode ,(select ssologin from fo_ss_login_m  where fo2login = m.loginId) ssologinid FROM      fo_member_m m, fo_company_m c, fo_usercategory_m u, fo_roletypes_m r WHERE	   m.companyid=c.companyid AND       r.roletypeid=m.roletypeid AND       m.loginname= ? AND       m.membercatid=u.membercatid
adsql.getStyleForLogins = SELECT a.refcode, a.sscatid, a.showheader, a.showfooter, a.showlogout, b.ssologin FROM   fo_ss_category_m a, fo_ss_login_m b WHERE  a.sscatid   = b.sscatid	AND    b.fo2login  = ? AND    b.status    = ? AND    a.status    = ?

################################################################################################################
adsql.getSSOCategories = SELECT	distinct a.sscatid, a.refcode, a.descr FROM	fo_ss_category_m a, fo_sso_companycategory_m b WHERE	a.sscatid=b.sscatid
adsql.getReactDefaultSortedHeaders = SELECT objectname, displayname, sortorder, datatype, headerwidth, align, maxchars,  label, isfilter, isdisplay, ishyperlink, hinttxt  FROM   fo_pd_sp_category_d  WHERE  catid = ?   AND   isfixed = 'Y' and isdisplay in ('Y','E','N')  ORDER BY   sortorder                          
adsql.getProductByParentId = SELECT prodid, prodname   FROM   fo_product_m   WHERE  parentid=?   AND    status = ?  
adsql.getErrorMessagestMap			=	select messageindex, message FROM fo_mc_errormessagetext_d 
adsql.getMCProcess =	SELECT enabled FROM   fo_mc_process_d WHERE  companyid = ? AND    processid = ?
adsql.getGroupIdSql =	SELECT groupId  FROM   fo_group_m   WHERE  companyid     =?   AND    prodid        =?     AND    currencycode  =? 
adsql.getMemberDetails =	select m.loginname, m.companyid, m.membercatid, m.firstname, m.lastname, m.middlename,	m.phone1, m.phone2, m.fax, m.pager, m.email1, m.email2, m.active, m.locked, m.counter, m.disabled, m.digitalloginid, m.passwordhint, m.passwordanswer, m.passwordexpdate, m.roletypeid, m.itc, m.password, m.style, m.locale, m.language, m.loginid, m.createddate, m.createdby, m.modifieddate, m.modifiedby, m.status , m.nature , m.linkgroupid, m.mcprocessid processid, c.parentid,c.companycatid, c.companyname,coalesce(nullif(m.defaultrole,''),'Y') defaultrole from fo_member_m m, fo_company_m c where m.companyid = c.companyid and loginid = ? and m.status != 'R'
adsql.getCurrencies					=	SELECT currencycode,currencyname,currencysymbol, displaycode,countrycode  FROM   fo_currency_m     WHERE  status = ?   
adsql.checkCompUserProdCcyPerm		=	SELECT status FROM   fo_up_company_m WHERE  loginid = ? AND    companyid = ?
adsql.checkCompUserProdCcyPermOne		=	SELECT status FROM   fo_group_m WHERE  companyid =? AND    prodid=? AND    currencycode=?
adsql.checkCompUserProdCcyPermTwo		= 	SELECT status FROM   fo_up_product_d WHERE  loginid=? AND    groupid=?
adsql.checkCompUserProdCcyPermThree	=	SELECT groupid FROM   fo_group_m WHERE  companyid =? AND    prodid=? AND    status='Y'
adsql.getAssocFirms					=		SELECT a.companyid    companyid,  b.companyname  companyname,  b.parentid   parentid   FROM   fo_up_company_m a,  fo_company_m b  WHERE  a.companyid = b.companyid  AND    a.status = ? AND    a.loginid = ? 
adsql.getBranchDeskCompanies			=	    SELECT DISTINCT companyid, gfcid,companyname, UPPER (TRIM (companyname)) AS ucompanyname,   parentid  FROM fo_company_m cm   WHERE  status = 'Y'  AND companyid IN  ( SELECT cm.parentid   FROM fo_up_company_m up ,fo_company_m cm   WHERE loginid = ? AND up.status = 'Y'  and cm.COMPANYID = up.companyid  and cm.COMPANYCATID = ?      and cm.status = 'Y' )    ORDER BY ucompanyname                
adsql.getParentIds 				    =		select companyid from ( WITH  RECURSIVE t  AS  (SELECT companyid,parentid FROM fo_company_m cm WHERE companyid = ?   UNION ALL SELECT t_2.companyid,t_2.parentid   FROM fo_company_m AS t_2, t  WHERE t.parentid = t_2.companyid  ) SELECT companyid   FROM t)a  UNION select companyid from (WITH  RECURSIVE t1  AS  (SELECT companyid,cparentid  FROM fo_company_m comp WHERE companyid = ?   UNION ALL   SELECT t_3.companyid,t_3.cparentid  FROM fo_company_m AS t_3, t1 WHERE t1.cparentid = t_3.companyid ) SELECT companyid   FROM t1 )b  
adsql.getProdCurrAssociations						=	SELECT   pc.prodid,pc.currencycode,pc.status FROM  fo_prodcurr_d pc,fo_product_m pm WHERE pm.prodid = pc.prodid AND pm.status = 'Y' ORDER BY prodid
adsql.getProductDetails					=	SELECT     prodid,prodname,prodcode,   prodtype, parentid, status, refprodid, balinttype, prodtagging FROM fo_product_m WHERE      prodid=? AND        status='Y'
adsql.getFundTypeInfo					=	SELECT	fundtypeid, descr FROM	fo_mmf_fundtype_m  WHERE	status='Y'
adsql.getNavTypeInfo					=	SELECT	navtype, navdesc FROM	fo_mmf_navtypes_d  WHERE dmid= ? and status='Y'
adsql.getUserCompanyProducts                      =     select prodid, trim ( upper ( prodname ) ) as prodname from (	select distinct a.prodid, fn_get_lang( ?  , ? , b.prodid) as prodname FROM fo_group_m AS a, fo_product_m AS b	WHERE a.companyid = ? AND a.prodid = b.prodid AND a.status = 'Y' AND b.status = 'Y' AND b.parentid NOT IN (SELECT prodid FROM fo_product_m WHERE status = 'Y') AND b.prodid NOT IN (WITH RECURSIVE t (prodid) AS (SELECT prodid	FROM fo_product_m WHERE parentid = ? UNION ALL	SELECT	t_2.prodid FROM fo_product_m AS t_2, t	WHERE t.prodid = t_2.parentid) SELECT    prodid FROM t)	) as a	ORDER BY prodname
adsql.getUserNamesByCatId				        =SELECT	loginid, loginname, firstname, lastname,concat(firstname||' '||lastname) username, status, '' AS action, createdby, '' AS processid, COALESCE(modifieddate, createddate) AS moddate, modifiedby, 0 AS rn FROM fo_member_m WHERE companyid = ? AND membercatid = ? AND status = ?  ORDER BY UPPER(firstname), UPPER(lastname)
adsql.getParentCompanyNames = select * from( WITH RECURSIVE t AS (SELECT 1 as level,COMPANYID, COMPANYNAME, PARENTID ,cparentid FROM fo_company_m cm WHERE COMPANYID = ? UNION ALL SELECT level+1 as level, t_2.companyid, t_2.COMPANYNAME, t_2.PARENTID ,t_2.cparentid FROM fo_company_m AS t_2, t WHERE t.cparentid = t_2.companyid ) SELECT LEVEL, COMPANYID, COMPANYNAME, PARENTID FROM t where LEVEL != 1) var_ex
adsql.validateAccount = SELECT a.acctnbr FROM fo_accountmaster_m a, fo_acct_association_m b WHERE a.companyid = ? AND a.legalentity = ? AND a.status = ? AND a.accttypeid = ? AND a.acctnbr = ? 
adsql.getAccountCurrency = SELECT currencycode FROM fo_acctcurrency_d WHERE acctnbr=? AND status = ? AND createddate = (SELECT MAX(createddate) FROM fo_acctcurrency_d WHERE acctnbr=? AND status = ?)
adsql.deleteDJCOADetails = DELETE from fo_dj_coa_d WHERE groupid = ?
adsql.getProductClassDetails = SELECT * FROM (SELECT DISTINCT prodclassid productClassId, refid productClassDesc, descr description, case when b.processid is null then a.status else b.status end status, dmid domicileType, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, Coalesce(a.modifiedby, a.createdby) createdby, a.createddate createdDate, rejectedreason rejectedReason FROM fo_mmf_prodclass_m a LEFT OUTER JOIN fo_mc_buildprocess_m b ON ( a.mcprocessid = b.processid ) WHERE a.status IN ( 'Y', 'P' )
adsql.getFundNbrsForChecker = SELECT * from ( SELECT fundnbr, fundcode,a.status buildstatus, m.status fundstatus, case when coalesce(nullif(a.processid,''), null) is null then funddesc when a.status = 'R' then funddesc else description end funddesc FROM fo_mmf_fund_m m left outer join fo_mc_buildprocess_m a on (a.processid = m.mcprocessid ) WHERE providerid=? AND familyid=? ) t where ( coalesce(nullif(buildstatus,''), 'P') in ('P' ) or (fundstatus <>'P' OR buildstatus <>'R' )) and fundstatus <> 'N' order by funddesc
adsql.getFundNbrs = SELECT * from ( SELECT fundnbr, fundcode,a.status buildstatus, m.status fundstatus, case when coalesce(nullif(a.processid,''), null) is null then funddesc when a.status = 'R' then funddesc else description end funddesc FROM fo_mmf_fund_m m left outer join fo_mc_buildprocess_m a on (a.processid = m.mcprocessid ) WHERE providerid=? AND familyid=? ) t where coalesce(buildstatus, 'P') in ('P', 'R') and fundstatus <> 'N' order by funddesc
adsql.updateFundCostChanges = update fo_costs_fees_d SET mcprocessid=? where fundnbr = ? and costtypeid = ? and feetypeid = ?
adsql.updateFundCostChangesByAdmin = update fo_costs_fees_d set val = ?, status = ? where fundnbr = ? and costtypeid = ? and feetypeid = ?
adsql.getEmailTemplate = SELECT cname, fieldid, fielddescr, datatype, a.eventid FROM fo_em_eventfields_d a, fo_em_event_m b WHERE a.eventid = b.eventid AND a.eventid = ? AND a.status = 'Y' AND a.isdefault = 'Y' AND a.parentprodid = ? ORDER BY a.sort
adsql.getPendingEmailsList = select a.transid transid, a.webreference webreference , a.companyname, a.investmentaccount, a.deskid, a.currencycode, a.dollaramount, a.limitprice, a.limitexpiry, a.mmftrmode, a.issuername, a.navtype, a.ordertype, a.transtype, case when b.shares = 0 then a.shares else b.shares end shares,  case when b.nav = 0 then a.nav else b.nav end nav,  a.prodid, a.parentprodid, coalesce (b.settlementdate, a.settlementdate) valueDate, a.transdate, coalesce (b.executiondate, a.ack5time)  executiondate, a.tradetype, a.beginshares, a.endshares, a.username, a.etermpen, a.acctname, d.fundcode, c.refacctnbr, e.deskemail emailid , d.fractionalsharepolicy , ( select crOrderId from ( select crOrderId , count(*) over( order by fixtransid ) rn from FO_FIX_TRANSACTIONS_D f where a.transid = f.transid and f.fixtransid not in ( select fixtransid from fo_fix_exceptiontrans_d) and msgtype = 'FIL') ft where rn = 1 ) crOrderId from vw_tradehistory_t a, fo_trade_emails_d b, fo_accountmaster_m c, fo_mmf_fund_m d, fo_company_m e where b.status = 'P' and a.transid = b.transid and a.transid = b.transid and c.acctnbr = a.acctnbr and d.fundnbr = a.prodid and e.companyid = a.deskid
adsql.updateEmailStatus = update fo_trade_emails_d set status = 'S' where transId = ? and webreference = ?

#### Session-Replication related code 
adsql.writeObject=INSERT INTO fo_user_details_m(loginid, browid,info) VALUES (?, ?, ?)
adsql.readObject=SELECT info FROM fo_user_details_m WHERE loginid = ?
adsql.deleteObject=DELETE FROM fo_user_details_m WHERE loginid = ?
adsql.updateSDObject = update fo_user_details_m set info = ? where loginid = ?
adsql.deleteLoginId = delete from fo_user_details_m where loginid in (with recursive t (companyid, cparentid) as ( select companyid, cparentid, status, companycatid from fo_company_m where companyid = ? union all select t_2.companyid, t_2.cparentid, t_2.status, t_2.companycatid from fo_company_m as t_2, t where t.cparentid = t_2.companyid) select m.loginid from t, fo_member_m m where t.companyid = m.companyid)
adsql.checkChildCompanyCnt=SELECT   COUNT (*) cnt FROM fo_company_m des WHERE cparentid = ? and status <> 'N'
adsql.deleteUserByCompanyId =update fo_usercompanypermission_m set status='N' where companyid=?
adsql.checkCSIDEXISTS=select companyid,customername from fo_pilotsetup_m where accttypeid='I' and status <> 'N' and companyid<>? and customerid=? union select companyid,companyname from fo_company_m where companyid<> ? and gfcid=? union select * from fo_mc_buildprocess_m where linkid='COMPDETL' and itemid='1002' and status='P' and companyid<> ? and companyid<> ? and (newvalues->'gfcidNumber') ->> 'value' =?
## Corporate Action changes
adsql.getCorporateTransTypes =	select actionid, descr FROM fo_corporate_type_m 
adsql.getClientHierachyOne=select a.topparentid, c.companyname "name",a.companyid "key", case when coalesce(nullif(ac.refacctnbr, ''), null) is null then c.companyname else ac.refacctnbr || ' - ' || ac.acctname end "value", lp.lvl lvl, lp.breadth-coalesce(cnt, 0) allowChild, a.rownumber from fo_companyhierarchy_d a left outer join ( select parentid, count(*) cnt from fo_companyhierarchy_d group by parentid) b on (b.parentid = a.companyid) , fo_lp_structure_m lp, fo_company_m c  left outer join ( select refacctnbr ,acctname,companyid,status,accttypeid from fo_accountmaster_m ) ac on (ac.companyid = c.companyid and ac.status='Y' and ac.accttypeid ='I') where a.companyid = c.companyid and c.companycatid = ? and c.status = ? and a.lvl + 1 = lp.lvl
adsql.getClientHierachyTwo= order by "value"
adsql.validateClientHierachy=select a.companyid "key",	c.companyname "value",	lp.lvl lvl,	case when lp.breadth > coalesce(cnt,0)  then  'ALLOW'	else 'LEVEL'||lp.lvl end allowChild,a.rownumber from	fo_companyhierarchy_d a left outer join (select parentid,count(*) cnt from fo_companyhierarchy_d group by parentid) b on	(b.parentid = a.companyid),	fo_lp_structure_m lp,	fo_company_m c where	a.companyid = c.companyid	and c.companycatid = ?	and c.status = ? and a.lvl+1 = lp.lvl AND c.companyid=? order by a.rownumber
adsql.validateEditCLientLPStructure=select case when lvl + downChildlvl > 4 then 'LEVEL4' else case when a.breadth > coalesce(cnt, 0) then 'ALLOW' else 'LEVEL' || a.lvl end end allowChild from ( select a.companyid "key", c.companyname "value", lp.lvl lvl, lp.breadth, ( select max(number_of_ancestors) from (with recursive t as ( select companyid, parentid, status, rownumber, 1 as number_of_ancestors from fo_companyhierarchy_d where companyid = ? union all select t_2.companyid, t_2.parentid, t_2.status, t_2.rownumber, t.number_of_ancestors + 1 as lvl from fo_companyhierarchy_d as t_2, t where t.companyid = t_2.parentid ) select distinct companyid, number_of_ancestors from t where t.status = 'Y') x) downChildlvl, b.cnt, a.rownumber from fo_companyhierarchy_d a left outer join ( select parentid, count(*) cnt from fo_companyhierarchy_d group by parentid) b on (b.parentid = a.companyid), fo_lp_structure_m lp, fo_company_m c where a.companyid = c.companyid and c.companycatid = '500' and c.status = 'Y' and a.lvl + 1 = lp.lvl and c.companyid = ? )a
adsql.getUserPClientCompaniesData=select a.companyid, a.parentid, ( select count(a.*)-1 from (with recursive t(companyid) as ( select companyid, parentid, status from fo_companyhierarchy_d cm where cm.companyid = a.companyid and cm.status = 'Y' union all select t_2.companyid, t_2.parentid, t_2.status from fo_companyhierarchy_d as t_2, t where t.companyid = t_2.parentid ) select companyid from t where status = 'Y')a ) childCnt, case when coalesce(nullif(ac.refacctnbr, ''), null) is null then c.companyname else ac.refacctnbr || ' - ' || ac.acctname end companyname, coalesce(a.roletypeid, 'N') roletypeid, a.lvl, a.rownumber, a.companylvl, b.processId, b.status mcstatus, b.createdby, b.modifiedby, b.approvedby, b.rejectedby, b.rejectedreason, b.oldvalues, b.newvalues, b.filters, b.originalvalues from fo_company_m c left outer join ( select refacctnbr ,acctname,companyid,status,accttypeid from fo_accountmaster_m ) ac on (ac.companyid = c.companyid and ac.status='Y' and ac.accttypeid ='I'),  ( select h.companyid, h.parentid, h.lvl, h.rownumber, a.lvl companylvl, coalesce(b.roletypeid, 'N') roletypeid, b.mcprocessid from fo_companyhierarchy_d a, fo_companyhierarchy_d h left outer join fo_usercompanypermission_m b on (h.companyid = b.companyid and b.loginid =? and b.status in ('Y', 'P')) where a.companyid = ? and a.topparentid = h.topparentid)a left outer join fo_mc_buildprocess_m b on (a.mcprocessid = b.processid and b.status in ('R', 'P')) where a.companyid = c.companyid and c.status = 'Y' order by rownumber
adsql.updateParentHieracheyUser=update fo_usercompanypermission_m set status='N' where loginid in ( select loginid from fo_member_m where companyid in ( select h.companyid from fo_companyhierarchy_d c,fo_companyhierarchy_d h where c.companyid=? and c.topparentid=h.topparentid and h.status='Y' )) and companyid not in ( select h.companyid from fo_companyhierarchy_d c,fo_companyhierarchy_d h where c.companyid=? and c.topparentid=h.topparentid and h.status='Y' )
adsql.updateLegalEntityIntheHirarchy=update fo_companyhierarchy_d set legalentity = ? where companyid = ? and status = 'Y'
#adsql.getUserProfileDetails=select m.loginid,	m.companyid,	c.parentid legalEntity,	loginname,	firstname,	lastname,	m.roletypeid,	c.companyname,	r.roledesc from fo_member_m m, fo_company_m c,fo_roletypes_m r where m.companyid = c.companyid and r.roletypeid = m.roletypeid and m.status = 'Y' and m.loginid =? and c.status='Y'
adsql.getUserProfileDetails=select m.loginid, m.companyid, c.parentid legalEntity, loginname, firstname, lastname, m.roletypeid, c.companyname, r.roledesc, refacctnbr, acctname from fo_member_m m left outer join fo_accountmaster_m a on (a.companyid = m.companyid and a.accttypeid = 'I' and a.status = 'Y'), fo_company_m c, fo_roletypes_m r where m.companyid = c.companyid and r.roletypeid = m.roletypeid and m.status = 'Y' and m.loginid = ? and c.status = 'Y'
adsql.getUserEntityReportByUser=select x.companyid,x.companyname,x.roledesc,x.lvl+1 lvl,x.csid,coalesce(y.portfolioNumber, 'None') portfolioNumber,coalesce(y.portfolioName, 'None') portfolioName from(select	a.companyid,	c.companyname,c.gfcid csid,	coalesce(b.roledesc, 'No Access') roledesc,	a.lvl,	a.companylvl,a.rownumber from fo_company_m c,(select h.companyid,h.rownumber,h.lvl,a.lvl companylvl,coalesce(b.roletypeid, 'N') roletypeid,b.mcprocessid	from fo_companyhierarchy_d a,fo_companyhierarchy_d h	left outer join fo_usercompanypermission_m b on(h.companyid = b.companyid and b.loginid = ? and b.status ='Y') where a.companyid = ? and a.topparentid = h.topparentid)a left outer join fo_roletypes_m b on	(a.roletypeid = b.roletypeid) where a.companyid=c.companyid order by lvl)x left outer join (select companyid,status,accttypeid,refacctnbr portfolioNumber,acctname portfolioName from fo_accountmaster_m) y on(x.companyid = y.companyid and y.status='Y' and y.accttypeid='I') order by rownumber
adsql.getUserEntityReportBycompanyId=select x.companyid, x.companyname, x.lvl+1 lvl,x.csid, coalesce(y.portfolioNumber, 'None') portfolioNumber, coalesce(y.portfolioName, 'None') portfolioName from ( select a.companyid, c.companyname,c.gfcid csid, a.lvl, a.companylvl, a.rownumber from fo_company_m c, ( select h.companyid, h.rownumber, h.lvl, a.lvl companylvl from fo_companyhierarchy_d a, fo_companyhierarchy_d h where a.companyid = ? and a.topparentid = h.topparentid)a where a.companyid = c.companyid order by lvl)x left outer join ( select companyid, status, accttypeid, refacctnbr portfolioNumber, acctname portfolioName from fo_accountmaster_m) y on (x.companyid = y.companyid and y.status = 'Y' and y.accttypeid = 'I') order by rownumber
adsql.getUserEntityCSVReport=select distinct x.lvl+1 lvl, x.companyname, x.loginid, m.loginname, csid, roledesc, coalesce(y.portfolioNumber, 'None') portfolioNumber, coalesce(y.portfolioName, 'None') portfolioName, dealingMaacAccount, dealingMACCName, incomingMaacAccount, incomingMACCName, currencycode, rownumber from ( select a.companyid, c.companyname, c.gfcid csid, a.loginid, r.roledesc roledesc, a.lvl, a.companylvl, a.rownumber from fo_company_m c, ( select h.companyid, h.rownumber, h.lvl, a.lvl companylvl, b.loginid, b.roletypeid, b.mcprocessid from fo_companyhierarchy_d a, fo_companyhierarchy_d h left outer join fo_usercompanypermission_m b on (h.companyid = b.companyid and b.loginid = ? and b.status = 'Y') where a.companyid = ? and a.topparentid = h.topparentid)a left outer join fo_roletypes_m r on (r.roletypeid = a.roletypeid) where a.companyid = c.companyid)x left outer join ( select distinct am.companyid, po.refacctnbr portfolioNumber, po.acctname PortfolioName, dda.refacctnbr dealingMaacAccount, dda.acctname dealingMACCName, dda.macfundacctnbr incomingMaacAccount, dda.macfundacctname incomingMACCName, g.currencycode from fo_group_m g, fo_accountmaster_m am, fo_acct_association_m ac, fo_acct_association_m ac1, fo_accountmaster_m dda, fo_accountmaster_m po where g.groupid = ac.groupid and ac.groupid = ac1.groupid and ac.fromaccttype = 'I' and ac.toaccttype = '207' and ac1.fromaccttype = '207' and ac1.toaccttype = '209' and ac.toacctnbr = am.acctnbr and ac1.fromacctnbr = am.acctnbr and am.accttypeid = '207' and am.parentid = dda.acctnbr and po.acctnbr = ac.fromacctnbr and po.accttypeid = 'I' and po.status = 'Y' and am.status = 'Y' and ac.status = 'Y' and ac1.status = 'Y' and dda.status = 'Y' and g.status = 'Y' ) y on (x.companyid = y.companyid), fo_member_m m where m.loginid=x.loginid order by rownumber,m.loginname,dealingMACCName
adsql.getUserEntityCSVReportByClient=select lvl+1 lvl, companyname,csid, portfolioNumber, portfolioName, dealingMaacAccount, dealingMACCName, incomingMaacAccount, incomingMACCName, currencycode, rownumber , uc.loginid, uc.loginname , uc.roledesc from ( select distinct x.lvl, x.companyid, x.companyname,x.csid, coalesce(y.portfolioNumber, 'None') portfolioNumber, coalesce(y.portfolioName, 'None') portfolioName, dealingMaacAccount, dealingMACCName, incomingMaacAccount, incomingMACCName, currencycode, rownumber from ( select a.companyid, c.companyname,c.gfcid csid, a.lvl, a.companylvl, a.rownumber from fo_company_m c, ( select h.companyid, h.rownumber, h.lvl, a.lvl companylvl from fo_companyhierarchy_d a, fo_companyhierarchy_d h where a.companyid = ? and a.topparentid = h.topparentid)a where a.companyid = c.companyid)x left outer join ( select distinct am.companyid, po.refacctnbr portfolioNumber, po.acctname PortfolioName, dda.refacctnbr dealingMaacAccount, dda.acctname dealingMACCName, dda.macfundacctnbr incomingMaacAccount, dda.macfundacctname incomingMACCName, g.currencycode from fo_group_m g, fo_accountmaster_m am, fo_acct_association_m ac, fo_acct_association_m ac1, fo_accountmaster_m dda, fo_accountmaster_m po where g.groupid = ac.groupid and ac.groupid = ac1.groupid and ac.fromaccttype = 'I' and ac.toaccttype = '207' and ac1.fromaccttype = '207' and ac1.toaccttype = '209' and ac.toacctnbr = am.acctnbr and ac1.fromacctnbr = am.acctnbr and am.accttypeid = '207' and am.parentid = dda.acctnbr and po.acctnbr = ac.fromacctnbr and po.accttypeid = 'I' and po.status = 'Y' and am.status = 'Y' and ac.status = 'Y' and ac1.status = 'Y' and dda.status = 'Y' and g.status = 'Y' ) y on (x.companyid = y.companyid) )z left outer join ( select uc.companyid, uc.loginid, m.loginname, r.roledesc, uc.status from fo_usercompanypermission_m uc left outer join fo_roletypes_m r on (uc.roletypeid = r.roletypeid) , fo_member_m m where uc.status = 'Y' and uc.loginid = m.loginid) uc on (z.companyid = uc.companyid and uc.status = 'Y') order by rownumber, loginname, dealingMACCName
adsql.getCategoryUsersList=select m.loginid "key", m.loginname, m.firstname || ' ' || m.lastname "value" from fo_member_m m, fo_company_m c, fo_companycategory_m ct where m.companyid = c.companyid and c.companycatid = ct.companycatid and c.companycatid = ? and m.status = 'Y' order by "value"
adsql.getEntityUsersList=select m.loginid "key", m.loginname, m.firstname || ' ' || m.lastname "value" from fo_member_m m where m.companyid = ? order by "value"
adsql.getClientMACCDetails=SELECT DISTINCT am.companyid, po.refacctnbr portfolioNumber, po.acctname portfolioName, dda.refacctnbr dealingMaacAccount, dda.acctname dealingMACCName, dda.macfundacctnbr incomingMaacAccount, dda.macfundacctname incomingMACCName,dda.nominatedacctnbr,dda.nominatedacctname, g.currencycode FROM fo_group_m g, fo_accountmaster_m am, fo_acct_association_m ac, fo_acct_association_m ac1, fo_accountmaster_m dda, fo_accountmaster_m po WHERE g.groupid = ac.groupid AND ac.groupid = ac1.groupid AND ac.fromaccttype = 'I' AND ac.toaccttype = '207' AND ac1.fromaccttype = '207' AND ac1.toaccttype = '209' AND ac.toacctnbr = am.acctnbr AND ac1.fromacctnbr = am.acctnbr AND am.accttypeid = '207' AND am.parentid = dda.acctnbr AND po.acctnbr = ac.fromacctnbr AND po.accttypeid = 'I' AND po.status = 'Y' AND am.status = 'Y' AND ac.status = 'Y' AND ac1.status = 'Y' AND dda.status = 'Y' AND g.status = 'Y' and g.companyid=? order by dealingMACCName
adsql.getBusinessEntitiesByLoginId = with recursive t as (select companyid,gfcid,companyname ,parentid,companycatid,legalentity,status from fo_company_m cm where companyid in (select companyid from fo_up_company_m where loginid = ? and status = 'Y' and companyid = companyid and companyid not in (select companyid from fo_company_m where companycatid = '100'))union all select t_2.companyid,t_2.gfcid,t_2.companyname,t_2.parentid,t_2.companycatid,t_2.legalentity,t_2.status from fo_company_m as t_2,t where t.parentid = t_2.companyid) select distinct companyid,gfcid,companyname,parentid, upper(trim(companyname)) ucompanyname,legalentity from t where companycatid = ? and status = 'Y' order by ucompanyname
adsql.getClientUserListByBusEntityId=select m.loginid "key", m.loginname, m.firstname || ' ' || m.lastname "value" from fo_companyhierarchy_d h, fo_company_m c, fo_member_m m where h.legalentity=? and h.companyid=c.companyid and c.status='Y' and c.companyid=m.companyid and m.status='Y' order by loginname
adsql.getAssignUserRolesList=select m.loginname, case when m.companyid = u.companyid then true else false end baseclient, m.firstname, m.lastname, r.roledesc from fo_usercompanypermission_m u, fo_member_m m, fo_roletypes_m r where u.companyid =? and u.loginid = m.loginid and u.roletypeid <> 'N' and u.status = 'Y' and u.roletypeid = r.roletypeid and m.status = 'Y' order by m.loginname
adsql.getClientUserListByBusLogin=with recursive t as ( select companyid, gfcid, companyname , parentid, companycatid, legalentity, status from fo_company_m cm where companyid in ( select companyid from fo_up_company_m where loginid = ? and status = 'Y' and companyid = companyid and companyid not in ( select companyid from fo_company_m where companycatid = '100')) union all select t_2.companyid, t_2.gfcid, t_2.companyname, t_2.parentid, t_2.companycatid, t_2.legalentity, t_2.status from fo_company_m as t_2, t where t.parentid = t_2.companyid) select distinct m.loginid "key", m.loginname, m.firstname || ' ' || m.lastname "value" from t,fo_companyhierarchy_d h,fo_company_m c,fo_member_m m where t.companycatid = '400' and t.status = 'Y' and t.legalentity='Y' and t.companyid=h.legalentity and h.companyid=c.companyid and c.status='Y' and c.companyid=m.companyid and m.status='Y' order by loginname
adsql.getAssignedUsersList=select * from ( select m.loginname, case when m.companyid = u.companyid then true else false end baseclient, m.firstname, m.lastname, r.roledesc from fo_usercompanypermission_m u, fo_member_m m, fo_roletypes_m r where u.companyid = ? and m.companyid <> ? and u.loginid = m.loginid and u.roletypeid <> 'N' and u.status = 'Y' and u.roletypeid = r.roletypeid and m.status = 'Y' union select m.loginname, case when m.companyid = u.companyid then true else false end baseclient, m.firstname, m.lastname, r.roledesc from fo_usercompanypermission_m u, fo_member_m m, fo_roletypes_m r where u.companyid <> ? and m.companyid = ? and u.loginid = m.loginid and u.roletypeid <> 'N' and u.status = 'Y' and u.roletypeid = r.roletypeid and m.status = 'Y' ) t order by loginname

## TIAA TOKEN VALIDATION
adsql.getPublicKey=select pkey , jwks, EXTRACT(EPOCH FROM (current_timestamp - createddate )) > ?::double precision flag from fo_tiaatoken_details_m where kid=?
adsql.deletePublicKeyAndJWKS=DELETE from fo_tiaatoken_details_m where  kid = ?
adsql.insertPublicKeyAndJWKS=INSERT INTO fo_tiaatoken_details_m  (kid, pkey, jwks) VALUES(?,?, to_json(?::json) )
adsql.getFractionalSharePolicyMap = SELECT fractionalid, fractionalvalue FROM	fo_fractional_sharepolicy_m  WHERE status='Y'
adsql.getFundGroupIds=SELECT  groupid FROM fo_group_m where companyid = ? AND prodid  =? AND currencycode  =? and status=?

## Gates
adsql.getGatesPrividerList = SELECT companyid, companyname FROM  fo_company_m  WHERE companycatid ='600' AND status='Y' ORDER BY UPPER(TRIM(companyname))      
adsql.getInvestmentetails=select * from (select     t.*,row_number () over (order by  gatestartdate desc,case when transtype = '10' then 1 else 2 end desc, fundProviderDesc desc,fundfamilyDesc desc,fundDesc desc) rnum from ( select gateid, providerid, familyid, fundnbr, coalesce(b.gateStartDate, a.gatestartdate)gatestartdate, coalesce(b.gatesEndDate, a.gateenddate)gateenddate, coalesce(b.transtype, a.transtype)transtype , coalesce(b.reason, a.reason)reason, coalesce(b.fundProviderDesc,( select companyname from fo_company_m cm where cm.companyid = a.providerid))fundProviderDesc, coalesce (b.fundfamilyDesc, ( select prodname from fo_product_m pm where pm.prodid = a.familyid))fundfamilyDesc, coalesce (b.Funddesc, ( select fundcode || '-' || funddesc from fo_mmf_fund_m pm where pm.fundnbr = a.fundnbr))fundDesc, case when b.processid is null then a.status else b.status end status, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, coalesce(a.modifiedby, a.createdby) createdby, a.createddate createdDate, a.modifiedby, b.rejectedreason rejectedReason, b.newvalues, b.oldvalues, b.filters, b.originalvalues, count(*) over() cnt, case when a.gatestartdate > ?::date then 'YES' else 'NO' end disablestartdate, 
adsql.getInvestmentetailsck=select * from (select     t.*,row_number () over (order by  gatestartdate desc,case when transtype = '10' then 1 else 2 end desc, fundProviderDesc desc,fundfamilyDesc desc,fundDesc desc) rnum from ( select gateid, providerid, familyid, fundnbr, case when b.status = 'R' then a.gatestartdate else coalesce(b.gateStartDate, a.gatestartdate)  end gatestartdate, case when b.status = 'R' then  a.gateenddate else  coalesce(b.gatesEndDate, a.gateenddate) end  gateenddate, coalesce(b.transtype, a.transtype)transtype , coalesce(b.reason, a.reason)reason, coalesce(b.fundProviderDesc,( select companyname from fo_company_m cm where cm.companyid = a.providerid))fundProviderDesc, coalesce (b.fundfamilyDesc, ( select prodname from fo_product_m pm where pm.prodid = a.familyid))fundfamilyDesc, coalesce (b.Funddesc, ( select fundcode || '-' || funddesc from fo_mmf_fund_m pm where pm.fundnbr = a.fundnbr))fundDesc, case when b.processid is null then a.status else b.status end status, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, coalesce(a.modifiedby, a.createdby) createdby, a.createddate createdDate, a.modifiedby, b.rejectedreason rejectedReason, b.newvalues, b.oldvalues, b.filters, b.originalvalues, count(*) over() cnt, case when a.gatestartdate > ?::date then 'YES' else 'NO' end disablestartdate, 
adsql.insertfundgates=insert into fo_fund_gates_m (gateid, providerid, familyid, fundnbr, isin, gatestartdate, gateenddate, feepercentage, initiategate, transtype, createdby, createddate, status, mcprocessid,reason ) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
adsql.fundGatesUpdate = update fo_fund_gates_m set gatestartdate = ? , gateenddate = ? ,reason = ?, modifiedby = ?, modifieddate = ?  where mcprocessid = ? 
adsql.getRedeemeptionDetails=select t.*,row_number () over (order by  createddate) rnum from ( select providerid, familyid, fundnbr, comments, ( select companyname from fo_company_m cm where cm.companyid = a.providerid)fundProviderDesc, ( select prodname from fo_product_m pm where pm.prodid = a.familyid)fundfamilyDesc, (fundcode || '-' || funddesc)fundDesc, case when b.processid is null then a.status else b.status end status, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, coalesce(a.modifiedby, a.createdby) createdby, a.createddate createdDate, a.modifiedby, rejectedreason rejectedReason, b.newvalues, b.oldvalues, b.filters, b.originalvalues, a.amount, a.percentage,a.mode,a.recordexist,fundcode,amtdecimals,ccyroundtype from ( select c.providerid, c.familyid, c.fundnbr, d.comments, d.createddate createdDate, d.modifiedby, d.mcprocessid, d.status, d.createdby, d.amount, d.percentage,d.mode,case when (d.providerid is not null and d.familyid is not null and d.fundnbr is not null)then 'Y' else 'N' end recordexist,trim(c.fundcode)fundcode,c.funddesc,(select fpm.amtdecimals from fo_productparameter_m fpm,fo_group_m fgm,fo_company_m fcm where fpm.groupid = fgm.groupid and fgm.companyid = fcm.companyid and fcm.companycatid = '300' and fgm.status = 'Y' and fcm.status = 'Y' and fgm.prodid = c.fundnbr) amtdecimals,(select fpm.ccyroundtype from fo_productparameter_m fpm,fo_group_m fgm,fo_company_m fcm where fpm.groupid = fgm.groupid and fgm.companyid = fcm.companyid and fcm.companycatid = '300' and fgm.status = 'Y' and fcm.status = 'Y' and fgm.prodid = c.fundnbr) ccyroundtype from fo_mmf_fund_m c left outer join fo_fund_gates_fees_d d on ( c.providerid = d.providerid and c.familyid = d.familyid and c.fundnbr = d.fundnbr and d.status in ( 'Y', 'P' )) where c.providerid = ? and c.familyid = ? and c.fundnbr = case when ? = 'ALL'  then c.fundnbr else ? end )a left outer join fo_mc_buildprocess_m b on ( a.mcprocessid = b.processid )
adsql.insertUpdateRedemptionFees=with b as ( select ? providerid , ? familyid , ? fundnbr, ? gatecomment, ? createdby, ?::TIMESTAMP createddate, ? status, ? gatemode, ?::numeric amount, ?::numeric percentage, ? mcprocessid) , upd as ( update fo_fund_gates_fees_d a set status = b.status, modifiedby = b.createdby, modifieddate = b.createddate,amount=b.amount,percentage=b.percentage,comments=b.gatecomment, mode=b.gatemode from b where a.mcprocessid = b.mcprocessid returning a.fundnbr ) insert into fo_fund_gates_fees_d (providerid, familyid, fundnbr, createdby, createddate, status, mode, amount, percentage, comments, mcprocessid) select providerid, familyid, fundnbr, createdby, createddate, status, gatemode, amount, percentage, gatecomment, mcprocessid from b where (b.providerid, b.familyid, b.fundnbr) not in ( select providerid, familyid, fundnbr from upd)
adsql.getInvestmentetailsEdit=select * from ( select gateid, providerid, familyid, fundnbr, gatestartdate, gateenddate,transtype,reason, ( select companyname from fo_company_m cm where cm.companyid = a.providerid)fundProviderDesc, ( select prodname from fo_product_m pm where pm.prodid = a.familyid)fundfamilyDesc, ( select fundcode||'-'||funddesc from fo_mmf_fund_m pm where pm.fundnbr = a.fundnbr)fundDesc, case when b.processid is null then a.status else b.status end status, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, coalesce(a.modifiedby, a.createdby) createdby, a.createddate createdDate,a.modifiedby, rejectedreason rejectedReason, b.newvalues, b.oldvalues, b.filters, b.originalvalues from fo_fund_gates_m a left outer join fo_mc_buildprocess_m b on ( a.mcprocessid = b.processid ) where a.status in ( 'Y', 'P' ) 
adsql.getInvestmentdateRanges=select * from ( select  gateid, gatestartdate, gateenddate, a.createddate createdDate from fo_fund_gates_m a left outer join fo_mc_buildprocess_m b on ( a.mcprocessid = b.processid ) where a.status in ( 'Y', 'P' ) 
adsql.getInvestmenteSearchDetails=   row_number () over ( order by gatestartdate desc, case when transtype = '10' then 1 else 2 end desc, fundProviderDesc desc, fundfamilyDesc desc, fundDesc desc) rnum from ( select t.* from ( select gateid, providerid, familyid, fundnbr, coalesce(b.gateStartDate, a.gatestartdate)gatestartdate, coalesce(b.gatesEndDate, a.gateenddate)gateenddate, coalesce(b.transtype, a.transtype)transtype , coalesce(b.reason, a.reason)reason, coalesce(b.fundProviderDesc,( select companyname from fo_company_m cm where cm.companyid = a.providerid))fundProviderDesc, coalesce (b.fundfamilyDesc, ( select prodname from fo_product_m pm where pm.prodid = a.familyid))fundfamilyDesc, coalesce (b.Funddesc, ( select fundcode || '-' || funddesc from fo_mmf_fund_m pm where pm.fundnbr = a.fundnbr))fundDesc, case when b.processid is null then a.status else b.status end status, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, coalesce(a.modifiedby, a.createdby) createdby, a.createddate createdDate, a.modifiedby, b.rejectedreason rejectedReason, b.newvalues, b.oldvalues, b.filters, b.originalvalues, case when a.gatestartdate >= ?::date then 'YES' else 'NO' end disablestartdate,case when coalesce(b.gatesEndDate, a.gateenddate) >= ?::date and a.status <> 'N' then 'A' else 'H' end fundhistorystatus, a.status cntstatus 
adsql.getInvestmentSeatchDetailsck=   row_number () over ( order by gatestartdate desc, case when transtype = '10' then 1 else 2 end desc, fundProviderDesc desc, fundfamilyDesc desc, fundDesc desc) rnum from ( select t.* from ( select gateid, providerid, familyid, fundnbr, case when b.status = 'R' then a.gatestartdate else coalesce(b.gateStartDate, a.gatestartdate) end gatestartdate, case when b.status = 'R' then a.gateenddate else coalesce(b.gatesEndDate, a.gateenddate) end gateenddate, coalesce(b.transtype, a.transtype)transtype , coalesce(b.reason, a.reason)reason, coalesce(b.fundProviderDesc,( select companyname from fo_company_m cm where cm.companyid = a.providerid))fundProviderDesc, coalesce (b.fundfamilyDesc, ( select prodname from fo_product_m pm where pm.prodid = a.familyid))fundfamilyDesc, coalesce (b.Funddesc, ( select fundcode || '-' || funddesc from fo_mmf_fund_m pm where pm.fundnbr = a.fundnbr))fundDesc, case when b.processid is null then a.status else b.status end status, mcprocessid processId, case when b.processid is null then a.status else b.status end mcStatus, b.action as type, coalesce(a.modifiedby, a.createdby) createdby, a.createddate createdDate, a.modifiedby, b.rejectedreason rejectedReason, b.newvalues, b.oldvalues, b.filters, b.originalvalues, case when a.gatestartdate >= ?::date then 'YES' else 'NO' end disablestartdate,case when coalesce(b.gatesEndDate, a.gateenddate) >= ?::date and a.status <> 'N' then 'A' else 'H' end fundhistorystatus, a.status cntstatus 
adsql.getGatesDetails = select processid,status from fo_fund_gates_m ffgm where providerid = ? and familyid = ? and fundnbr  = ? and transtype = ? and gatestartdate = ? and gateenddate = ?
adsql.updateGates = update fo_fund_gates_m set status = ? where mcprocessid = ?
adsql.getUpdateGates = update fo_fund_gates_m set mcprocessid = ? where gateid = ? and status !='N'
## End Gates
