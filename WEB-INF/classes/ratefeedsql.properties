rfsql.setRateFeedData= insert into fo_ratefeed_d values(?::numeric,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?::numeric,?,?,?,?,?,?,?,?,now())
rfsql.setNavFeedData=insert into fo_navfeed_d values(?::numeric,?,?,?,?,?,?,?,?,?,?)
rfsql.setFeedExceptionsData=insert into fo_feedexceptions_d values(?::numeric,?,?,?,?,?)
rfsql.setBatchFeedData=insert into fo_batchfeed_d(batchid, batchname,batchruntime,autorun, totalprocessed, totalsuccessful, totalerrors,status,createdby) values(?,?,now(),?,?,?,?,?,?)
rfsql.updateBatchFeedData=update fo_batchfeed_d set totalprocessed=?, totalsuccessful=?,totalerrors=?,totalNoresponse=?,status=?,comments=?,responsecode=?,createddate=now() where batchid=?
rfsql.updateFeedFundMaster=update fo_mmf_fund_m set nav=?::numeric, domicilecountrycode=?, cutofftime=?, lastfeedupdate=?::timestamp,policyid=?,fundshareclassid=? where upper(fundcode)=? and upper(currencycode)=? and status=?
rfsql.updateFeedFundPH=update fo_fund_placeholders_d set factcardurl=? where phid=?::smallint and fundnbr in (select fundnbr from fo_mmf_fund_m where upper(fundcode)=?  and upper(currencycode)=? and status=?)
rfsql.insertFeedFundPH=insert into fo_fund_placeholders_d select ?::int,fundnbr,? from fo_mmf_fund_m where fundnbr in (select fundnbr from fo_mmf_fund_m where upper(fundcode)=? and upper(currencycode)=? and status=?)
#rfsql.updateFeedFundFact=update fo_mmf_fundfact_m set aum=?::numeric, oneyearyield=?::numeric, cutoff=? where fundnbr in (select fundnbr from fo_mmf_fund_m where upper(fundcode)=?  and upper(currencycode)=? and status=?)
rfsql.updateFeedFundFact=update fo_mmf_fundfact_m set aum= case when ?=1 then ?::numeric else aum end,lastaumupdate = case when ?=1 then ? else lastaumupdate end, oneyearyield=case when ?=1 then ?::numeric else oneyearyield end, lastyieldupdate =case when ?=1 then ? else lastyieldupdate end, cutoff=case when ?=1 then ? else cutoff end where fundnbr in (select fundnbr from fo_mmf_fund_m where upper(fundcode)=?  and upper(currencycode)=? and status=?)
rfsql.updateFeedFundCost= update fo_costs_fees_d set val=?  where costtypeid='PC' and feetypeid=? and fundnbr in (select fundnbr from fo_mmf_fund_m where upper(fundcode)=?  and upper(currencycode)=? and status=?)
rfsql.insertFeedFundCost= insert into fo_costs_fees_d select 'PC',?,fundnbr,?,'Y',now(),'10520',null,null,null from fo_mmf_fund_m where fundnbr in (select fundnbr from fo_mmf_fund_m where upper(fundcode)=?  and upper(currencycode)=? and status=?)
rfsql.insertFeedFundAvail=INSERT INTO FO_FUNDAVAILABLITY_M (fundnbr,countrycode, status,createddate,createdby,modifieddate,modifiedby,batchid) select distinct fundnbr,a,?,now(),?,now(),?,? from fo_mmf_fund_m fund, (SELECT a FROM unnest(string_to_array(?,',')) AS a) temp where upper(fundcode)=? and upper(currencycode)=? and status=? ON CONFLICT  (fundnbr,countrycode) DO UPDATE SET status = 'Y', modifieddate=now(),batchid=?;
rfsql.updateFeedFundAvail=update FO_FUNDAVAILABLITY_M set status='N' where fundnbr in (select fundnbr from fo_mmf_fund_m where upper(fundcode)=?  and upper(currencycode)=? and status=?) and batchid::numeric<>?::numeric
rfsql.getAllFundCountries=SELECT countrycode, countryname FROM FO_FUND_COUNTRY_M  WHERE status=?
rfsql.getAllFundTimeZones=SELECT tzcode, tzname FROM FO_FUND_TIMEZONE_M  WHERE status=?
rfsql.getAllFundDivFrequency=SELECT policyid, policycode FROM FO_DISPOLICY_M  WHERE status=?
rfsql.getAllFundIsinCurrency=select upper(fundcode) || '-' || upper(currencycode) isincurr,upper(fundcode) fundcode from fo_mmf_fund_m where status=?
rfsql.updateRateFeedData=update fo_ratefeed_d set status=?, FieldsUpdated=?,FieldsNotUpdated=?,navupdated =? where ratefeedid::numeric=?::numeric and batchid=?
rfsql.setBatchFailedIsin=insert into fo_batchfailedisin_d(failedid, batchid,fundcode,currencycode,status,createdby) values(nextval('batchfailedseq'),?,?,?,?,?)
rfsql.getLastNavYieldDates=select max(lastnavupdate) lastnavupdate,max(lastyieldupdate) lastyieldupdate from fo_mmf_fund_m m,fo_mmf_fundfact_m ff where m.fundnbr=ff.fundnbr and fundcode=? and currencycode=? and m.status=?
rfsql.getApplicationConfig=select configname, configvalue,category from fo_applicationconfig_m  where status=? and configvalue is not null and category in ('RFEXTERNALINFO','AWSSECURITYMGR','FORCEBATCHEXEC')
rfsql.getRfApplicationConfig=select configname, configvalue from fo_applicationconfig_m  where status=? and configvalue is not null and category ='RFSCHEDULEPARAMS'
rfsql.getPrevFundDetails=select distinct  nav, lastnavupdate ,aum,lastaumupdate,oneyearyield,lastyieldupdate ,(select val from fo_costs_fees_d where costtypeid='PC' and feetypeid='102' and fundnbr=a.fundnbr) ongcost,(select val from fo_costs_fees_d where costtypeid='PC' and feetypeid='103' and fundnbr=a.fundnbr) trncost,(select val from fo_costs_fees_d where costtypeid='PC' and feetypeid='105' and fundnbr=a.fundnbr) inccost from fo_mmf_fund_m a, fo_mmf_fundfact_m b where fundcode=? and  currencycode=? and a.status=? and a.fundnbr=b.fundnbr 
rfsql.getUnusualConfig=select unusualid, oldParamName,newParamName,operationId,operationvalue,status from fo_rfunusualcheck_m  where status=?
rfsql.updateDailyiterations=update fo_applicationconfig_m set configvalue=? where configid='115'
rfsql.getHolidays=select to_char(hdate, c.dbdateformat) holiday from fo_holiday_m b, fo_group_m a, fo_company_m c where c.companyid = ? and a.companyid = c.companyid and b.hdate >= FN_GET_GROUP_TZTIME(a.groupid)- ?::interval and b.groupid = a.groupid order by hdate
rfsql.getWeekEndDays=select dayid from fo_company_m a, fo_group_m b, fo_pr_holiday_m c where a.companyid = ? and b.companyid = a.companyid and c.groupid = b.groupid
rfsql.getDeskTimeZones=select b.javatzcode, a.jobtime, a.tzcode, a.companyid, a.companyname, a.dateformat, a.dbdateformat from fo_company_m a, fo_timezone_m b where a.tzcode = b.tzcode and a.companycatid = ? and a.status = ? and dbdateformat is not null and dateformat is not null
rfsql.getRateFeedPostingJobStatus=select lastrun lastRunTime from fo_db_job_m where jobid = ? and lastrun::date = ?